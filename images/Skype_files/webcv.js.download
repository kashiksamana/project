/*! For license information please see webcv.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{2439:function(t,e,r){window,t.exports=function(t){var e={};function r(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)r.d(n,a,function(e){return t[e]}.bind(null,a));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=383)}([function(t,e,r){"use strict";r.r(e),r.d(e,"AdadeltaOptimizer",(function(){return Er})),r.d(e,"AdagradOptimizer",(function(){return qr})),r.d(e,"AdamOptimizer",(function(){return nn})),r.d(e,"AdamaxOptimizer",(function(){return pn})),r.d(e,"MomentumOptimizer",(function(){return Cn})),r.d(e,"Optimizer",(function(){return zr})),r.d(e,"RMSPropOptimizer",(function(){return Nn})),r.d(e,"SGDOptimizer",(function(){return zn})),r.d(e,"Tensor",(function(){return mt.a})),r.d(e,"TensorBuffer",(function(){return mt.b})),r.d(e,"Variable",(function(){return mt.c})),r.d(e,"Rank",(function(){return qn.a})),r.d(e,"sumOutType",(function(){return qn.b})),r.d(e,"upcastType",(function(){return qn.c})),r.d(e,"abs",(function(){return Kn.b})),r.d(e,"acos",(function(){return Kn.c})),r.d(e,"acosh",(function(){return Kn.d})),r.d(e,"add",(function(){return Kn.e})),r.d(e,"addN",(function(){return Kn.f})),r.d(e,"all",(function(){return Kn.h})),r.d(e,"any",(function(){return Kn.i})),r.d(e,"argMax",(function(){return Kn.j})),r.d(e,"argMin",(function(){return Kn.k})),r.d(e,"asin",(function(){return Kn.l})),r.d(e,"asinh",(function(){return Kn.m})),r.d(e,"atan",(function(){return Kn.n})),r.d(e,"atan2",(function(){return Kn.o})),r.d(e,"atanh",(function(){return Kn.p})),r.d(e,"avgPool",(function(){return Kn.q})),r.d(e,"avgPool3d",(function(){return Kn.r})),r.d(e,"basicLSTMCell",(function(){return Kn.s})),r.d(e,"batchToSpaceND",(function(){return Kn.x})),r.d(e,"batchNorm",(function(){return Kn.t})),r.d(e,"batchNorm2d",(function(){return Kn.u})),r.d(e,"batchNorm3d",(function(){return Kn.v})),r.d(e,"batchNorm4d",(function(){return Kn.w})),r.d(e,"bincount",(function(){return Kn.y})),r.d(e,"broadcastTo",(function(){return Kn.A})),r.d(e,"buffer",(function(){return Kn.B})),r.d(e,"cast",(function(){return Kn.C})),r.d(e,"ceil",(function(){return Kn.D})),r.d(e,"clipByValue",(function(){return Kn.E})),r.d(e,"clone",(function(){return Kn.F})),r.d(e,"complex",(function(){return Kn.G})),r.d(e,"concat",(function(){return Kn.H})),r.d(e,"concat1d",(function(){return Kn.I})),r.d(e,"concat2d",(function(){return Kn.J})),r.d(e,"concat3d",(function(){return Kn.K})),r.d(e,"concat4d",(function(){return Kn.L})),r.d(e,"conv1d",(function(){return Kn.M})),r.d(e,"conv2d",(function(){return Kn.N})),r.d(e,"conv2dTranspose",(function(){return Kn.O})),r.d(e,"conv3d",(function(){return Kn.P})),r.d(e,"conv3dTranspose",(function(){return Kn.Q})),r.d(e,"cos",(function(){return Kn.R})),r.d(e,"cosh",(function(){return Kn.S})),r.d(e,"cumsum",(function(){return Kn.U})),r.d(e,"denseBincount",(function(){return Kn.V})),r.d(e,"depthToSpace",(function(){return Kn.W})),r.d(e,"depthwiseConv2d",(function(){return Kn.X})),r.d(e,"diag",(function(){return Kn.Y})),r.d(e,"dilation2d",(function(){return Kn.Z})),r.d(e,"div",(function(){return Kn.ab})),r.d(e,"divNoNan",(function(){return Kn.bb})),r.d(e,"dot",(function(){return Kn.db})),r.d(e,"elu",(function(){return Kn.fb})),r.d(e,"equal",(function(){return Kn.hb})),r.d(e,"erf",(function(){return Kn.jb})),r.d(e,"exp",(function(){return Kn.kb})),r.d(e,"expandDims",(function(){return Kn.lb})),r.d(e,"expm1",(function(){return Kn.mb})),r.d(e,"eye",(function(){return Kn.nb})),r.d(e,"fill",(function(){return Kn.pb})),r.d(e,"floor",(function(){return Kn.qb})),r.d(e,"floorDiv",(function(){return Kn.rb})),r.d(e,"gather",(function(){return Kn.tb})),r.d(e,"greater",(function(){return Kn.vb})),r.d(e,"greaterEqual",(function(){return Kn.wb})),r.d(e,"imag",(function(){return Kn.Ab})),r.d(e,"isFinite",(function(){return Kn.Eb})),r.d(e,"isInf",(function(){return Kn.Fb})),r.d(e,"isNaN",(function(){return Kn.Gb})),r.d(e,"leakyRelu",(function(){return Kn.Hb})),r.d(e,"less",(function(){return Kn.Ib})),r.d(e,"lessEqual",(function(){return Kn.Jb})),r.d(e,"linspace",(function(){return Kn.Nb})),r.d(e,"localResponseNormalization",(function(){return Kn.Ob})),r.d(e,"log",(function(){return Kn.Pb})),r.d(e,"log1p",(function(){return Kn.Qb})),r.d(e,"logSigmoid",(function(){return Kn.Rb})),r.d(e,"logSoftmax",(function(){return Kn.Sb})),r.d(e,"logSumExp",(function(){return Kn.Tb})),r.d(e,"logicalAnd",(function(){return Kn.Ub})),r.d(e,"logicalNot",(function(){return Kn.Vb})),r.d(e,"logicalOr",(function(){return Kn.Wb})),r.d(e,"logicalXor",(function(){return Kn.Xb})),r.d(e,"matMul",(function(){return Kn.Zb})),r.d(e,"max",(function(){return Kn.ac})),r.d(e,"maxPool",(function(){return Kn.bc})),r.d(e,"maxPool3d",(function(){return Kn.cc})),r.d(e,"maxPoolWithArgmax",(function(){return Kn.dc})),r.d(e,"maximum",(function(){return Kn.ec})),r.d(e,"mean",(function(){return Kn.gc})),r.d(e,"min",(function(){return Kn.hc})),r.d(e,"minimum",(function(){return Kn.ic})),r.d(e,"mirrorPad",(function(){return Kn.kc})),r.d(e,"mod",(function(){return Kn.lc})),r.d(e,"moments",(function(){return Kn.nc})),r.d(e,"mul",(function(){return Kn.pc})),r.d(e,"multiRNNCell",(function(){return Kn.rc})),r.d(e,"multinomial",(function(){return Kn.sc})),r.d(e,"neg",(function(){return Kn.tc})),r.d(e,"notEqual",(function(){return Kn.vc})),r.d(e,"oneHot",(function(){return Kn.xc})),r.d(e,"ones",(function(){return Kn.yc})),r.d(e,"onesLike",(function(){return Kn.zc})),r.d(e,"outerProduct",(function(){return Kn.Bc})),r.d(e,"pad",(function(){return Kn.Cc})),r.d(e,"pad1d",(function(){return Kn.Dc})),r.d(e,"pad2d",(function(){return Kn.Ec})),r.d(e,"pad3d",(function(){return Kn.Fc})),r.d(e,"pad4d",(function(){return Kn.Gc})),r.d(e,"pool",(function(){return Kn.Hc})),r.d(e,"pow",(function(){return Kn.Ic})),r.d(e,"prelu",(function(){return Kn.Kc})),r.d(e,"print",(function(){return Kn.Lc})),r.d(e,"prod",(function(){return Kn.Mc})),r.d(e,"rand",(function(){return Kn.Nc})),r.d(e,"randomGamma",(function(){return Kn.Oc})),r.d(e,"randomNormal",(function(){return Kn.Pc})),r.d(e,"randomUniform",(function(){return Kn.Qc})),r.d(e,"range",(function(){return Kn.Rc})),r.d(e,"real",(function(){return Kn.Sc})),r.d(e,"reciprocal",(function(){return Kn.Tc})),r.d(e,"relu",(function(){return Kn.Uc})),r.d(e,"relu6",(function(){return Kn.Vc})),r.d(e,"reshape",(function(){return Kn.Wc})),r.d(e,"reverse",(function(){return Kn.Xc})),r.d(e,"reverse1d",(function(){return Kn.Yc})),r.d(e,"reverse2d",(function(){return Kn.Zc})),r.d(e,"reverse3d",(function(){return Kn.ad})),r.d(e,"reverse4d",(function(){return Kn.bd})),r.d(e,"round",(function(){return Kn.dd})),r.d(e,"rsqrt",(function(){return Kn.ed})),r.d(e,"scalar",(function(){return Kn.fd})),r.d(e,"selu",(function(){return Kn.hd})),r.d(e,"separableConv2d",(function(){return Kn.id})),r.d(e,"setdiff1dAsync",(function(){return Kn.jd})),r.d(e,"sigmoid",(function(){return Kn.kd})),r.d(e,"sign",(function(){return Kn.ld})),r.d(e,"sin",(function(){return Kn.nd})),r.d(e,"sinh",(function(){return Kn.od})),r.d(e,"slice",(function(){return Kn.pd})),r.d(e,"slice1d",(function(){return Kn.qd})),r.d(e,"slice2d",(function(){return Kn.rd})),r.d(e,"slice3d",(function(){return Kn.sd})),r.d(e,"slice4d",(function(){return Kn.td})),r.d(e,"softmax",(function(){return Kn.ud})),r.d(e,"softplus",(function(){return Kn.vd})),r.d(e,"spaceToBatchND",(function(){return Kn.wd})),r.d(e,"fft",(function(){return Kn.ob})),r.d(e,"ifft",(function(){return Kn.zb})),r.d(e,"irfft",(function(){return Kn.Db})),r.d(e,"rfft",(function(){return Kn.cd})),r.d(e,"split",(function(){return Kn.zd})),r.d(e,"sqrt",(function(){return Kn.Ad})),r.d(e,"square",(function(){return Kn.Bd})),r.d(e,"squaredDifference",(function(){return Kn.Cd})),r.d(e,"squeeze",(function(){return Kn.Ed})),r.d(e,"stack",(function(){return Kn.Fd})),r.d(e,"step",(function(){return Kn.Gd})),r.d(e,"stridedSlice",(function(){return Kn.Hd})),r.d(e,"sub",(function(){return Kn.Id})),r.d(e,"sum",(function(){return Kn.Kd})),r.d(e,"tan",(function(){return Kn.Ld})),r.d(e,"tanh",(function(){return Kn.Md})),r.d(e,"tensor",(function(){return Kn.Nd})),r.d(e,"tensor1d",(function(){return Kn.Od})),r.d(e,"tensor2d",(function(){return Kn.Pd})),r.d(e,"tensor3d",(function(){return Kn.Qd})),r.d(e,"tensor4d",(function(){return Kn.Rd})),r.d(e,"tensor5d",(function(){return Kn.Sd})),r.d(e,"tensor6d",(function(){return Kn.Td})),r.d(e,"tile",(function(){return Kn.Ud})),r.d(e,"topk",(function(){return Kn.Vd})),r.d(e,"truncatedNormal",(function(){return Kn.Xd})),r.d(e,"unique",(function(){return Kn.Yd})),r.d(e,"unsortedSegmentSum",(function(){return Kn.Zd})),r.d(e,"unstack",(function(){return Kn.ae})),r.d(e,"variable",(function(){return Kn.be})),r.d(e,"where",(function(){return Kn.ce})),r.d(e,"whereAsync",(function(){return Kn.de})),r.d(e,"zeros",(function(){return Kn.ee})),r.d(e,"zerosLike",(function(){return Kn.fe})),r.d(e,"booleanMaskAsync",(function(){return Kn.z})),r.d(e,"equalStrict",(function(){return Kn.ib})),r.d(e,"greaterEqualStrict",(function(){return Kn.xb})),r.d(e,"greaterStrict",(function(){return Kn.yb})),r.d(e,"lessEqualStrict",(function(){return Kn.Kb})),r.d(e,"lessStrict",(function(){return Kn.Lb})),r.d(e,"notEqualStrict",(function(){return Kn.wc})),r.d(e,"addStrict",(function(){return Kn.g})),r.d(e,"divStrict",(function(){return Kn.cb})),r.d(e,"maximumStrict",(function(){return Kn.fc})),r.d(e,"minimumStrict",(function(){return Kn.jc})),r.d(e,"modStrict",(function(){return Kn.mc})),r.d(e,"mulStrict",(function(){return Kn.qc})),r.d(e,"powStrict",(function(){return Kn.Jc})),r.d(e,"squaredDifferenceStrict",(function(){return Kn.Dd})),r.d(e,"subStrict",(function(){return Kn.Jd})),r.d(e,"transpose",(function(){return Kn.Wd})),r.d(e,"norm",(function(){return Kn.uc})),r.d(e,"movingAverage",(function(){return Kn.oc})),r.d(e,"scatterND",(function(){return Kn.gd})),r.d(e,"sparseToDense",(function(){return Kn.xd})),r.d(e,"gatherND",(function(){return Kn.ub})),r.d(e,"dropout",(function(){return Kn.eb})),r.d(e,"enclosingPowerOfTwo",(function(){return Kn.gb})),r.d(e,"cosineWindow",(function(){return Kn.T})),r.d(e,"inTopKAsync",(function(){return Kn.Cb})),r.d(e,"op",(function(){return Kn.Ac})),r.d(e,"OP_SCOPE_SUFFIX",(function(){return Kn.a})),r.d(e,"image",(function(){return Kn.Bb})),r.d(e,"linalg",(function(){return Kn.Mb})),r.d(e,"losses",(function(){return Kn.Yb})),r.d(e,"spectral",(function(){return Kn.yd})),r.d(e,"fused",(function(){return Kn.sb})),r.d(e,"signal",(function(){return Kn.md})),r.d(e,"Reduction",(function(){return Bn.a})),r.d(e,"train",(function(){return Zn})),r.d(e,"enableProdMode",(function(){return ir.g})),r.d(e,"enableDebugMode",(function(){return ir.f})),r.d(e,"disableDeprecationWarnings",(function(){return ir.c})),r.d(e,"deprecationWarn",(function(){return ir.b})),r.d(e,"disposeVariables",(function(){return ir.e})),r.d(e,"engine",(function(){return ir.h})),r.d(e,"memory",(function(){return ir.m})),r.d(e,"profile",(function(){return ir.n})),r.d(e,"tidy",(function(){return ir.t})),r.d(e,"dispose",(function(){return ir.d})),r.d(e,"keep",(function(){return ir.l})),r.d(e,"time",(function(){return ir.u})),r.d(e,"setBackend",(function(){return ir.r})),r.d(e,"ready",(function(){return ir.o})),r.d(e,"getBackend",(function(){return ir.k})),r.d(e,"removeBackend",(function(){return ir.q})),r.d(e,"findBackend",(function(){return ir.i})),r.d(e,"findBackendFactory",(function(){return ir.j})),r.d(e,"registerBackend",(function(){return ir.p})),r.d(e,"backend",(function(){return ir.a})),r.d(e,"setPlatform",(function(){return ir.s})),r.d(e,"getKernel",(function(){return me.c})),r.d(e,"getGradient",(function(){return me.b})),r.d(e,"getKernelsForBackend",(function(){return me.d})),r.d(e,"registerKernel",(function(){return me.f})),r.d(e,"registerGradient",(function(){return me.e})),r.d(e,"unregisterKernel",(function(){return me.h})),r.d(e,"unregisterGradient",(function(){return me.g})),r.d(e,"copyRegisteredKernels",(function(){return me.a})),r.d(e,"customGrad",(function(){return fr.a})),r.d(e,"grad",(function(){return fr.b})),r.d(e,"grads",(function(){return fr.c})),r.d(e,"valueAndGrad",(function(){return fr.d})),r.d(e,"valueAndGrads",(function(){return fr.e})),r.d(e,"variableGrads",(function(){return fr.f})),r.d(e,"Environment",(function(){return f.b})),r.d(e,"env",(function(){return f.c})),r.d(e,"ENV",(function(){return f.a})),r.d(e,"version_core",(function(){return or})),r.d(e,"nextFrame",(function(){return Hn.a})),r.d(e,"browser",(function(){return o})),r.d(e,"io",(function(){return n})),r.d(e,"math",(function(){return a})),r.d(e,"serialization",(function(){return v})),r.d(e,"test_util",(function(){return nr})),r.d(e,"util",(function(){return ar})),r.d(e,"backend_util",(function(){return c})),r.d(e,"tensor_util",(function(){return rr})),r.d(e,"slice_util",(function(){return u})),r.d(e,"gather_util",(function(){return i})),r.d(e,"scatter_util",(function(){return Ae})),r.d(e,"device_util",(function(){return Wa})),r.d(e,"kernel_impls",(function(){return P})),r.d(e,"KernelBackend",(function(){return Ga.b})),r.d(e,"DataStorage",(function(){return Ga.a})),r.d(e,"Abs",(function(){return ye.a})),r.d(e,"Acos",(function(){return ye.b})),r.d(e,"Acosh",(function(){return ye.c})),r.d(e,"Add",(function(){return ye.d})),r.d(e,"AddN",(function(){return ye.e})),r.d(e,"All",(function(){return ye.f})),r.d(e,"Any",(function(){return ye.g})),r.d(e,"ArgMax",(function(){return ye.h})),r.d(e,"ArgMin",(function(){return ye.i})),r.d(e,"Asin",(function(){return ye.j})),r.d(e,"Asinh",(function(){return ye.k})),r.d(e,"Atan",(function(){return ye.l})),r.d(e,"Atanh",(function(){return ye.n})),r.d(e,"Atan2",(function(){return ye.m})),r.d(e,"AvgPool",(function(){return ye.o})),r.d(e,"AvgPoolGrad",(function(){return ye.r})),r.d(e,"AvgPool3D",(function(){return ye.p})),r.d(e,"AvgPool3DGrad",(function(){return ye.q})),r.d(e,"BatchMatMul",(function(){return ye.s})),r.d(e,"BatchToSpaceND",(function(){return ye.t})),r.d(e,"Bincount",(function(){return ye.u})),r.d(e,"BroadcastTo",(function(){return ye.v})),r.d(e,"Cast",(function(){return ye.w})),r.d(e,"Ceil",(function(){return ye.x})),r.d(e,"ClipByValue",(function(){return ye.y})),r.d(e,"Complex",(function(){return ye.z})),r.d(e,"ComplexAbs",(function(){return ye.A})),r.d(e,"Concat",(function(){return ye.B})),r.d(e,"Conv2D",(function(){return ye.C})),r.d(e,"Conv2DBackpropFilter",(function(){return ye.D})),r.d(e,"Conv2DBackpropInput",(function(){return ye.E})),r.d(e,"Conv3D",(function(){return ye.F})),r.d(e,"Conv3DBackpropFilterV2",(function(){return ye.G})),r.d(e,"Conv3DBackpropInputV2",(function(){return ye.H})),r.d(e,"Cos",(function(){return ye.I})),r.d(e,"Cosh",(function(){return ye.J})),r.d(e,"Cumsum",(function(){return ye.L})),r.d(e,"CropAndResize",(function(){return ye.K})),r.d(e,"DenseBincount",(function(){return ye.M})),r.d(e,"DepthToSpace",(function(){return ye.N})),r.d(e,"DepthwiseConv2dNative",(function(){return ye.O})),r.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return ye.P})),r.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return ye.Q})),r.d(e,"Diag",(function(){return ye.R})),r.d(e,"Dilation2D",(function(){return ye.S})),r.d(e,"Dilation2DBackpropInput",(function(){return ye.U})),r.d(e,"Dilation2DBackpropFilter",(function(){return ye.T})),r.d(e,"RealDiv",(function(){return ye.kc})),r.d(e,"Elu",(function(){return ye.V})),r.d(e,"EluGrad",(function(){return ye.W})),r.d(e,"Erf",(function(){return ye.Y})),r.d(e,"Equal",(function(){return ye.X})),r.d(e,"Exp",(function(){return ye.Z})),r.d(e,"ExpandDims",(function(){return ye.ab})),r.d(e,"Expm1",(function(){return ye.bb})),r.d(e,"FFT",(function(){return ye.cb})),r.d(e,"Fill",(function(){return ye.db})),r.d(e,"FlipLeftRight",(function(){return ye.eb})),r.d(e,"Floor",(function(){return ye.fb})),r.d(e,"FloorDiv",(function(){return ye.gb})),r.d(e,"FusedBatchNorm",(function(){return ye.ib})),r.d(e,"GatherV2",(function(){return ye.mb})),r.d(e,"GatherNd",(function(){return ye.lb})),r.d(e,"Greater",(function(){return ye.nb})),r.d(e,"GreaterEqual",(function(){return ye.ob})),r.d(e,"Identity",(function(){return ye.qb})),r.d(e,"IFFT",(function(){return ye.pb})),r.d(e,"Imag",(function(){return ye.rb})),r.d(e,"IsFinite",(function(){return ye.sb})),r.d(e,"IsInf",(function(){return ye.tb})),r.d(e,"IsNan",(function(){return ye.ub})),r.d(e,"LeakyRelu",(function(){return ye.xb})),r.d(e,"Less",(function(){return ye.yb})),r.d(e,"LessEqual",(function(){return ye.zb})),r.d(e,"LinSpace",(function(){return ye.Ab})),r.d(e,"Log",(function(){return ye.Bb})),r.d(e,"Log1p",(function(){return ye.Cb})),r.d(e,"LogicalAnd",(function(){return ye.Eb})),r.d(e,"LogicalNot",(function(){return ye.Fb})),r.d(e,"LogicalOr",(function(){return ye.Gb})),r.d(e,"LogSoftmax",(function(){return ye.Db})),r.d(e,"LRN",(function(){return ye.vb})),r.d(e,"LRNGrad",(function(){return ye.wb})),r.d(e,"Max",(function(){return ye.Hb})),r.d(e,"Maximum",(function(){return ye.Nb})),r.d(e,"MaxPool",(function(){return ye.Ib})),r.d(e,"MaxPoolGrad",(function(){return ye.Lb})),r.d(e,"MaxPool3D",(function(){return ye.Jb})),r.d(e,"MaxPool3DGrad",(function(){return ye.Kb})),r.d(e,"MaxPoolWithArgmax",(function(){return ye.Mb})),r.d(e,"Mean",(function(){return ye.Ob})),r.d(e,"Min",(function(){return ye.Pb})),r.d(e,"Minimum",(function(){return ye.Qb})),r.d(e,"MirrorPad",(function(){return ye.Rb})),r.d(e,"Mod",(function(){return ye.Sb})),r.d(e,"Multinomial",(function(){return ye.Tb})),r.d(e,"Multiply",(function(){return ye.Ub})),r.d(e,"Neg",(function(){return ye.Vb})),r.d(e,"NotEqual",(function(){return ye.Zb})),r.d(e,"NonMaxSuppressionV3",(function(){return ye.Wb})),r.d(e,"NonMaxSuppressionV4",(function(){return ye.Xb})),r.d(e,"NonMaxSuppressionV5",(function(){return ye.Yb})),r.d(e,"OnesLike",(function(){return ye.bc})),r.d(e,"OneHot",(function(){return ye.ac})),r.d(e,"Pack",(function(){return ye.cc})),r.d(e,"PadV2",(function(){return ye.dc})),r.d(e,"Pool",(function(){return ye.ec})),r.d(e,"Pow",(function(){return ye.fc})),r.d(e,"Prelu",(function(){return ye.gc})),r.d(e,"Prod",(function(){return ye.hc})),r.d(e,"Range",(function(){return ye.ic})),r.d(e,"Real",(function(){return ye.jc})),r.d(e,"Reciprocal",(function(){return ye.lc})),r.d(e,"Relu",(function(){return ye.mc})),r.d(e,"Reshape",(function(){return ye.oc})),r.d(e,"ResizeNearestNeighbor",(function(){return ye.rc})),r.d(e,"ResizeNearestNeighborGrad",(function(){return ye.sc})),r.d(e,"ResizeBilinear",(function(){return ye.pc})),r.d(e,"ResizeBilinearGrad",(function(){return ye.qc})),r.d(e,"Relu6",(function(){return ye.nc})),r.d(e,"Reverse",(function(){return ye.tc})),r.d(e,"Round",(function(){return ye.vc})),r.d(e,"Rsqrt",(function(){return ye.wc})),r.d(e,"ScatterNd",(function(){return ye.xc})),r.d(e,"Select",(function(){return ye.yc})),r.d(e,"Selu",(function(){return ye.zc})),r.d(e,"Slice",(function(){return ye.Ec})),r.d(e,"Sin",(function(){return ye.Cc})),r.d(e,"Sinh",(function(){return ye.Dc})),r.d(e,"Sign",(function(){return ye.Bc})),r.d(e,"Sigmoid",(function(){return ye.Ac})),r.d(e,"Softplus",(function(){return ye.Gc})),r.d(e,"Sqrt",(function(){return ye.Kc})),r.d(e,"Sum",(function(){return ye.Qc})),r.d(e,"SpaceToBatchND",(function(){return ye.Hc})),r.d(e,"SplitV",(function(){return ye.Jc})),r.d(e,"Softmax",(function(){return ye.Fc})),r.d(e,"SquaredDifference",(function(){return ye.Mc})),r.d(e,"Square",(function(){return ye.Lc})),r.d(e,"Sub",(function(){return ye.Pc})),r.d(e,"SparseToDense",(function(){return ye.Ic})),r.d(e,"StridedSlice",(function(){return ye.Oc})),r.d(e,"Tan",(function(){return ye.Rc})),r.d(e,"Tanh",(function(){return ye.Sc})),r.d(e,"Tile",(function(){return ye.Tc})),r.d(e,"TopK",(function(){return ye.Uc})),r.d(e,"Transpose",(function(){return ye.Vc})),r.d(e,"Unique",(function(){return ye.Wc})),r.d(e,"Unpack",(function(){return ye.Xc})),r.d(e,"UnsortedSegmentSum",(function(){return ye.Yc})),r.d(e,"ZerosLike",(function(){return ye.Zc})),r.d(e,"Step",(function(){return ye.Nc})),r.d(e,"FromPixels",(function(){return ye.hb})),r.d(e,"RotateWithOffset",(function(){return ye.uc})),r.d(e,"_FusedMatMul",(function(){return ye.ad})),r.d(e,"FusedConv2D",(function(){return ye.jb})),r.d(e,"FusedDepthwiseConv2D",(function(){return ye.kb}));var n={};r.r(n),r.d(n,"copyModel",(function(){return st})),r.d(n,"listModels",(function(){return ot})),r.d(n,"moveModel",(function(){return Pt})),r.d(n,"removeModel",(function(){return ut})),r.d(n,"browserFiles",(function(){return Ct})),r.d(n,"browserHTTPRequest",(function(){return ee})),r.d(n,"concatenateArrayBuffers",(function(){return d.d})),r.d(n,"decodeWeights",(function(){return d.e})),r.d(n,"encodeWeights",(function(){return d.f})),r.d(n,"fromMemory",(function(){return se})),r.d(n,"getLoadHandlers",(function(){return g})),r.d(n,"getModelArtifactsInfoForJSON",(function(){return d.g})),r.d(n,"getSaveHandlers",(function(){return m})),r.d(n,"http",(function(){return te})),r.d(n,"isHTTPScheme",(function(){return _t})),r.d(n,"loadWeights",(function(){return Qt})),r.d(n,"registerLoadRouter",(function(){return y})),r.d(n,"registerSaveRouter",(function(){return h})),r.d(n,"weightsLoaderFactory",(function(){return Gt})),r.d(n,"withSaveHandler",(function(){return ce}));var a={};r.r(a),r.d(a,"confusionMatrix",(function(){return he}));var o={};r.r(o),r.d(o,"toPixels",(function(){return De})),r.d(o,"fromPixels",(function(){return Oe}));var i={};r.r(i),r.d(i,"prepareAndValidate",(function(){return Se}));var u={};r.r(u),r.d(u,"assertParamsValid",(function(){return Ie})),r.d(u,"maskToAxes",(function(){return Ee})),r.d(u,"computeOutShape",(function(){return Me})),r.d(u,"stridesWithElidedDims",(function(){return Ue})),r.d(u,"getNormalizedAxes",(function(){return Qe})),r.d(u,"startIndicesWithElidedDims",(function(){return Ye})),r.d(u,"stopIndicesWithElidedDims",(function(){return Ge})),r.d(u,"stridesForAxis",(function(){return Fe})),r.d(u,"startForAxis",(function(){return Ne})),r.d(u,"stopForAxis",(function(){return qe})),r.d(u,"isSliceContinous",(function(){return Ke})),r.d(u,"computeFlatOffset",(function(){return Be})),r.d(u,"parseSliceParams",(function(){return Ve})),r.d(u,"sliceInfo",(function(){return Xe}));var v={};r.r(v),r.d(v,"Serializable",(function(){return $e})),r.d(v,"SerializationMap",(function(){return tr})),r.d(v,"registerClass",(function(){return er}));var s={};r.r(s),r.d(s,"segOpComputeOptimalWindowSize",(function(){return ka})),r.d(s,"computeOutShape",(function(){return Ca})),r.d(s,"collectGatherOpShapeInfo",(function(){return Ia}));var c={};r.r(c),r.d(c,"axesAreInnerMostDims",(function(){return _n.b})),r.d(c,"combineLocations",(function(){return _n.c})),r.d(c,"computeOutAndReduceShapes",(function(){return _n.d})),r.d(c,"expandShapeToKeepDim",(function(){return _n.e})),r.d(c,"assertAxesAreInnerMostDims",(function(){return _n.a})),r.d(c,"getAxesPermutation",(function(){return _n.f})),r.d(c,"getUndoAxesPermutation",(function(){return _n.h})),r.d(c,"getInnerMostAxes",(function(){return _n.g})),r.d(c,"getBroadcastDims",(function(){return $n.b})),r.d(c,"getReductionAxes",(function(){return $n.c})),r.d(c,"assertAndGetBroadcastShape",(function(){return $n.a})),r.d(c,"assertParamsConsistent",(function(){return ta})),r.d(c,"computeOutShape",(function(){return ea})),r.d(c,"computeDilation2DInfo",(function(){return ra.d})),r.d(c,"computePool2DInfo",(function(){return ra.e})),r.d(c,"computePool3DInfo",(function(){return ra.f})),r.d(c,"computeConv2DInfo",(function(){return ra.a})),r.d(c,"computeConv3DInfo",(function(){return ra.b})),r.d(c,"computeDefaultPad",(function(){return ra.c})),r.d(c,"tupleValuesAreOne",(function(){return ra.i})),r.d(c,"eitherStridesOrDilationsAreOne",(function(){return ra.h})),r.d(c,"convertConv2DDataFormat",(function(){return ra.g})),r.d(c,"getFusedDyActivation",(function(){return na.c})),r.d(c,"getFusedBiasGradient",(function(){return na.b})),r.d(c,"applyActivation",(function(){return na.a})),r.d(c,"shouldFuse",(function(){return na.d})),r.d(c,"PARALLELIZE_THRESHOLD",(function(){return aa})),r.d(c,"computeOptimalWindowSize",(function(){return oa})),r.d(c,"slice_util",(function(){return u})),r.d(c,"upcastType",(function(){return qn.c})),r.d(c,"getImageCenter",(function(){return ia})),r.d(c,"getReshaped",(function(){return ua})),r.d(c,"getPermuted",(function(){return va})),r.d(c,"getReshapedPermuted",(function(){return sa})),r.d(c,"getSliceBeginCoords",(function(){return ca})),r.d(c,"getSliceSize",(function(){return Pa})),r.d(c,"prepareAndValidate",(function(){return Se})),r.d(c,"validateUpdateShape",(function(){return Ae.validateUpdateShape})),r.d(c,"validateInput",(function(){return Ae.validateInput})),r.d(c,"calculateShapes",(function(){return Ae.calculateShapes})),r.d(c,"SELU_SCALEALPHA",(function(){return la})),r.d(c,"SELU_SCALE",(function(){return fa})),r.d(c,"ERF_P",(function(){return da})),r.d(c,"ERF_A1",(function(){return pa})),r.d(c,"ERF_A2",(function(){return ba})),r.d(c,"ERF_A3",(function(){return ha})),r.d(c,"ERF_A4",(function(){return ya})),r.d(c,"ERF_A5",(function(){return ma})),r.d(c,"warn",(function(){return ga})),r.d(c,"log",(function(){return Ta})),r.d(c,"mergeRealAndImagArrays",(function(){return ja})),r.d(c,"splitRealAndImagArrays",(function(){return za})),r.d(c,"complexWithEvenIndex",(function(){return wa})),r.d(c,"complexWithOddIndex",(function(){return Da})),r.d(c,"getComplexWithIndex",(function(){return xa})),r.d(c,"assignToTypedArray",(function(){return Oa})),r.d(c,"exponents",(function(){return La})),r.d(c,"exponent",(function(){return Sa})),r.d(c,"prepareSplitSize",(function(){return Aa})),r.d(c,"segment_util",(function(){return s})),r.d(c,"castTensor",(function(){return Ea})),r.d(c,"reshapeTensor",(function(){return Ma})),r.d(c,"fromUint8ToStringArray",(function(){return Ua})),r.d(c,"fromStringArrayToUint8",(function(){return Ra}));var P={};r.r(P),r.d(P,"nonMaxSuppressionV3Impl",(function(){return Qa.a})),r.d(P,"nonMaxSuppressionV4Impl",(function(){return Qa.b})),r.d(P,"nonMaxSuppressionV5Impl",(function(){return Qa.c})),r.d(P,"whereImpl",(function(){return Ya.a}));var l=r(5),f=(r(185),r(24)),d=r(45);function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var b=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.saveRouters=[],this.loadRouters=[]}var e,r;return e=t,(r=[{key:"getInstance",value:function(){return null==t.instance&&(t.instance=new t),t.instance}},{key:"registerSaveRouter",value:function(e){t.getInstance().saveRouters.push(e)}},{key:"registerLoadRouter",value:function(e){t.getInstance().loadRouters.push(e)}},{key:"getSaveHandlers",value:function(e){return t.getHandlers(e,"save")}},{key:"getLoadHandlers",value:function(e,r){return t.getHandlers(e,"load",r)}},{key:"getHandlers",value:function(e,r,n){var a=[];return("load"===r?t.getInstance().loadRouters:t.getInstance().saveRouters).forEach((function(t){var r=t(e,n);null!==r&&a.push(r)})),a}}])&&p(e,r),t}(),h=function(t){return b.registerSaveRouter(t)},y=function(t){return b.registerLoadRouter(t)},m=function(t){return b.getSaveHandlers(t)},g=function(t,e){return b.getLoadHandlers(t,e)};function T(t,e){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return j(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?j(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,a=function(){};return{s:a,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,u=!1;return{s:function(){r=t[Symbol.iterator]()},n:function(){var t=r.next();return i=t.done,t},e:function(t){u=!0,o=t},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw o}}}}function j(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function z(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function w(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function D(t,e,r){return e&&w(t.prototype,e),r&&w(t,r),t}function x(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function O(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){x(o,n,a,i,u,"next",t)}function u(t){x(o,n,a,i,u,"throw",t)}i(void 0)}))}}function L(){if(!Object(f.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function S(t){var e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}var A=function(){function t(e){if(z(this,t),this.indexedDB=L(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}var e,r;return D(t,[{key:"save",value:(r=O(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(e.modelTopology instanceof ArrayBuffer)){t.next=2;break}throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");case 2:return t.abrupt("return",this.databaseAction(this.modelPath,e));case 3:case"end":return t.stop()}}),t,this)}))),function(t){return r.apply(this,arguments)})},{key:"load",value:(e=O(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.databaseAction(this.modelPath));case 1:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"databaseAction",value:function(t,e){var r=this;return new Promise((function(t,n){var a=r.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return S(a)},a.onsuccess=function(){var o=a.result;if(null==e){var i=o.transaction("models_store","readonly"),u=i.objectStore("models_store").get(r.modelPath);u.onsuccess=function(){if(null==u.result)return o.close(),n(new Error("Cannot find model with path '".concat(r.modelPath,"' ")+"in IndexedDB."));t(u.result.modelArtifacts)},u.onerror=function(t){return o.close(),n(u.error)},i.oncomplete=function(){return o.close()}}else{var v,s=Object(d.g)(e),c=o.transaction("model_info_store","readwrite"),P=c.objectStore("model_info_store"),l=P.put({modelPath:r.modelPath,modelArtifactsInfo:s});l.onsuccess=function(){var a=(v=o.transaction("models_store","readwrite")).objectStore("models_store").put({modelPath:r.modelPath,modelArtifacts:e,modelArtifactsInfo:s});a.onsuccess=function(){return t({modelArtifactsInfo:s})},a.onerror=function(t){var e=(P=c.objectStore("model_info_store")).delete(r.modelPath);e.onsuccess=function(){return o.close(),n(a.error)},e.onerror=function(t){return o.close(),n(a.error)}}},l.onerror=function(t){return o.close(),n(l.error)},c.oncomplete=function(){null==v?o.close():v.oncomplete=function(){return o.close()}}}},a.onerror=function(t){return n(a.error)}}))}}]),t}();A.URL_SCHEME="indexeddb://";var k=function(t){return Object(f.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(A.URL_SCHEME)?(e=t.slice(A.URL_SCHEME.length),new A(e)):null;var e};b.registerSaveRouter(k),b.registerLoadRouter(k);var C=function(){function t(){z(this,t),this.indexedDB=L()}return D(t,[{key:"listModels",value:function(){var t=O(regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",new Promise((function(t,r){var n=e.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=function(){return S(n)},n.onsuccess=function(){var e=n.result,a=e.transaction("model_info_store","readonly"),o=a.objectStore("model_info_store").getAll();o.onsuccess=function(){var e,r={},n=T(o.result);try{for(n.s();!(e=n.n()).done;){var a=e.value;r[a.modelPath]=a.modelArtifactsInfo}}catch(t){n.e(t)}finally{n.f()}t(r)},o.onerror=function(t){return e.close(),r(o.error)},a.oncomplete=function(){return e.close()}},n.onerror=function(t){return r(n.error)}})));case 1:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}()},{key:"removeModel",value:function(){var t=O(regeneratorRuntime.mark((function t(e){var r=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=(n=e).startsWith(A.URL_SCHEME)?n.slice(A.URL_SCHEME.length):n,t.abrupt("return",new Promise((function(t,n){var a=r.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return S(a)},a.onsuccess=function(){var r,o=a.result,i=o.transaction("model_info_store","readwrite"),u=i.objectStore("model_info_store"),v=u.get(e);v.onsuccess=function(){if(null==v.result)return o.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));var a=u.delete(e),i=function(){var a=(r=o.transaction("models_store","readwrite")).objectStore("models_store").delete(e);a.onsuccess=function(){return t(v.result.modelArtifactsInfo)},a.onerror=function(t){return n(v.error)}};a.onsuccess=i,a.onerror=function(t){return i(),o.close(),n(v.error)}},v.onerror=function(t){return o.close(),n(v.error)},i.oncomplete=function(){null==r?o.close():r.oncomplete=function(){return o.close()}}},a.onerror=function(t){return n(a.error)}})));case 2:case"end":return t.stop()}var n}),t)})));return function(e){return t.apply(this,arguments)}}()}]),t}(),I=r(7);function E(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function M(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){E(o,n,a,i,u,"next",t)}function u(t){E(o,n,a,i,u,"throw",t)}i(void 0)}))}}function U(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function R(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function W(t,e,r){return e&&R(t.prototype,e),r&&R(t,r),t}var Q="tensorflowjs_models",Y="info",G="model_topology",F="weight_specs",N="weight_data",q="model_metadata";function K(t){return{info:[Q,t,Y].join("/"),topology:[Q,t,G].join("/"),weightSpecs:[Q,t,F].join("/"),weightData:[Q,t,N].join("/"),modelMetadata:[Q,t,q].join("/")}}function B(t){var e=t.split("/");if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join("/")}var V=function(){function t(e){if(U(this,t),!Object(f.c)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=K(this.modelPath)}var e,r;return W(t,[{key:"save",value:(r=M(regeneratorRuntime.mark((function t(e){var r,n,a,o;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(e.modelTopology instanceof ArrayBuffer)){t.next=4;break}throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");case 4:return r=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=Object(d.g)(e),t.prev=7,this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,r),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(d.a)(e.weightData)),o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy},null!=e.signature&&(o.signature=e.signature),null!=e.userDefinedMetadata&&(o.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(o.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),t.abrupt("return",{modelArtifactsInfo:a});case 20:throw t.prev=20,t.t0=t.catch(7),this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(a.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(a.weightSpecsBytes,", ")+"weightDataBytes=".concat(a.weightDataBytes,"."));case 28:case"end":return t.stop()}}),t,this,[[7,20]])}))),function(t){return r.apply(this,arguments)})},{key:"load",value:(e=M(regeneratorRuntime.mark((function t(){var e,r,n,a,o,i,u;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null!=(e=JSON.parse(this.LS.getItem(this.keys.info)))){t.next=3;break}throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));case 3:if("JSON"===e.modelTopologyType){t.next=5;break}throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");case 5:if(r={},null!=(n=JSON.parse(this.LS.getItem(this.keys.topology)))){t.next=9;break}throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");case 9:if(r.modelTopology=n,null!=(a=JSON.parse(this.LS.getItem(this.keys.weightSpecs)))){t.next=13;break}throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");case 13:if(r.weightSpecs=a,null!=(o=this.LS.getItem(this.keys.modelMetadata))&&(i=JSON.parse(o),r.format=i.format,r.generatedBy=i.generatedBy,r.convertedBy=i.convertedBy,null!=i.signature&&(r.signature=i.signature),null!=i.userDefinedMetadata&&(r.userDefinedMetadata=i.userDefinedMetadata),null!=i.modelInitializer&&(r.modelInitializer=i.modelInitializer)),null!=(u=this.LS.getItem(this.keys.weightData))){t.next=19;break}throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));case 19:return r.weightData=Object(d.b)(u),t.abrupt("return",r);case 21:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})}]),t}();V.URL_SCHEME="localstorage://";var X=function(t){return Object(f.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(V.URL_SCHEME)?(e=t.slice(V.URL_SCHEME.length),new V(e)):null;var e};b.registerSaveRouter(X),b.registerLoadRouter(X);var Z=function(){function t(){U(this,t),Object(I.b)(Object(f.c)().getBool("IS_BROWSER"),(function(){return"Current environment is not a web browser"})),Object(I.b)("undefined"==typeof window||void 0!==window.localStorage,(function(){return"Current browser does not appear to support localStorage"})),this.LS=window.localStorage}return W(t,[{key:"listModels",value:function(){var t=M(regeneratorRuntime.mark((function t(){var e,r,n,a,o,i;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:for(e={},r=Q+"/",n="/"+Y,a=0;a<this.LS.length;++a)(o=this.LS.key(a)).startsWith(r)&&o.endsWith(n)&&(i=B(o),e[i]=JSON.parse(this.LS.getItem(o)));return t.abrupt("return",e);case 5:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}()},{key:"removeModel",value:function(){var t=M(regeneratorRuntime.mark((function t(e){var r,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=(a=e).startsWith(V.URL_SCHEME)?a.slice(V.URL_SCHEME.length):a,r=K(e),null!=this.LS.getItem(r.info)){t.next=4;break}throw new Error("Cannot find model at path '".concat(e,"'"));case 4:return n=JSON.parse(this.LS.getItem(r.info)),this.LS.removeItem(r.info),this.LS.removeItem(r.topology),this.LS.removeItem(r.weightSpecs),this.LS.removeItem(r.weightData),t.abrupt("return",n);case 10:case"end":return t.stop()}var a}),t,this)})));return function(e){return t.apply(this,arguments)}}()}]),t}();function H(t,e){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return J(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?J(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,a=function(){};return{s:a,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,u=!1;return{s:function(){r=t[Symbol.iterator]()},n:function(){var t=r.next();return i=t.done,t},e:function(t){u=!0,o=t},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw o}}}}function J(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function _(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function $(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){_(o,n,a,i,u,"next",t)}function u(t){_(o,n,a,i,u,"throw",t)}i(void 0)}))}}function tt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var et=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.managers={}}var e,r;return e=t,(r=[{key:"getInstance",value:function(){return null==t.instance&&(t.instance=new t),t.instance}},{key:"registerManager",value:function(e,r){Object(I.b)(null!=e,(function(){return"scheme must not be undefined or null."})),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),Object(I.b)(e.length>0,(function(){return"scheme must not be an empty string."}));var n=t.getInstance();Object(I.b)(null==n.managers[e],(function(){return"A model store manager is already registered for scheme '".concat(e,"'.")})),n.managers[e]=r}},{key:"getManager",value:function(t){var e=this.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}},{key:"getSchemes",value:function(){return Object.keys(this.getInstance().managers)}}])&&tt(e,r),t}();function rt(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(et.getSchemes().join(",")));return{scheme:t.split("://")[0],path:t.split("://")[1]}}function nt(t,e){return at.apply(this,arguments)}function at(){return(at=$(regeneratorRuntime.mark((function t(e,r){var n,a,o,i,u,v,s,c,P,l,f=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=f.length>2&&void 0!==f[2]&&f[2],Object(I.b)(e!==r,(function(){return"Old path and new path are the same: '".concat(e,"'")})),a=b.getLoadHandlers(e),Object(I.b)(a.length>0,(function(){return"Copying failed because no load handler is found for source URL ".concat(e,".")})),Object(I.b)(a.length<2,(function(){return"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")})),o=a[0],i=b.getSaveHandlers(r),Object(I.b)(i.length>0,(function(){return"Copying failed because no save handler is found for destination "+"URL ".concat(r,".")})),Object(I.b)(i.length<2,(function(){return"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(r,".")})),u=i[0],v=rt(e).scheme,s=rt(e).path,c=v===rt(e).scheme,t.next=15,o.load();case 15:if(P=t.sent,!n||!c){t.next=19;break}return t.next=19,et.getManager(v).removeModel(s);case 19:return t.next=21,u.save(P);case 21:if(l=t.sent,!n||c){t.next=25;break}return t.next=25,et.getManager(v).removeModel(s);case 25:return t.abrupt("return",l.modelArtifactsInfo);case 26:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function ot(){return it.apply(this,arguments)}function it(){return(it=$(regeneratorRuntime.mark((function t(){var e,r,n,a,o,i,u;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e=et.getSchemes(),r={},n=H(e),t.prev=3,n.s();case 5:if((a=n.n()).done){t.next=13;break}return o=a.value,t.next=9,et.getManager(o).listModels();case 9:for(u in i=t.sent)r[o+"://"+u]=i[u];case 11:t.next=5;break;case 13:t.next=18;break;case 15:t.prev=15,t.t0=t.catch(3),n.e(t.t0);case 18:return t.prev=18,n.f(),t.finish(18);case 21:return t.abrupt("return",r);case 22:case"end":return t.stop()}}),t,null,[[3,15,18,21]])})))).apply(this,arguments)}function ut(t){return vt.apply(this,arguments)}function vt(){return(vt=$(regeneratorRuntime.mark((function t(e){var r,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=rt(e),n=et.getManager(r.scheme),t.abrupt("return",n.removeModel(r.path));case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function st(t,e){return ct.apply(this,arguments)}function ct(){return(ct=$(regeneratorRuntime.mark((function t(e,r){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",nt(e,r,!1));case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function Pt(t,e){return lt.apply(this,arguments)}function lt(){return(lt=$(regeneratorRuntime.mark((function t(e,r){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",nt(e,r,!0));case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function ft(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var dt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,r;return e=t,(r=[{key:"fetch",value:function(t){function e(e,r){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}((function(t,e){return fetch(t,e)}))},{key:"now",value:function(){return performance.now()}},{key:"encode",value:function(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}},{key:"decode",value:function(t,e){return new TextDecoder(e).decode(t)}}])&&ft(e.prototype,r),t}();if(Object(f.c)().get("IS_BROWSER")){Object(f.c)().setPlatform("browser",new dt);try{et.registerManager(V.URL_SCHEME,new Z)}catch(t){}try{et.registerManager(A.URL_SCHEME,new C)}catch(t){}}r(595);var pt=r(53),bt=r(12),ht=r(80),yt=r(210),mt=r(6);Object(l.b)();var gt={buffer:pt.a,cast:bt.a,clone:ht.a,print:yt.a};function Tt(t){return function(t){if(Array.isArray(t))return zt(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||jt(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function jt(t,e){if(t){if("string"==typeof t)return zt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?zt(t,e):void 0}}function zt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function wt(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Dt(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){wt(o,n,a,i,u,"next",t)}function u(t){wt(o,n,a,i,u,"throw",t)}i(void 0)}))}}function xt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ot(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Lt(t,e,r){return e&&Ot(t.prototype,e),r&&Ot(t,r),t}function St(t){return new Promise((function(t){return setTimeout(t)})).then(t)}Object(mt.e)(gt);var At=function(){function t(e){if(xt(this,t),!Object(f.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(t.URL_SCHEME)&&(e=e.slice(t.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}var e;return Lt(t,[{key:"save",value:(e=Dt(regeneratorRuntime.mark((function t(e){var r,n,a,o,i,u;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if("undefined"!=typeof document){t.next=2;break}throw new Error("Browser downloads are not supported in this environment since `document` is not present");case 2:if(r=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"})),!(e.modelTopology instanceof ArrayBuffer)){t.next=7;break}throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");case 7:return n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),o=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),(i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,i.href=o,t.next=18,St((function(){return i.dispatchEvent(new MouseEvent("click"))}));case 18:if(null==e.weightData){t.next=24;break}return(u=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,u.href=r,t.next=24,St((function(){return u.dispatchEvent(new MouseEvent("click"))}));case 24:return t.abrupt("return",{modelArtifactsInfo:Object(d.g)(e)});case 25:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})}]),t}();At.URL_SCHEME="downloads://";var kt=function(){function t(e){if(xt(this,t),null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.files=e}var e;return Lt(t,[{key:"load",value:(e=Dt(regeneratorRuntime.mark((function t(){var e,r,n=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=this.files[0],r=this.files.slice(1),t.abrupt("return",new Promise((function(t,a){var o=new FileReader;o.onload=function(o){var i=JSON.parse(o.target.result),u=i.modelTopology;if(null!=u){0===r.length&&t({modelTopology:u});var v=i.weightsManifest;if(null!=v){var s;try{s=n.checkManifestAndWeightFiles(v,r)}catch(t){return void a(t)}var c=[],P=[],l=[];v.forEach((function(t){t.paths.forEach((function(t){P.push(t),l.push(null)})),c.push.apply(c,Tt(t.weights))})),v.forEach((function(e){e.paths.forEach((function(e){var r=new FileReader;r.onload=function(r){var n=r.target.result,a=P.indexOf(e);if(l[a]=n,-1===l.indexOf(null)){var o={modelTopology:u,weightSpecs:c,weightData:Object(d.d)(l),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};null!=i.signature&&(o.signature=i.signature),null!=i.userDefinedMetadata&&(o.userDefinedMetadata=i.userDefinedMetadata),null!=i.modelInitializer&&(o.modelInitializer=i.modelInitializer),t(o)}},r.onerror=function(t){return a("Failed to weights data from file of path '".concat(e,"'."))},r.readAsArrayBuffer(s[e])}))}))}else a(new Error("weightManifest field is missing from file ".concat(e.name)))}else a(new Error("modelTopology field is missing from file ".concat(e.name)))},o.onerror=function(t){return a("Failed to read model topology and weights manifest JSON "+"from file '".concat(e.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only.")},o.readAsText(e)})));case 3:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"checkManifestAndWeightFiles",value:function(t,e){var r,n=[],a=e.map((function(t){return Object(d.c)(t.name)})),o={},i=function(t,e){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=jt(t))){r&&(t=r);var n=0,a=function(){};return{s:a,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,u=!1;return{s:function(){r=t[Symbol.iterator]()},n:function(){var t=r.next();return i=t.done,t},e:function(t){u=!0,o=t},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw o}}}}(t);try{for(i.s();!(r=i.n()).done;)r.value.paths.forEach((function(t){var r=Object(d.c)(t);if(-1!==n.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(n.push(r),-1===a.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));o[t]=e[a.indexOf(r)]}))}catch(t){i.e(t)}finally{i.f()}if(n.length!==e.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(n.length,") and the number of weight files provided ")+"(".concat(e.length,")."));return o}}]),t}();function Ct(t){return new kt(t)}function It(t,e,r,n){!function(t){Object(I.b)(null!=t&&Array.isArray(t)&&t.length>0,(function(){return"promises must be a none empty array"}))}(t),function(t,e){Object(I.b)(t>=0&&t<=1,(function(){return"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t)})),Object(I.b)(e>=0&&e<=1,(function(){return"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e)})),Object(I.b)(e>=t,(function(){return"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e)}))}(r=null==r?0:r,n=null==n?1:n);var a=0;return Promise.all(t.map((function(o){return o.then((function(o){var i=r+ ++a/t.length*(n-r);return e(i),o})),o})))}b.registerSaveRouter((function(t){return Object(f.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(At.URL_SCHEME)?function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new At(t)}(t.slice(At.URL_SCHEME.length)):null}));var Et=r(191);function Mt(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Ut(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Mt(o,n,a,i,u,"next",t)}function u(t){Mt(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Rt(t,e){return Wt.apply(this,arguments)}function Wt(){return(Wt=Ut(regeneratorRuntime.mark((function t(e,r){var n,a,o,i,u,v,s,c,P;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null==r&&(r={}),n=null==r.fetchFunc?Object(f.c)().platform.fetch:r.fetchFunc,a=e.map((function(t){return n(t,r.requestInit,{isBinary:!0})})),o=0,i=.5,null!=r.onProgress){t.next=11;break}return t.next=8,Promise.all(a);case 8:t.t0=t.sent,t.next=14;break;case 11:return t.next=13,It(a,r.onProgress,o,i);case 13:t.t0=t.sent;case 14:if(u=t.t0,v=u.map((function(t){return t.arrayBuffer()})),s=.5,c=1,null!=r.onProgress){t.next=24;break}return t.next=21,Promise.all(v);case 21:t.t1=t.sent,t.next=27;break;case 24:return t.next=26,It(v,r.onProgress,s,c);case 26:t.t1=t.sent;case 27:return P=t.t1,t.abrupt("return",P);case 29:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function Qt(t){return Yt.apply(this,arguments)}function Yt(){return(Yt=Ut(regeneratorRuntime.mark((function t(e){var r,n,a,o,i=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=i.length>1&&void 0!==i[1]?i[1]:"",n=i.length>2?i[2]:void 0,a=i.length>3?i[3]:void 0,o=Gt((function(t){return Rt(t,{requestInit:a})})),t.abrupt("return",o(e,r,n));case 6:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function Gt(t){return function(){var e=Ut(regeneratorRuntime.mark((function e(r){var n,a,o,i,u,v,s,c,P,l,f,p,b=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=b.length>1&&void 0!==b[1]?b[1]:"",a=b.length>2?b[2]:void 0,o=r.map((function(){return!1})),i={},u=null!=a?a.map((function(){return!1})):[],v=[],r.forEach((function(t,e){var r=0;t.weights.forEach((function(t){var n="quantization"in t?t.quantization.dtype:t.dtype,s=Et.a[n]*I.N(t.shape),c=function(){o[e]=!0,null==i[e]&&(i[e]=[]),i[e].push({manifestEntry:t,groupOffset:r,sizeBytes:s})};null!=a?a.forEach((function(e,r){e===t.name&&(c(),u[r]=!0)})):c(),v.push(t.name),r+=s}))})),u.every((function(t){return t}))){e.next=10;break}throw s=a.filter((function(t,e){return!u[e]})),new Error("Could not find weights in manifest with names: "+"".concat(s.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(v.join(", "),"."));case 10:return c=o.reduce((function(t,e,r){return e&&t.push(r),t}),[]),P=[],c.forEach((function(t){r[t].paths.forEach((function(t){var e=n+(n.endsWith("/")?"":"/")+t;P.push(e)}))})),e.next=15,t(P);case 15:return l=e.sent,f={},p=0,c.forEach((function(t){for(var e=r[t].paths.length,n=0,a=0;a<e;a++)n+=l[p+a].byteLength;for(var o=new ArrayBuffer(n),u=new Uint8Array(o),v=0,s=0;s<e;s++){var c=new Uint8Array(l[p+s]);u.set(c,v),v+=c.byteLength}i[t].forEach((function(t){var e=o.slice(t.groupOffset,t.groupOffset+t.sizeBytes),r=Object(d.e)(e,[t.manifestEntry]);for(var n in r)f[n]=r[n]})),p+=e})),e.abrupt("return",f);case 20:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}function Ft(t){return function(t){if(Array.isArray(t))return Bt(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||Kt(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Nt(t,e){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=Kt(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,a=function(){};return{s:a,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,u=!1;return{s:function(){r=t[Symbol.iterator]()},n:function(){var t=r.next();return i=t.done,t},e:function(t){u=!0,o=t},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw o}}}}function qt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||Kt(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Kt(t,e){if(t){if("string"==typeof t)return Bt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Bt(t,e):void 0}}function Bt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Vt(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Xt(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Vt(o,n,a,i,u,"next",t)}function u(t){Vt(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Zt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Ht=function(){function t(e,r){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.DEFAULT_METHOD="POST",null==r&&(r={}),this.weightPathPrefix=r.weightPathPrefix,this.onProgress=r.onProgress,this.weightUrlConverter=r.weightUrlConverter,null!=r.fetchFunc?(Object(I.b)("function"==typeof r.fetchFunc,(function(){return"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"})),this.fetch=r.fetchFunc):this.fetch=Object(f.c)().platform.fetch,Object(I.b)(null!=e&&e.length>0,(function(){return"URL path for http must not be null, undefined or empty."})),Array.isArray(e)&&Object(I.b)(2===e.length,(function(){return"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,").")})),this.path=e,null!=r.requestInit&&null!=r.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=r.requestInit||{}}var e,r,n,a,o;return e=t,(r=[{key:"save",value:(o=Xt(regeneratorRuntime.mark((function t(e){var r,n,a,o;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(e.modelTopology instanceof ArrayBuffer)){t.next=2;break}throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");case 2:return(r=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),r.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData&&r.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin"),t.next=13,this.fetch(this.path,r);case 13:if(!(o=t.sent).ok){t.next=18;break}return t.abrupt("return",{modelArtifactsInfo:Object(d.g)(e),responses:[o]});case 18:throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(o.status,"."));case 19:case"end":return t.stop()}}),t,this)}))),function(t){return o.apply(this,arguments)})},{key:"load",value:(a=Xt(regeneratorRuntime.mark((function t(){var e,r,n,a,o,i,u,v,s,c,P,l,f,d,p,b;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.fetch(this.path,this.requestInit);case 2:if((e=t.sent).ok){t.next=5;break}throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");case 5:return t.prev=5,t.next=8,e.json();case 8:r=t.sent,t.next=16;break;case 11:throw t.prev=11,t.t0=t.catch(5),n="Failed to parse model JSON of response from ".concat(this.path,"."),this.path.endsWith(".pb")?n+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":n+=" Please make sure the server is serving valid JSON for this request.",new Error(n);case 16:if(a=r.modelTopology,o=r.weightsManifest,i=r.generatedBy,u=r.convertedBy,v=r.format,s=r.signature,c=r.userDefinedMetadata,null!=a||null!=o){t.next=25;break}throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");case 25:if(null==o){t.next=32;break}return t.next=28,this.loadWeights(o);case 28:f=t.sent,d=qt(f,2),P=d[0],l=d[1];case 32:return p={modelTopology:a,weightSpecs:P,weightData:l,generatedBy:i,convertedBy:u,format:v},null!=s&&(p.signature=s),null!=c&&(p.userDefinedMetadata=c),(b=r.modelInitializer)&&(p.modelInitializer=b),t.abrupt("return",p);case 38:case"end":return t.stop()}}),t,this,[[5,11]])}))),function(){return a.apply(this,arguments)})},{key:"loadWeights",value:(n=Xt(regeneratorRuntime.mark((function t(e){var r,n,a,o,i,u,v,s,c,P,l,f,p,b,h,y,m,g,T;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:r=Array.isArray(this.path)?this.path[1]:this.path,n=Jt(r),a=qt(n,2),o=a[0],i=a[1],u=this.weightPathPrefix||o,v=[],s=Nt(e);try{for(s.s();!(c=s.n()).done;)P=c.value,v.push.apply(v,Ft(P.weights))}catch(t){s.e(t)}finally{s.f()}l=[],f=[],p=Nt(e);try{for(p.s();!(b=p.n()).done;){h=b.value,y=Nt(h.paths);try{for(y.s();!(m=y.n()).done;)g=m.value,null!=this.weightUrlConverter?f.push(this.weightUrlConverter(g)):l.push(u+g+i)}catch(t){y.e(t)}finally{y.f()}}}catch(t){p.e(t)}finally{p.f()}if(!this.weightUrlConverter){t.next=19;break}return t.t0=l.push,t.t1=l,t.t2=Ft,t.next=16,Promise.all(f);case 16:t.t3=t.sent,t.t4=(0,t.t2)(t.t3),t.t0.apply.call(t.t0,t.t1,t.t4);case 19:return t.next=21,Rt(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});case 21:return T=t.sent,t.abrupt("return",[v,Object(d.d)(T)]);case 23:case"end":return t.stop()}}),t,this)}))),function(t){return n.apply(this,arguments)})}])&&Zt(e.prototype,r),t}();function Jt(t){var e=t.lastIndexOf("/"),r=t.lastIndexOf("?");return[t.substring(0,e)+"/",r>e?t.substring(r):""]}function _t(t){return null!=t.match(Ht.URL_SCHEME_REGEX)}Ht.URL_SCHEME_REGEX=/^https?:\/\//;var $t=function(t,e){return("undefined"!=typeof fetch||null!=e&&null!=e.fetchFunc)&&(Array.isArray(t)?t.every((function(t){return _t(t)})):_t(t))?te(t,e):null};function te(t,e){return new Ht(t,e)}function ee(t,e){return te(t,e)}function re(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function ne(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){re(o,n,a,i,u,"next",t)}function u(t){re(o,n,a,i,u,"throw",t)}i(void 0)}))}}function ae(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function oe(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function ie(t,e,r){return e&&oe(t.prototype,e),r&&oe(t,r),t}b.registerSaveRouter($t),b.registerLoadRouter($t);var ue=function(){function t(e){ae(this,t),this.modelArtifacts=e}var e;return ie(t,[{key:"load",value:(e=ne(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.modelArtifacts);case 1:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})}]),t}(),ve=function(){function t(e){ae(this,t),this.saveHandler=e}var e;return ie(t,[{key:"save",value:(e=ne(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.saveHandler(e));case 1:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})}]),t}();function se(t,e,r,n){if(1===arguments.length){var a=null!=t.modelTopology||null!=t.weightSpecs;return a?new ue(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ue({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ue({modelTopology:t,weightSpecs:e,weightData:r,trainingConfig:n})}function ce(t){return new ve(t)}var Pe,le=r(1),fe=r(27),de=r(145),pe=r(4),be=r(57),he=Object(pe.b)({confusionMatrix_:function(t,e,r){var n=Object(le.a)(t,"labels","confusionMatrix"),a=Object(le.a)(e,"predictions","confusionMatrix");I.b(null==r||r>0&&Number.isInteger(r),(function(){return"If provided, numClasses must be a positive integer, "+"but got ".concat(r)})),I.b(1===n.rank,(function(){return"Expected the rank of labels to be 1, but got ".concat(n.rank)})),I.b(1===a.rank,(function(){return"Expected the rank of predictions to be 1, "+"but got ".concat(a.rank)})),I.b(n.shape[0]===a.shape[0],(function(){return"Mismatch in the number of examples: "+"".concat(n.shape[0]," vs. ").concat(a.shape[0],". ")+"Labels and predictions should have the same number of elements."})),I.b(r>0&&Number.isInteger(r),(function(){return"numClasses is required to be a positive integer, but got "+"".concat(r)}));var o=Object(de.a)(Object(bt.a)(n,"int32"),r),i=Object(de.a)(Object(bt.a)(a,"int32"),r),u=Object(be.a)(o),v=Object(fe.a)(u,i);return Object(bt.a)(v,"int32")}}),ye=r(3),me=r(82),ge=r(237);function Te(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function je(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Te(o,n,a,i,u,"next",t)}function u(t){Te(o,n,a,i,u,"throw",t)}i(void 0)}))}}function ze(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return we(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?we(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function we(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function De(t,e){return xe.apply(this,arguments)}function xe(){return(xe=je(regeneratorRuntime.mark((function t(e,r){var n,a,o,i,u,v,s,c,P,l,f,d,p,b,h,y,m;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=Object(le.a)(e,"img","toPixels"),e instanceof mt.a||(a=n,n=Object(bt.a)(a,"int32"),a.dispose()),2===n.rank||3===n.rank){t.next=4;break}throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(n.rank,"."));case 4:if(o=n.shape.slice(0,2),i=ze(o,2),u=i[0],v=i[1],!((s=2===n.rank?1:n.shape[2])>4||2===s)){t.next=8;break}throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(s));case 8:if("float32"===n.dtype||"int32"===n.dtype){t.next=10;break}throw new Error("Unsupported type for toPixels: ".concat(n.dtype,".")+" Please use float32 or int32 tensors.");case 10:return t.next=12,n.data();case 12:c=t.sent,P="float32"===n.dtype?255:1,l=new Uint8ClampedArray(v*u*4),f=0;case 16:if(!(f<u*v)){t.next=41;break}d=[0,0,0,255],p=0;case 19:if(!(p<s)){t.next=33;break}if(b=c[f*s+p],"float32"!==n.dtype){t.next=26;break}if(!(b<0||b>1)){t.next=24;break}throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(b,"."));case 24:t.next=29;break;case 26:if("int32"!==n.dtype){t.next=29;break}if(!(b<0||b>255)){t.next=29;break}throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(b,"."));case 29:1===s?(d[0]=b*P,d[1]=b*P,d[2]=b*P):d[p]=b*P;case 30:p++,t.next=19;break;case 33:l[0+(h=4*f)]=Math.round(d[0]),l[h+1]=Math.round(d[1]),l[h+2]=Math.round(d[2]),l[h+3]=Math.round(d[3]);case 38:++f,t.next=16;break;case 41:return null!=r&&(r.width=v,r.height=u,y=r.getContext("2d"),m=new ImageData(l,v,u),y.putImageData(m,0,0)),n!==e&&n.dispose(),t.abrupt("return",l);case 44:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var Oe=Object(pe.b)({fromPixels_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var r=!1,n=!1,a=!1,o=!1,i=!1,u=!1;if(t.data instanceof Uint8Array)r=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)n=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)o=!0;else if(null!=t.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));u=!0}if(a){var v=2;if(a&&t.readyState<v)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}var s=Object(me.c)(ye.hb,l.a.backendName);if(null!=s){var c={pixels:t},P={numChannels:e};return l.a.runKernel(ye.hb,c,P)}var f,d,p=a?[t.videoWidth,t.videoHeight]:[t.width,t.height],b=ze(p,2),h=b[0],y=b[1];if(i?f=t.getContext("2d").getImageData(0,0,h,y).data:n||r?f=t.data:(o||a||u)&&(null==Pe&&(Pe=document.createElement("canvas").getContext("2d")),Pe.canvas.width=h,Pe.canvas.height=y,Pe.drawImage(t,0,0,h,y),f=Pe.getImageData(0,0,h,y).data),4===e)d=new Int32Array(f);else{var m=h*y;d=new Int32Array(m*e);for(var g=0;g<m;g++)for(var T=0;T<e;++T)d[g*e+T]=f[4*g+T]}var j=[y,h,e];return Object(ge.a)(d,j,"int32")}});function Le(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Se(t,e){var r=t.shape.length,n=e.shape.length;if(r<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(r,"."));if(n<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[n-1]>r)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[n-1]," vs. ").concat(r));if(0===Object(I.N)(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));for(var a=e.shape,o=a[a.length-1],i=1,u=0;u<a.length-1;++u)i*=a[u];var v=t.shape,s=a.slice();s.pop();for(var c=1,P=o;P<r;++P)c*=v[P],s.push(v[P]);var l=[].concat(function(t){return function(t){if(Array.isArray(t))return Le(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Le(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Le(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(Object(I.j)(t.shape).map((function(t){return t/c}))),[1]).slice(0,o);return[s,i,c,l]}var Ae=r(155);function ke(t){return function(t){if(Array.isArray(t))return Ce(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Ce(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ce(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ce(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Ie(t,e,r){var n=t.shape.length;I.b(n===e.length,(function(){return"Error in slice".concat(n,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(n,").")})),I.b(n===r.length,(function(){return"Error in slice".concat(n,"D: Length of size ").concat(r," must ")+"match the rank of the array (".concat(n,").")}));for(var a=function(a){I.b(e[a]+r[a]<=t.shape[a],(function(){return"Error in slice".concat(n,"D: begin[").concat(a,"] + size[").concat(a,"] ")+"(".concat(e[a]+r[a],") would overflow input.shape[").concat(a,"] (").concat(t.shape[a],")")}))},o=0;o<n;++o)a(o)}function Ee(t){for(var e=[],r=0;t>0;)1&t&&e.push(r),t/=2,r++;return e}function Me(t,e,r){for(var n=[],a=0;a<t.length;a++)n[a]=Math.ceil((e[a]-t[a])/r[a]);return n}function Ue(t,e,r,n){for(var a=ke(t),o=a.length;o<n.length;o++)a.push(1);for(var i=0;i<r;i++)0===i?a[e]=1:(a.splice(e,0,1),a.pop());return a}function Re(t,e,r){return r<=t?r:r-(e-1)}function We(t,e){for(var r=[],n=0;n<t;n++)r.push(e+n);return r}function Qe(t,e,r,n,a,o,i,u,v){var s=t.length,c=new Array(s),P=new Array(s),l=new Array(s);if(e.length&&r>0){var f=e[0],d=r+1;c=Ye(i,f,d,n,t),P=Ge(u,f,d,a,t),l=Ue(o,f,d,t)}else for(var p=0;p<s;p++)c[p]=Ne(i,n,o,t,p,v),P[p]=qe(u,a,o,t,p,v),l[p]=Fe(o,p,v);return{begin:c,end:P,strides:l}}function Ye(t,e,r,n,a){for(var o=ke(a),i=We(r,e),u=0;u<o.length;u++)if(i.indexOf(u)>-1)o[u]=0;else{var v=Re(e,r,u),s=n[v];t&1<<v&&(s=0),o[u]=s}return o}function Ge(t,e,r,n,a){for(var o=ke(a),i=We(r,e),u=0;u<o.length;u++)if(i.indexOf(u)>-1)o[u]=Number.MAX_SAFE_INTEGER;else{var v=Re(e,r,u),s=n[v];t&1<<v&&(s=Number.MAX_SAFE_INTEGER),o[u]=s}for(var c=0;c<o.length;c++){var P=a[c];o[c]<0&&(o[c]+=P),o[c]=I.i(0,o[c],a[c])}return o}function Fe(t,e,r){var n=t[e];return(r&1<<e||null==n)&&(n=1),n}function Ne(t,e,r,n,a,o){var i=e[a],u=r[a]||1;(t&1<<a||o&1<<a||null==i)&&(i=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var v=n[a];return i<0&&(i+=v),I.i(0,i,v-1)}function qe(t,e,r,n,a,o){var i=e[a],u=r[a]||1;(t&1<<a||o&1<<a||null==i)&&(i=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var v=n[a];return i<0&&(i+=v),u>0?I.i(0,i,v):I.i(-1,i,v-1)}function Ke(t,e,r){for(var n=r.length,a=0;a<r.length;a++)if(r[a]>1){n=a;break}for(var o=n+1;o<r.length;o++)if(e[o]>0||r[o]!==t[o])return!1;return!0}function Be(t,e){for(var r=t.length>0?t[t.length-1]:1,n=0;n<t.length-1;n++)r+=t[n]*e[n];return r}function Ve(t,e,r){var n,a,o=t.shape.length;return(n="number"==typeof e?[e].concat(ke(new Array(o-1).fill(0))):e.length<o?e.concat(new Array(o-e.length).fill(0)):e.slice()).forEach((function(t){I.b(-1!==t,(function(){return"slice() does not support negative begin indexing."}))})),a=(a=null==r?new Array(o).fill(-1):"number"==typeof r?[r].concat(ke(new Array(o-1).fill(-1))):r.length<o?r.concat(new Array(o-r.length).fill(-1)):r).map((function(e,r){return e>=0?e:(I.b(-1===e,(function(){return"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(r,".")})),t.shape[r]-n[r])})),[n,a]}function Xe(t,e,r,n,a,o,i,u,v){var s=e.slice(),c=r.slice(),P=n;null==n&&(P=new Array(s.length));var l=Ee(i);if(l.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==v)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");var f=t.length-s.length,d=Ee(u),p=t.slice();d.forEach((function(t){s[t]=0,c[t]=1,p.splice(t,0,1)}));var b=Qe(p,l,f,s,c,P,a,o,i),h=b.begin,y=b.end,m=b.strides;s=h,c=y,P=m;var g=Ee(v);g.forEach((function(t){c[t]=s[t]+1,P[t]=1}));var T=Me(s,c,P),j=T.filter((function(t,e){return-1===g.indexOf(e)}));return{nonStrided:P.every((function(t){return 1===t})),$begin:s,$end:c,$strides:P,size:T,newShape:p,outShape:j}}function Ze(t){return(Ze="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function He(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Je(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _e(t,e,r){return e&&Je(t.prototype,e),r&&Je(t,r),t}var $e=function(){function t(){He(this,t)}return _e(t,[{key:"getClassName",value:function(){return this.constructor.className}}],[{key:"fromConfig",value:function(t,e){return new t(e)}}]),t}(),tr=function(){function t(){He(this,t),this.classNameMap={}}return _e(t,null,[{key:"getMap",value:function(){return null==t.instance&&(t.instance=new t),t.instance}},{key:"register",value:function(e){t.getMap().classNameMap[e.className]=[e,e.fromConfig]}}]),t}();function er(t){Object(I.b)(null!=t.className,(function(){return"Class being registered does not have the static className property defined."})),Object(I.b)("string"==typeof t.className,(function(){return"className is required to be a string, but got type "+Ze(t.className)})),Object(I.b)(t.className.length>0,(function(){return"Class being registered has an empty-string as its className, which is disallowed."})),tr.register(t)}var rr=r(23),nr=r(176),ar=r(10),or="2.8.6",ir=r(20),ur=r(13),vr=r(15),sr=r(9),cr=r(42),Pr=r(25),lr=r(22),fr=r(38),dr=r(16);function pr(t){return(pr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function br(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function hr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){br(o,n,a,i,u,"next",t)}function u(t){br(o,n,a,i,u,"throw",t)}i(void 0)}))}}function yr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function mr(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function gr(t,e){return(gr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Tr(t,e){return!e||"object"!==pr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function jr(t){return(jr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var zr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&gr(t,e)}(v,t);var e,r,n,a,o,i,u=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=jr(t);if(e){var a=jr(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Tr(this,r)}}(v);function v(){return yr(this,v),u.apply(this,arguments)}return e=v,(r=[{key:"minimize",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2?arguments[2]:void 0,n=this.computeGradients(t,r),a=n.value,o=n.grads;if(null!=r){var i=r.map((function(t){return{name:t.name,tensor:o[t.name]}}));this.applyGradients(i)}else this.applyGradients(o);return Object(ir.d)(o),e?a:(a.dispose(),null)}},{key:"iterations",get:function(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}},{key:"incrementIterations",value:function(){this.iterations_=this.iterations+1}},{key:"computeGradients",value:function(t,e){return Object(fr.f)(t,e)}},{key:"dispose",value:function(){null!=this.iterations_&&Object(ir.d)(this.iterations_)}},{key:"saveIterations",value:(i=hr(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return null==this.iterations_&&(this.iterations_=0),t.abrupt("return",{name:"iter",tensor:Object(dr.a)(this.iterations_,"int32")});case 2:case"end":return t.stop()}}),t,this)}))),function(){return i.apply(this,arguments)})},{key:"getWeights",value:(o=hr(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:throw new Error("getWeights() is not implemented for this optimizer yet.");case 1:case"end":return t.stop()}}),t)}))),function(){return o.apply(this,arguments)})},{key:"setWeights",value:(a=hr(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()));case 1:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"extractIterations",value:(n=hr(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e[0].tensor.data();case 2:return this.iterations_=t.sent[0],t.abrupt("return",e.slice(1));case 4:case"end":return t.stop()}}),t,this)}))),function(t){return n.apply(this,arguments)})}])&&mr(e.prototype,r),v}($e);function wr(t){return(wr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Dr(t){return function(t){if(Array.isArray(t))return xr(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return xr(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?xr(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function xr(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Or(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Lr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Or(o,n,a,i,u,"next",t)}function u(t){Or(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Sr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ar(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function kr(t,e){return(kr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Cr(t,e){return!e||"object"!==wr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ir(t){return(Ir=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Object.defineProperty(zr,Symbol.hasInstance,{value:function(t){return null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients}});var Er=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&kr(t,e)}(u,t);var e,r,n,a,o,i=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=Ir(t);if(e){var a=Ir(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Cr(this,r)}}(u);function u(t,e){var r,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return Sr(this,u),(r=i.call(this)).learningRate=t,r.rho=e,r.epsilon=n,r.accumulatedGrads=[],r.accumulatedUpdates=[],null==n&&(r.epsilon=l.a.backend.epsilon()),r}return e=u,r=[{key:"applyGradients",value:function(t){var e=this;(Array.isArray(t)?t.map((function(t){return t.name})):Object.keys(t)).forEach((function(r,n){var a=l.a.registeredVariables[r];null==e.accumulatedGrads[n]&&(e.accumulatedGrads[n]={originalName:"".concat(r,"/accum_grad"),variable:Object(ir.t)((function(){return Object(lr.a)(a).variable(!1)}))}),null==e.accumulatedUpdates[n]&&(e.accumulatedUpdates[n]={originalName:"".concat(r,"/accum_var"),variable:Object(ir.t)((function(){return Object(lr.a)(a).variable(!1)}))});var o=Array.isArray(t)?t[n].tensor:t[r];if(null!=o){var i=e.accumulatedGrads[n].variable,u=e.accumulatedUpdates[n].variable;Object(ir.t)((function(){var t=Object(ur.a)(Object(sr.a)(i,e.rho),Object(sr.a)(Object(Pr.a)(o),1-e.rho)),r=Object(sr.a)(Object(vr.a)(Object(cr.a)(Object(ur.a)(u,e.epsilon)),Object(cr.a)(Object(ur.a)(i,e.epsilon))),o),n=Object(ur.a)(Object(sr.a)(u,e.rho),Object(sr.a)(Object(Pr.a)(r),1-e.rho));i.assign(t),u.assign(n);var v=Object(ur.a)(Object(sr.a)(r,-e.learningRate),a);a.assign(v)}))}})),this.incrementIterations()}},{key:"dispose",value:function(){null!=this.accumulatedUpdates&&(Object(ir.d)(this.accumulatedGrads.map((function(t){return t.variable}))),Object(ir.d)(this.accumulatedUpdates.map((function(t){return t.variable}))))}},{key:"getWeights",value:(o=Lr(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=[].concat(Dr(this.accumulatedGrads),Dr(this.accumulatedUpdates)),t.next=3,this.saveIterations();case 3:return t.t0=t.sent,t.abrupt("return",[t.t0].concat(e.map((function(t){return{name:t.originalName,tensor:t.variable}}))));case 5:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"setWeights",value:(a=Lr(regeneratorRuntime.mark((function t(e){var r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.extractIterations(e);case 2:e=t.sent,r=e.length/2,this.accumulatedGrads=e.slice(0,r).map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}})),this.accumulatedUpdates=e.slice(r,2*r).map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}));case 7:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"getConfig",value:function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}}],n=[{key:"fromConfig",value:function(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}],r&&Ar(e.prototype,r),n&&Ar(e,n),u}(zr);Er.className="Adadelta",er(Er);var Mr=r(157);function Ur(t){return(Ur="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Rr(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Wr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Rr(o,n,a,i,u,"next",t)}function u(t){Rr(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Qr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Yr(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Gr(t,e){return(Gr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Fr(t,e){return!e||"object"!==Ur(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Nr(t){return(Nr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var qr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Gr(t,e)}(u,t);var e,r,n,a,o,i=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=Nr(t);if(e){var a=Nr(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Fr(this,r)}}(u);function u(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;return Qr(this,u),(e=i.call(this)).learningRate=t,e.initialAccumulatorValue=r,e.accumulatedGrads=[],e}return e=u,r=[{key:"applyGradients",value:function(t){var e=this;(Array.isArray(t)?t.map((function(t){return t.name})):Object.keys(t)).forEach((function(r,n){var a=l.a.registeredVariables[r];null==e.accumulatedGrads[n]&&(e.accumulatedGrads[n]={originalName:"".concat(r,"/accumulator"),variable:Object(ir.t)((function(){return Object(Mr.a)(a.shape,e.initialAccumulatorValue).variable(!1)}))});var o=Array.isArray(t)?t[n].tensor:t[r];if(null!=o){var i=e.accumulatedGrads[n].variable;Object(ir.t)((function(){var t=Object(ur.a)(i,Object(Pr.a)(o));i.assign(t);var r=Object(ur.a)(Object(sr.a)(Object(vr.a)(o,Object(cr.a)(Object(ur.a)(t,l.a.backend.epsilon()))),-e.learningRate),a);a.assign(r)}))}})),this.incrementIterations()}},{key:"dispose",value:function(){null!=this.accumulatedGrads&&Object(ir.d)(this.accumulatedGrads.map((function(t){return t.variable})))}},{key:"getWeights",value:(o=Wr(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.saveIterations();case 2:return t.t0=t.sent,t.abrupt("return",[t.t0].concat(this.accumulatedGrads.map((function(t){return{name:t.originalName,tensor:t.variable}}))));case 4:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"setWeights",value:(a=Wr(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.extractIterations(e);case 2:e=t.sent,this.accumulatedGrads=e.map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}));case 5:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"getConfig",value:function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}}],n=[{key:"fromConfig",value:function(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}],r&&Yr(e.prototype,r),n&&Yr(e,n),u}(zr);qr.className="Adagrad",er(qr);var Kr=r(54),Br=r(14);function Vr(t){return(Vr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Xr(t){return function(t){if(Array.isArray(t))return Zr(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Zr(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Zr(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Zr(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Hr(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Jr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Hr(o,n,a,i,u,"next",t)}function u(t){Hr(o,n,a,i,u,"throw",t)}i(void 0)}))}}function _r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function $r(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function tn(t,e){return(tn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function en(t,e){return!e||"object"!==Vr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function rn(t){return(rn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var nn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&tn(t,e)}(u,t);var e,r,n,a,o,i=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=rn(t);if(e){var a=rn(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return en(this,r)}}(u);function u(t,e,r){var n,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return _r(this,u),(n=i.call(this)).learningRate=t,n.beta1=e,n.beta2=r,n.epsilon=a,n.accumulatedFirstMoment=[],n.accumulatedSecondMoment=[],Object(ir.t)((function(){n.accBeta1=Object(dr.a)(e).variable(),n.accBeta2=Object(dr.a)(r).variable()})),null==a&&(n.epsilon=l.a.backend.epsilon()),n}return e=u,r=[{key:"applyGradients",value:function(t){var e=this,r=Array.isArray(t)?t.map((function(t){return t.name})):Object.keys(t);Object(ir.t)((function(){var n=Object(Br.a)(1,e.accBeta1),a=Object(Br.a)(1,e.accBeta2);r.forEach((function(r,o){var i=l.a.registeredVariables[r];null==e.accumulatedFirstMoment[o]&&(e.accumulatedFirstMoment[o]={originalName:"".concat(r,"/m"),variable:Object(ir.t)((function(){return Object(lr.a)(i).variable(!1)}))}),null==e.accumulatedSecondMoment[o]&&(e.accumulatedSecondMoment[o]={originalName:"".concat(r,"/v"),variable:Object(ir.t)((function(){return Object(lr.a)(i).variable(!1)}))});var u=Array.isArray(t)?t[o].tensor:t[r];if(null!=u){var v=e.accumulatedFirstMoment[o].variable,s=e.accumulatedSecondMoment[o].variable,c=Object(ur.a)(Object(sr.a)(v,e.beta1),Object(sr.a)(u,1-e.beta1)),P=Object(ur.a)(Object(sr.a)(s,e.beta2),Object(sr.a)(Object(Pr.a)(u),1-e.beta2)),f=Object(vr.a)(c,n),d=Object(vr.a)(P,a);v.assign(c),s.assign(P);var p=Object(ur.a)(Object(sr.a)(Object(vr.a)(f,Object(ur.a)(Object(cr.a)(d),e.epsilon)),-e.learningRate),i);i.assign(p)}})),e.accBeta1.assign(Object(sr.a)(e.accBeta1,e.beta1)),e.accBeta2.assign(Object(sr.a)(e.accBeta2,e.beta2))})),this.incrementIterations()}},{key:"dispose",value:function(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(ir.d)(this.accumulatedFirstMoment.map((function(t){return t.variable}))),null!=this.accumulatedSecondMoment&&Object(ir.d)(this.accumulatedSecondMoment.map((function(t){return t.variable})))}},{key:"getWeights",value:(o=Jr(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=[].concat(Xr(this.accumulatedFirstMoment),Xr(this.accumulatedSecondMoment)),t.next=3,this.saveIterations();case 3:return t.t0=t.sent,t.abrupt("return",[t.t0].concat(e.map((function(t){return{name:t.originalName,tensor:t.variable}}))));case 5:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"setWeights",value:(a=Jr(regeneratorRuntime.mark((function t(e){var r,n=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.extractIterations(e);case 2:e=t.sent,Object(ir.t)((function(){n.accBeta1.assign(Object(Kr.a)(n.beta1,n.iterations_+1)),n.accBeta2.assign(Object(Kr.a)(n.beta2,n.iterations_+1))})),r=e.length/2,this.accumulatedFirstMoment=e.slice(0,r).map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}})),this.accumulatedSecondMoment=e.slice(r,2*r).map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}));case 8:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"getConfig",value:function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}}],n=[{key:"fromConfig",value:function(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}],r&&$r(e.prototype,r),n&&$r(e,n),u}(zr);nn.className="Adam",er(nn);var an=r(50),on=r(98);function un(t){return(un="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function vn(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function sn(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){vn(o,n,a,i,u,"next",t)}function u(t){vn(o,n,a,i,u,"throw",t)}i(void 0)}))}}function cn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Pn(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function ln(t,e){return(ln=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function fn(t,e){return!e||"object"!==un(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function dn(t){return(dn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var pn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ln(t,e)}(u,t);var e,r,n,a,o,i=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=dn(t);if(e){var a=dn(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return fn(this,r)}}(u);function u(t,e,r){var n,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;return cn(this,u),(n=i.call(this)).learningRate=t,n.beta1=e,n.beta2=r,n.epsilon=a,n.decay=o,n.accumulatedFirstMoment=[],n.accumulatedWeightedInfNorm=[],Object(ir.t)((function(){n.iteration=Object(dr.a)(0).variable(),n.accBeta1=Object(dr.a)(e).variable()})),null==a&&(n.epsilon=l.a.backend.epsilon()),n}return e=u,r=[{key:"applyGradients",value:function(t){var e=this,r=Array.isArray(t)?t.map((function(t){return t.name})):Object.keys(t);Object(ir.t)((function(){var n=Object(Br.a)(1,e.accBeta1),a=Object(vr.a)(-e.learningRate,Object(ur.a)(Object(sr.a)(e.iteration,e.decay),1));r.forEach((function(r,o){var i=l.a.registeredVariables[r];null==e.accumulatedFirstMoment[o]&&(e.accumulatedFirstMoment[o]={originalName:"".concat(r,"/m"),variable:Object(lr.a)(i).variable(!1)}),null==e.accumulatedWeightedInfNorm[o]&&(e.accumulatedWeightedInfNorm[o]={originalName:"".concat(r,"/v"),variable:Object(lr.a)(i).variable(!1)});var u=Array.isArray(t)?t[o].tensor:t[r];if(null!=u){var v=e.accumulatedFirstMoment[o].variable,s=e.accumulatedWeightedInfNorm[o].variable,c=Object(ur.a)(Object(sr.a)(v,e.beta1),Object(sr.a)(u,1-e.beta1)),P=Object(sr.a)(s,e.beta2),f=Object(an.a)(u),d=Object(on.a)(P,f);v.assign(c),s.assign(d);var p=Object(ur.a)(Object(sr.a)(Object(vr.a)(a,n),Object(vr.a)(c,Object(ur.a)(d,e.epsilon))),i);i.assign(p)}})),e.iteration.assign(Object(ur.a)(e.iteration,1)),e.accBeta1.assign(Object(sr.a)(e.accBeta1,e.beta1))})),this.incrementIterations()}},{key:"dispose",value:function(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(ir.d)(this.accumulatedFirstMoment.map((function(t){return t.variable}))),null!=this.accumulatedWeightedInfNorm&&Object(ir.d)(this.accumulatedWeightedInfNorm.map((function(t){return t.variable})))}},{key:"getWeights",value:(o=sn(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:throw new Error("getWeights() is not implemented for Adamax yet.");case 1:case"end":return t.stop()}}),t)}))),function(){return o.apply(this,arguments)})},{key:"setWeights",value:(a=sn(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:throw new Error("setWeights() is not implemented for Adamax yet.");case 1:case"end":return t.stop()}}),t)}))),function(t){return a.apply(this,arguments)})},{key:"getConfig",value:function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}}],n=[{key:"fromConfig",value:function(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}],r&&Pn(e.prototype,r),n&&Pn(e,n),u}(zr);function bn(t){return(bn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function hn(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function yn(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){hn(o,n,a,i,u,"next",t)}function u(t){hn(o,n,a,i,u,"throw",t)}i(void 0)}))}}function mn(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function gn(t,e){return(gn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Tn(t,e){return!e||"object"!==bn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function jn(t){return(jn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}pn.className="Adamax",er(pn);var zn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&gn(t,e)}(u,t);var e,r,n,a,o,i=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=jn(t);if(e){var a=jn(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Tn(this,r)}}(u);function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this)).learningRate=t,e.setLearningRate(t),e}return e=u,r=[{key:"applyGradients",value:function(t){var e=this;(Array.isArray(t)?t.map((function(t){return t.name})):Object.keys(t)).forEach((function(r,n){var a=Array.isArray(t)?t[n].tensor:t[r];if(null!=a){var o=l.a.registeredVariables[r];Object(ir.t)((function(){var t=Object(ur.a)(Object(sr.a)(e.c,a),o);o.assign(t)}))}})),this.incrementIterations()}},{key:"setLearningRate",value:function(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(ir.l)(Object(dr.a)(-t))}},{key:"dispose",value:function(){this.c.dispose()}},{key:"getWeights",value:(o=yn(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.saveIterations();case 2:return t.t0=t.sent,t.abrupt("return",[t.t0]);case 4:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"setWeights",value:(a=yn(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.extractIterations(e);case 2:if(0===(e=t.sent).length){t.next=5;break}throw new Error("SGD optimizer does not have settable weights.");case 5:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"getConfig",value:function(){return{learningRate:this.learningRate}}}],n=[{key:"fromConfig",value:function(t,e){return new t(e.learningRate)}}],r&&mn(e.prototype,r),n&&mn(e,n),u}(zr);function wn(t){return(wn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Dn(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function xn(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Dn(o,n,a,i,u,"next",t)}function u(t){Dn(o,n,a,i,u,"throw",t)}i(void 0)}))}}function On(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ln(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Sn(t,e){return(Sn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function An(t,e){return!e||"object"!==wn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function kn(t){return(kn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}zn.className="SGD",er(zn);var Cn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Sn(t,e)}(u,t);var e,r,n,a,o,i=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=kn(t);if(e){var a=kn(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return An(this,r)}}(u);function u(t,e){var r,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return On(this,u),(r=i.call(this,t)).learningRate=t,r.momentum=e,r.useNesterov=n,r.accumulations=[],r.m=Object(dr.a)(r.momentum),r}return e=u,r=[{key:"applyGradients",value:function(t){var e=this;(Array.isArray(t)?t.map((function(t){return t.name})):Object.keys(t)).forEach((function(r,n){var a=l.a.registeredVariables[r];null==e.accumulations[n]&&(e.accumulations[n]={originalName:"".concat(r,"/momentum"),variable:Object(ir.t)((function(){return Object(lr.a)(a).variable(!1)}))});var o=e.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[r];null!=i&&Object(ir.t)((function(){var t,r=Object(ur.a)(Object(sr.a)(e.m,o),i);t=e.useNesterov?Object(ur.a)(Object(sr.a)(e.c,Object(ur.a)(i,Object(sr.a)(r,e.m))),a):Object(ur.a)(Object(sr.a)(e.c,r),a),o.assign(r),a.assign(t)}))})),this.incrementIterations()}},{key:"dispose",value:function(){this.m.dispose(),null!=this.accumulations&&Object(ir.d)(this.accumulations.map((function(t){return t.variable})))}},{key:"setMomentum",value:function(t){this.momentum=t}},{key:"getWeights",value:(o=xn(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.saveIterations();case 2:return t.t0=t.sent,t.abrupt("return",[t.t0].concat(this.accumulations.map((function(t){return{name:t.originalName,tensor:t.variable}}))));case 4:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"setWeights",value:(a=xn(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.extractIterations(e);case 2:e=t.sent,this.accumulations=e.map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}));case 5:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"getConfig",value:function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}}],n=[{key:"fromConfig",value:function(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}],r&&Ln(e.prototype,r),n&&Ln(e,n),u}(zn);function In(t){return(In="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function En(t){return function(t){if(Array.isArray(t))return Mn(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Mn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Mn(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Mn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Un(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Rn(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Un(o,n,a,i,u,"next",t)}function u(t){Un(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Wn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Qn(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Yn(t,e){return(Yn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Gn(t,e){return!e||"object"!==In(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Fn(t){return(Fn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Cn.className="Momentum",er(Cn);var Nn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Yn(t,e)}(u,t);var e,r,n,a,o,i=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=Fn(t);if(e){var a=Fn(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return Gn(this,r)}}(u);function u(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(Wn(this,u),(e=i.call(this)).learningRate=t,e.decay=r,e.momentum=n,e.epsilon=a,e.accumulatedMeanSquares=[],e.accumulatedMoments=[],e.accumulatedMeanGrads=[],e.centered=o,null==a&&(e.epsilon=l.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.");return e}return e=u,r=[{key:"applyGradients",value:function(t){var e=this;(Array.isArray(t)?t.map((function(t){return t.name})):Object.keys(t)).forEach((function(r,n){var a=l.a.registeredVariables[r];null==e.accumulatedMeanSquares[n]&&(e.accumulatedMeanSquares[n]={originalName:"".concat(r,"/rms"),variable:Object(ir.t)((function(){return Object(lr.a)(a).variable(!1)}))}),null==e.accumulatedMoments[n]&&(e.accumulatedMoments[n]={originalName:"".concat(r,"/momentum"),variable:Object(ir.t)((function(){return Object(lr.a)(a).variable(!1)}))}),null==e.accumulatedMeanGrads[n]&&e.centered&&(e.accumulatedMeanGrads[n]={originalName:"".concat(r,"/mg"),variable:Object(ir.t)((function(){return Object(lr.a)(a).variable(!1)}))});var o=Array.isArray(t)?t[n].tensor:t[r];if(null!=o){var i=e.accumulatedMeanSquares[n].variable,u=e.accumulatedMoments[n].variable;Object(ir.t)((function(){var t=Object(ur.a)(Object(sr.a)(i,e.decay),Object(sr.a)(Object(Pr.a)(o),1-e.decay));if(e.centered){var r=e.accumulatedMeanGrads[n].variable,v=Object(ur.a)(Object(sr.a)(r,e.decay),Object(sr.a)(o,1-e.decay)),s=Object(vr.a)(Object(sr.a)(o,e.learningRate),Object(cr.a)(Object(Br.a)(t,Object(ur.a)(Object(Pr.a)(v),e.epsilon)))),c=Object(ur.a)(Object(sr.a)(u,e.momentum),s);i.assign(t),r.assign(v),u.assign(c);var P=Object(Br.a)(a,c);a.assign(P)}else{var l=Object(ur.a)(Object(sr.a)(i,e.decay),Object(sr.a)(Object(Pr.a)(o),1-e.decay)),f=Object(ur.a)(Object(sr.a)(u,e.momentum),Object(vr.a)(Object(sr.a)(o,e.learningRate),Object(cr.a)(Object(ur.a)(l,e.epsilon))));i.assign(l),u.assign(f);var d=Object(Br.a)(a,f);a.assign(d)}}))}})),this.incrementIterations()}},{key:"dispose",value:function(){null!=this.accumulatedMeanSquares&&Object(ir.d)(this.accumulatedMeanSquares.map((function(t){return t.variable}))),null!=this.accumulatedMeanGrads&&this.centered&&Object(ir.d)(this.accumulatedMeanGrads.map((function(t){return t.variable}))),null!=this.accumulatedMoments&&Object(ir.d)(this.accumulatedMoments.map((function(t){return t.variable})))}},{key:"getWeights",value:(o=Rn(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=[].concat(En(this.accumulatedMeanSquares),En(this.accumulatedMoments)),this.centered&&e.push.apply(e,En(this.accumulatedMeanGrads)),t.next=4,this.saveIterations();case 4:return t.t0=t.sent,t.abrupt("return",[t.t0].concat(e.map((function(t){return{name:t.originalName,tensor:t.variable}}))));case 6:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"setWeights",value:(a=Rn(regeneratorRuntime.mark((function t(e){var r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.extractIterations(e);case 2:e=t.sent,r=this.centered?e.length/3:e.length/2,this.accumulatedMeanSquares=e.slice(0,r).map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}})),this.accumulatedMoments=e.slice(r,2*r).map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*r,3*r).map((function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}})));case 8:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"getConfig",value:function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}}],n=[{key:"fromConfig",value:function(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}],r&&Qn(e.prototype,r),n&&Qn(e,n),u}(zr);Nn.className="RMSProp",er(Nn);var qn=r(119),Kn=r(18),Bn=r(39);function Vn(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Xn=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,r;return e=t,(r=[{key:"sgd",value:function(t){return new zn(t)}},{key:"momentum",value:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return new Cn(t,e,r)}},{key:"rmsprop",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return new Nn(t,e,r,n,a)}},{key:"adam",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return new nn(t,e,r,n)}},{key:"adadelta",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return new Er(t,e,r)}},{key:"adamax",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;return new pn(t,e,r,n,a)}},{key:"adagrad",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;return new qr(t,e)}}])&&Vn(e,r),t}(),Zn={sgd:Xn.sgd,momentum:Xn.momentum,adadelta:Xn.adadelta,adagrad:Xn.adagrad,rmsprop:Xn.rmsprop,adamax:Xn.adamax,adam:Xn.adam},Hn=r(358),Jn=r(79),_n=r(44),$n=r(17);function ta(t,e){var r=t[0].length;t.forEach((function(t,e){I.b(t.length===r,(function(){return"Error in concat".concat(r,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(r,")")}))})),I.b(e>=0&&e<r,(function(){return"Error in concat".concat(r,"D: axis must be between 0 and ").concat(r-1,".")}));var n=t[0];t.forEach((function(t,a){for(var o=0;o<r;o++)I.b(o===e||t[o]===n[o],(function(){return"Error in concat".concat(r,"D: Shape of tensors[").concat(a,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(n,") ")+"along the non-concatenated axis ".concat(a,".")}))}))}function ea(t,e){for(var r=t[0].slice(),n=1;n<t.length;n++)r[e]+=t[n][e];return r}var ra=r(29),na=r(51),aa=30;function oa(t){return t<=aa?t:Object(I.G)(t,Math.floor(Math.sqrt(t)))}function ia(t,e,r){return[r*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function ua(t,e,r){var n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(n)(a=a.concat(e.slice(0))).push(t[0]/r),a=a.concat(t.slice(1));else{a=a.concat(t[0]);for(var o=e.length,i=0;i<o;++i)a=a.concat([t[i+1]/e[i],e[i]]);a=a.concat(t.slice(o+1))}return a}function va(t,e){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=[];if(r){n.push(e);for(var a=e+1;a<t;++a)a<=2*e?(n.push(a),n.push(a-(e+1))):n.push(a)}else{for(var o=[],i=[],u=1;u<t;++u)u>=2*e+1||u%2==1?i.push(u):o.push(u);n.push.apply(n,o),n.push(0),n.push.apply(n,i)}return n}function sa(t,e,r){var n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];n?a.push(t[0]/r):a.push(t[0]*r);for(var o=1;o<t.length;++o)o<=e.length?n?a.push(e[o-1]*t[o]):a.push(t[o]/e[o-1]):a.push(t[o]);return a}function ca(t,e){for(var r=[0],n=0;n<e;++n)r.push(t[n][0]);return r}function Pa(t,e,r){for(var n=t.slice(0,1),a=0;a<r;++a)n.push(t[a+1]-e[a][0]-e[a][1]);return n}var la=1.7580993408473768,fa=1.0507009873554805,da=.3275911,pa=.254829592,ba=-.284496736,ha=1.421413741,ya=-1.453152027,ma=1.061405429;function ga(){var t;Object(f.c)().getBool("IS_TEST")||(t=console).warn.apply(t,arguments)}function Ta(){var t;Object(f.c)().getBool("IS_TEST")||(t=console).log.apply(t,arguments)}function ja(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));for(var r=new Float32Array(2*t.length),n=0;n<r.length;n+=2)r[n]=t[n/2],r[n+1]=e[n/2];return r}function za(t){for(var e=new Float32Array(t.length/2),r=new Float32Array(t.length/2),n=0;n<t.length;n+=2)e[n/2]=t[n],r[n/2]=t[n+1];return{real:e,imag:r}}function wa(t){for(var e=Math.ceil(t.length/4),r=new Float32Array(e),n=new Float32Array(e),a=0;a<t.length;a+=4)r[Math.floor(a/4)]=t[a],n[Math.floor(a/4)]=t[a+1];return{real:r,imag:n}}function Da(t){for(var e=Math.floor(t.length/4),r=new Float32Array(e),n=new Float32Array(e),a=2;a<t.length;a+=4)r[Math.floor(a/4)]=t[a],n[Math.floor(a/4)]=t[a+1];return{real:r,imag:n}}function xa(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Oa(t,e,r,n){t[2*n]=e,t[2*n+1]=r}function La(t,e){for(var r=new Float32Array(t/2),n=new Float32Array(t/2),a=0;a<Math.ceil(t/2);a++){var o=(e?2:-2)*Math.PI*(a/t);r[a]=Math.cos(o),n[a]=Math.sin(o)}return{real:r,imag:n}}function Sa(t,e,r){var n=(r?2:-2)*Math.PI*(t/e);return{real:Math.cos(n),imag:Math.sin(n)}}function Aa(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=[];if("number"==typeof e)Object(I.b)(t.shape[r]%e==0,(function(){return"Number of splits must evenly divide the axis."})),n=new Array(e).fill(t.shape[r]/e);else{var a=e.reduce((function(t,e){return-1===e&&(t+=1),t}),0);Object(I.b)(a<=1,(function(){return"There should be only one negative value in split array."}));var o=e.indexOf(-1);if(-1!==o){var i=e.reduce((function(t,e){return e>0?t+e:t}));e[o]=t.shape[r]-i}Object(I.b)(t.shape[r]===e.reduce((function(t,e){return t+e})),(function(){return"The sum of sizes must match the size of the axis dimension."})),n=e}return n}function ka(t,e){var r,n=!1;for(t<=aa?(r=t,n=!0):r=Object(I.G)(t,Math.floor(Math.sqrt(t)));!n;)r>e||r===t?n=!0:r=Object(I.G)(t,r+1);return r}function Ca(t,e,r){for(var n=[],a=t.length,o=0;o<a;o++)o!==e?n.push(t[o]):n.push(r);return n}function Ia(t,e,r,n){var a=e.shape.length,o=t.shape.length;if(0!==n&&(n<-a||n>a))throw new Error("Expect batchDims in the range of [-".concat(a,", ").concat(a,"], but got ").concat(n));if(n<0&&(n+=a),n>o)throw new Error("batchDims (".concat(n,") must be less than rank(x) (\n    ").concat(o,")."));if(r<n)throw new Error("batchDims (".concat(n,") must be less than or equal to axis (").concat(r,")."));for(var i=0;i<n;++i)if(t.shape[i]!==e.shape[i])throw new Error("x.shape[".concat(i,"]: ").concat(t.shape[i]," should be equal to indices.shape[").concat(i,"]: ").concat(e.shape[i],"."));for(var u=t.shape[r],v=[],s=1,c=1,P=1,l=0;l<n;++l)v.push(t.shape[l]),s*=t.shape[l];for(var f=n;f<r;f++)v.push(t.shape[f]),c*=t.shape[f];for(var d=n;d<a;d++)v.push(e.shape[d]);for(var p=r+1;p<o;p++)v.push(t.shape[p]),P*=t.shape[p];return{batchSize:s,sliceSize:P,outerSize:c,dimSize:u,outputShape:v}}function Ea(t,e,r){if("complex64"===e){if("complex64"===t.dtype)return t.clone();var n=Object(Jn.a)(t.shape),a=Object(bt.a)(t,"float32"),o=r.complex(a,n);return n.dispose(),a.dispose(),o}if(!Object(I.p)(t.dtype,e))return l.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){var i=r.real(t),u=Object(bt.a)(i,e);return i.dispose(),u}if("int32"===e)return r.int(t);if("bool"===e){var v=Object(dr.a)(0,t.dtype),s=r.notEqual(t,v);return v.dispose(),s}throw new Error("Error in Cast: failed to cast ".concat(t.dtype," to ").concat(e))}function Ma(t,e){return l.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function Ua(t){try{return t.map((function(t){return Object(ar.decodeString)(t)}))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(t))}}function Ra(t){return t.map((function(t){return Object(ar.encodeString)(t)}))}var Wa=r(209),Qa=r(97),Ya=r(241),Ga=r(187),Fa=r(103);function Na(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var qa={kernelName:ye.a,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Na(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Na(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(t,Object(Fa.a)(Object(bt.a)(r,"float32"),-1))}}}},Ka=r(30);function Ba(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Va={kernelName:ye.b,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ba(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ba(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){var e=Object(Pr.a)(Object(bt.a)(r,"float32")),n=Object(cr.a)(Object(Br.a)(Object(dr.a)(1),e));return Object(Ka.a)(Object(vr.a)(t,n))}}}};function Xa(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Za={kernelName:ye.c,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Xa(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Xa(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){var e=Object(cr.a)(Object(Br.a)(Object(Pr.a)(Object(bt.a)(r,"float32")),1));return Object(vr.a)(t,e)}}}},Ha=r(8),Ja=r(19);function _a(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var $a={kernelName:ye.d,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return _a(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_a(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=$n.a(n.shape,a.shape);return{a:function(){var e=t,r=$n.c(n.shape,o);return r.length>0&&(e=Object(Ja.a)(e,r)),Object(Ha.a)(e,n.shape)},b:function(){var e=t,r=$n.c(a.shape,o);return r.length>0&&(e=Object(Ja.a)(e,r)),Object(Ha.a)(e,a.shape)}}}},to={kernelName:ye.e,saveAllInputs:!0,gradFunc:function(t,e){var r={};return e.forEach((function(e,n){r[n]=function(){return t.clone()}})),r}};function eo(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ro={kernelName:ye.h,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return eo(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?eo(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(lr.a)(r)}}}};function no(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ao={kernelName:ye.i,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return no(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?no(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(lr.a)(r)}}}};function oo(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var io={kernelName:ye.j,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return oo(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?oo(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(vr.a)(t,Object(cr.a)(Object(Br.a)(Object(dr.a)(1),Object(Pr.a)(Object(bt.a)(r,"float32")))))}}}};function uo(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var vo={kernelName:ye.k,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return uo(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?uo(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){var e=Object(cr.a)(Object(ur.a)(Object(dr.a)(1),Object(Pr.a)(Object(bt.a)(r,"float32"))));return Object(vr.a)(t,e)}}}};function so(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var co={kernelName:ye.m,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return so(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?so(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=Object($n.a)(n.shape,a.shape);return{a:function(){var e=Object(ur.a)(Object(Pr.a)(n),Object(Pr.a)(a)),r=Object(sr.a)(t,Object(vr.a)(a,e)),i=Object($n.c)(n.shape,o);return i.length>0&&(r=Object(Ja.a)(r,i)),Object(Ha.a)(r,n.shape)},b:function(){var e=Object(ur.a)(Object(Pr.a)(n),Object(Pr.a)(a)),r=Object(Ka.a)(Object(sr.a)(t,Object(vr.a)(n,e))),i=Object($n.c)(a.shape,o);return i.length>0&&(r=Object(Ja.a)(r,i)),Object(Ha.a)(r,a.shape)}}}};function Po(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var lo={kernelName:ye.l,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Po(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Po(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(vr.a)(t,Object(ur.a)(Object(Pr.a)(Object(bt.a)(r,"float32")),1))}}}};function fo(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var po={kernelName:ye.n,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return fo(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?fo(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(vr.a)(t,Object(Br.a)(Object(dr.a)(1),Object(Pr.a)(Object(bt.a)(r,"float32"))))}}}},bo=Object(pe.b)({avgPool3dGrad_:function(t,e,r,n){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1,1],o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,u=Object(le.a)(t,"dy","avgPool3dGrad"),v=Object(le.a)(e,"input","avgPool3dGrad"),s=u,c=v,P=!1;4===v.rank&&(P=!0,s=Object(Ha.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),c=Object(Ha.a)(v,[1,v.shape[0],v.shape[1],v.shape[2],v.shape[3]])),I.b(5===s.rank,(function(){return"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(s.rank,".")})),I.b(5===c.rank,(function(){return"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(c.rank,".")})),I.b(ra.h(n,a),(function(){return"Error in avgPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(n," and dilations '").concat(a,"'")})),null!=i&&I.b(I.v(o),(function(){return"Error in avgPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(i," but got pad ").concat(o,".")}));var f={dy:s,input:c},d={filterSize:r,strides:n,dilations:a,pad:o,dimRoundingMode:i},p=l.a.runKernel(ye.q,f,d);return P?Object(Ha.a)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});function ho(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var yo={kernelName:ye.p,inputsToSave:["x"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ho(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ho(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.filterSize,o=r.strides,i=r.dilations,u=r.pad,v=r.dimRoundingMode,s=null==i?[1,1,1]:i;return{x:function(){return bo(t,n,a,o,s,u,v)}}}},mo=Object(pe.b)({avgPoolGrad_:function(t,e,r,n,a){var o=Object(le.a)(t,"dy","avgPoolGrad"),i=Object(le.a)(e,"input","avgPoolGrad");I.b(i.rank===o.rank,(function(){return"Rank of input (".concat(i.rank,") does not match rank of dy (").concat(o.rank,")")}));var u=i,v=o,s=!1;3===i.rank&&(s=!0,u=Object(Ha.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),v=Object(Ha.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I.b(4===v.rank,(function(){return"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(v.rank,".")})),I.b(4===u.rank,(function(){return"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(u.rank,".")}));var c={dy:v,input:u},P={filterSize:r,strides:n,pad:a},f=l.a.runKernel(ye.r,c,P);return s?Object(Ha.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});function go(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var To={kernelName:ye.o,inputsToSave:["x"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return go(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?go(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.filterSize,o=r.strides,i=r.pad;return{x:function(){return mo(t,n,a,o,i)}}}};function jo(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var zo={kernelName:ye.s,inputsToSave:["a","b"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return jo(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?jo(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1],i=r.transposeA,u=r.transposeB;return i||u?!i&&u?{a:function(){return Object(fe.a)(t,o,!1,!1)},b:function(){return Object(fe.a)(t,a,!0,!1)}}:i&&!u?{a:function(){return Object(fe.a)(o,t,!1,!0)},b:function(){return Object(fe.a)(a,t,!1,!1)}}:{a:function(){return Object(fe.a)(o,t,!0,!0)},b:function(){return Object(fe.a)(t,a,!0,!0)}}:{a:function(){return Object(fe.a)(t,o,!1,!0)},b:function(){return Object(fe.a)(a,t,!0,!1)}}}},wo=r(126),Do={kernelName:ye.t,gradFunc:function(t,e,r){var n=r.blockShape,a=r.crops;return{x:function(){return Object(wo.a)(t,n,a)}}}},xo={kernelName:ye.v,gradFunc:function(t,e,r){for(var n=r,a=n.inputShape,o=n.shape,i=Array.from(o),u=a.length-1;u>=0;u--)if(a[u]===o[u])i[u]=1;else if(1!==a[u])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(o,"]."));for(var v=[],s=0;s<i.length;s++)i[s]>1&&v.push(s);return{x:function(){return Object(Ja.a)(t,v,!0)}}}},Oo={kernelName:ye.w,gradFunc:function(t){return{x:function(){return t.clone()}}}},Lo={kernelName:ye.x,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}},So=r(60),Ao=r(61),ko=r(69),Co=r(41);function Io(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Eo={kernelName:ye.y,inputsToSave:["x"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Io(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Io(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.clipValueMin,o=r.clipValueMax;return{x:function(){return Object(Co.a)(Object(ko.a)(Object(So.a)(n,a),Object(Ao.a)(n,o)),t,Object(lr.a)(t))}}}},Mo={kernelName:ye.A,inputsToSave:["x"],gradFunc:qa.gradFunc},Uo=r(90),Ro={kernelName:ye.B,saveAllInputs:!0,gradFunc:function(t,e,r){var n=e.map((function(t){return t.shape})),a=r.axis,o=Object(I.I)(a,e[0].shape)[0],i=n.map((function(t){return t[o]}));return Object(Uo.a)(t,i,o).map((function(t){return function(){return t}}))}},Wo=r(177),Qo=r(175);function Yo(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Go={kernelName:ye.C,inputsToSave:["x","filter"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Yo(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Yo(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1],i=r.dilations,u=r.strides,v=r.pad,s=r.dataFormat;return I.b(ra.i(i),(function(){return"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(i,"'")})),{x:function(){return Object(Qo.a)(a.shape,t,o,u,v,s)},filter:function(){return Object(Wo.a)(a,t,o.shape,u,v,s)}}}},Fo=r(78);function No(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var qo={kernelName:ye.E,inputsToSave:["dy","filter"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return No(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?No(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1],i=r.strides,u=r.pad,v=r.dataFormat,s=r.dimRoundingMode;return{dy:function(){return Object(Fo.a)(t,o,i,u,v,1,s)},filter:function(){return Object(Wo.a)(t,a,o.shape,i,u,v,s)}}}},Ko=Object(pe.b)({conv3DBackpropFilter_:function(t,e,r,n,a){var o=t;4===t.rank&&(o=Object(Ha.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));var i=e;4===i.rank&&(i=Object(Ha.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),I.b(5===o.rank,(function(){return"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,".")})),I.b(5===i.rank,(function(){return"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(i.shape,".")})),I.b(5===r.length,(function(){return"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(r,".")})),I.b(o.shape[4]===r[3],(function(){return"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(r[3],".")})),I.b(i.shape[4]===r[4],(function(){return"Error in conv3dDerFilter: depth of dy (".concat(i.shape[4],") must ")+"match output depth for filter (".concat(r[4],").")}));var u={x:o,dy:i},v={strides:n,pad:a,filterShape:r};return l.a.runKernel(ye.G,u,v)}}),Bo=r(243);function Vo(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Xo={kernelName:ye.F,inputsToSave:["x","filter"],gradFunc:function(t,e,r){var n=r.dilations,a=r.strides,o=r.pad;I.b(Object(ra.i)(n),(function(){return"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(n,"'")}));var i=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Vo(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Vo(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),u=i[0],v=i[1];return{x:function(){return Object(Bo.a)(u.shape,t,v,a,o)},filter:function(){return Ko(u,t,v.shape,a,o)}}}},Zo=r(234);function Ho(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Jo={kernelName:ye.I,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ho(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ho(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(Object(Ka.a)(Object(Zo.a)(Object(bt.a)(r,"float32"))),t)}}}},_o=r(235);function $o(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ti={kernelName:ye.J,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return $o(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?$o(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(Object(_o.a)(Object(bt.a)(r,"float32")),t)}}}},ei=r(160);function ri(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ni={kernelName:ye.L,inputsToSave:["x"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ri(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ri(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.axis,o=r.exclusive,i=r.reverse;return{x:function(){var e=Object(_n.f)([a],n.rank),r=Object(ei.a)(t,a,o,!i);return null!=e&&(r=Object(be.a)(r,e)),r}}}},ai=r(247),oi=r(246);function ii(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ui={kernelName:ye.O,inputsToSave:["x","filter"],gradFunc:function(t,e,r){var n=r.dilations,a=r.strides,o=r.pad,i=r.dimRoundingMode,u=null==n?[1,1]:n;I.b(ra.i(u),(function(){return"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(u,"'")}));var v=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ii(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ii(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),s=v[0],c=v[1];return I.b(4===s.rank,(function(){return"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(s.rank,".")})),I.b(4===c.rank,(function(){return"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(c.rank,".")})),I.b(s.shape[3]===c.shape[2],(function(){return"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(s.shape[3],") must match the inChannels dimension ")+"in filter ".concat(c.shape[2],".")})),I.b(ra.h(a,u),(function(){return"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(a," and dilations ")+"'".concat(u,"'.")})),null!=i&&I.b(I.v(o),(function(){return"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(i," but got pad ").concat(o,".")})),{x:function(){return Object(oi.a)(s.shape,t,c,a,o,n,i)},filter:function(){return Object(ai.a)(s,t,c.shape,a,o,n,i)}}}};function vi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var si={kernelName:ye.S,inputsToSave:["x","filter"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return vi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?vi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1],i={x:a,filter:o,dy:t},u={x:a,filter:o,dy:t};return{x:function(){return l.a.runKernel(ye.U,i,r)},filter:function(){return l.a.runKernel(ye.T,u,r)}}}};function ci(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Pi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Pi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Pi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var li={kernelName:ye.V,outputsToSave:[!0],gradFunc:function(t,e){var r={dy:t,y:ci(e,1)[0]};return{x:function(){return l.a.runKernel(ye.W,r)}}}},fi=r(47);function di(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var pi={kernelName:ye.Y,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return di(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?di(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],n=Object(sr.a)(Object(fi.a)(Object(Ka.a)(Object(Pr.a)(r))),2/Math.sqrt(Math.PI));return{x:function(){return Object(sr.a)(t,n)}}}};function bi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var hi={kernelName:ye.Z,outputsToSave:[!0],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return bi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?bi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(t,r)}}}};function yi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var mi={kernelName:ye.ab,inputsToSave:["input"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return yi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?yi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{input:function(){return Object(Ha.a)(t,r.shape)}}}};function gi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Ti={kernelName:ye.bb,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return gi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?gi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(t,Object(fi.a)(r))}}}},ji={kernelName:ye.fb,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}};function zi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var wi={kernelName:ye.gb,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return zi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?zi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=Object($n.a)(n.shape,a.shape);return{a:function(){var e=Object(vr.a)(t,Object(bt.a)(a,"float32")),r=Object($n.c)(n.shape,o);return r.length>0?Object(Ha.a)(Object(Ja.a)(e,r),n.shape):e},b:function(){var e=Object(sr.a)(t,Object(bt.a)(n,"float32")),r=Object($n.c)(a.shape,o);r.length>0&&(e=Object(Ha.a)(Object(Ja.a)(e,r),a.shape));var i=Object(Pr.a)(a);return Object(Ka.a)(Object(vr.a)(e,Object(bt.a)(i,"float32")))}}}},Di=r(231),xi=r(107);function Oi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Li={kernelName:ye.ib,inputsToSave:["x","mean","variance","scale"],gradFunc:function(t,e,r){var n=r.varianceEpsilon,a=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Oi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Oi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,4),o=a[0],i=a[1],u=a[2],v=a[3],s=null==v?Object(dr.a)(1):v,c=Object($n.c)(i.shape,o.shape),P=[];if(1===i.rank){for(var l=0;l<o.shape.length-1;++l)P.push(o.shape[l]);P.push(1)}var f=Object(Br.a)(o,i),d=Object(sr.a)(t,s),p=Object(Di.a)(Object(ur.a)(u,Object(dr.a)(n))),b=Object(sr.a)(Object(sr.a)(Object(sr.a)(p,p),p),Object(dr.a)(-.5));return{x:function(){return 1===i.rank?Object(Ha.a)(Object(sr.a)(Object(sr.a)(t,Object(xi.a)(Object(Ha.a)(p,[1,1,1,i.shape[0]]),P)),s),o.shape):Object(Ha.a)(Object(sr.a)(Object(sr.a)(t,p),s),o.shape)},mean:function(){var t=Object(sr.a)(Object(sr.a)(p,Object(dr.a)(-1)),d);return 1===i.rank&&(t=Object(Ja.a)(t,c)),Object(Ha.a)(t,i.shape)},variance:function(){var t=Object(sr.a)(Object(sr.a)(b,f),d);return 1===i.rank&&(t=Object(Ja.a)(t,c)),Object(Ha.a)(t,i.shape)},scale:function(){var e=Object(sr.a)(f,p),r=Object(sr.a)(t,e);return 1===i.rank&&(r=Object(Ja.a)(r,c)),Object(Ha.a)(r,i.shape)},offset:function(){var e=t;return 1===i.rank&&(e=Object(Ja.a)(e,c)),Object(Ha.a)(e,i.shape)}}}},Si=r(173);function Ai(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ki={kernelName:ye.mb,inputsToSave:["x","indices"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ai(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ai(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1],i=r.axis,u=Object(I.I)(i,a.shape)[0];return{x:function(){var e=a.shape,r=o.size,n=e.slice(0,u),v=n.length,s=e.slice(i,e.length).slice(1),c=s.length,P=Ci(0,v),l=Ci(v+1,v+1+c),f=Ii([n,[r],s]),d=Object(Ha.a)(t,f),p=Object(Ha.a)(o,[r]),b=Ii([[v],P,l]),h=Object(be.a)(d,b),y=Object(Si.a)(h,p,a.shape[u]),m=Object(_n.h)(b);return Object(be.a)(y,m)},indices:function(){return o}}}};function Ci(t,e){for(var r=[],n=t;n<e;++n)r.push(n);return r}function Ii(t){for(var e=[],r=0;r<t.length;++r)for(var n=0;n<t[r].length;++n)e.push(t[r][n]);return e}function Ei(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Mi={kernelName:ye.ob,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ei(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ei(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1];return{a:function(){return Object(lr.a)(n)},b:function(){return Object(lr.a)(a)}}}},Ui={kernelName:ye.qb,gradFunc:function(t){return{x:function(){return Object(bt.a)(t,"float32")}}}},Ri={kernelName:ye.sb,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}},Wi={kernelName:ye.tb,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}},Qi={kernelName:ye.ub,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}},Yi=r(52);function Gi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Fi={kernelName:ye.xb,inputsToSave:["x"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Gi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Gi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.alpha,o=Object(Yi.a)(n,0);return{x:function(){return Object(Co.a)(o,t,Object(sr.a)(t,a))}}}};function Ni(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var qi={kernelName:ye.Cb,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ni(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ni(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(vr.a)(t,Object(ur.a)(r,1))}}}};function Ki(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Bi={kernelName:ye.Bb,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ki(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ki(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(vr.a)(t,Object(bt.a)(r,"float32"))}}}};function Vi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Xi={kernelName:ye.Db,inputsToSave:[],outputsToSave:[!0],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Vi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Vi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.axis;return{logits:function(){var e=Object(fi.a)(n);return Object(Br.a)(t,Object(sr.a)(Object(Ja.a)(t,a,!0),e))}}}},Zi=Object(pe.b)({localResponseNormalizationBackprop_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5,u={x:t,y:e,dy:r},v={depthRadius:n,bias:a,alpha:o,beta:i};return l.a.runKernel(ye.wb,u,v)}});function Hi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Ji={kernelName:ye.vb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Hi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Hi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1],i=r.depthRadius,u=r.bias,v=r.alpha,s=r.beta;return{x:function(){return Zi(a,o,t,i,u,v,s)}}}},_i=r(100);function $i(t,e,r,n){return e.rank<r.rank&&(e=Object(Ha.a)(e,_n.e(e.shape,n))),t.rank<r.rank&&(t=Object(Ha.a)(t,_n.e(t.shape,n))),{x:function(){return Object(sr.a)(t,Object(bt.a)(Object(_i.a)(r,e),t.dtype))}}}var tu={kernelName:ye.Hb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:function(t,e,r){var n=r.reductionIndices,a=e[0],o=$i(t,e[1],a,I.I(n,a.shape));return{x:function(){return o.x()}}}},eu=r(122);function ru(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var nu={kernelName:ye.Nb,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ru(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ru(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1];return{a:function(){return Object(sr.a)(t,Object(bt.a)(Object(So.a)(n,a),"float32"))},b:function(){return Object(sr.a)(t,Object(bt.a)(Object(eu.a)(n,a),"float32"))}}}},au=Object(pe.b)({maxPool3dGrad_:function(t,e,r,n,a){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],i=arguments.length>6?arguments[6]:void 0,u=arguments.length>7?arguments[7]:void 0,v=Object(le.a)(t,"dy","maxPool3dGrad"),s=Object(le.a)(e,"input","maxPool3dGrad"),c=Object(le.a)(r,"output","maxPool3dGrad"),P=v,f=s,d=c,p=!1;4===s.rank&&(p=!0,P=Object(Ha.a)(v,[1,v.shape[0],v.shape[1],v.shape[2],v.shape[3]]),f=Object(Ha.a)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),d=Object(Ha.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),I.b(5===P.rank,(function(){return"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(P.rank,".")})),I.b(5===f.rank,(function(){return"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(f.rank,".")})),I.b(5===d.rank,(function(){return"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,".")})),I.b(ra.h(a,o),(function(){return"Error in maxPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(a," and dilations '").concat(o,"'")})),null!=u&&I.b(I.v(i),(function(){return"Error in maxPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(u," but got pad ").concat(i,".")}));var b={dy:P,input:f,output:d},h={filterSize:n,strides:a,dilations:o,pad:i,dimRoundingMode:u},y=l.a.runKernel(ye.Kb,b,h);return p?Object(Ha.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}});function ou(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var iu={kernelName:ye.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ou(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ou(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1],i=r.filterSize,u=r.strides,v=r.dilations,s=r.pad,c=r.dimRoundingMode,P=null==v?[1,1,1]:v;return{x:function(){return au(t,a,o,i,u,P,s,c)}}}},uu=Object(pe.b)({maxPoolGrad_:function(t,e,r,n,a,o,i){var u=Object(le.a)(t,"dy","maxPoolGrad"),v=Object(le.a)(e,"input","maxPoolGrad"),s=Object(le.a)(r,"output","maxPoolGrad");I.b(v.rank===u.rank,(function(){return"Rank of input (".concat(v.rank,") does not match rank of dy ")+"(".concat(u.rank,")")})),I.b(4===u.rank,(function(){return"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(u.rank,".")})),I.b(4===v.rank,(function(){return"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(v.rank,".")})),null!=i&&I.b(I.v(o),(function(){return"Error in maxPoolGrad: pad must be an integer when using, "+"dimRoundingMode ".concat(i," but got pad ").concat(o,".")}));var c={dy:u,input:v,output:s},P={filterSize:n,strides:a,pad:o,dimRoundingMode:i};return l.a.runKernel(ye.Lb,c,P)}});function vu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var su={kernelName:ye.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return vu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?vu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1],i=r.filterSize,u=r.strides,v=r.pad;return{x:function(){return uu(t,a,o,i,u,v)}}}},cu=r(101);function Pu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var lu={kernelName:ye.Ob,inputsToSave:["x"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Pu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Pu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.axis,o=I.I(a,n.shape),i=Object(_n.d)(n.shape,o)[1],u=I.N(i);return{x:function(){var e=n.shape.slice();o.forEach((function(t){e[t]=1}));var r=Object(Ha.a)(t,e);return Object(vr.a)(Object(sr.a)(r,Object(cu.a)(n.shape,"float32")),u)}}}};function fu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var du={kernelName:ye.Pb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:function(t,e,r){var n=r.axis,a=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return fu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?fu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),o=a[0],i=$i(t,a[1],o,I.I(n,o.shape));return{x:function(){return i.x()}}}};function pu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var bu={kernelName:ye.Qb,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return pu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?pu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1];return{a:function(){return Object(sr.a)(t,Object(bt.a)(Object(Ao.a)(n,a),"float32"))},b:function(){return Object(sr.a)(t,Object(bt.a)(Object(Yi.a)(n,a),"float32"))}}}},hu=r(26),yu={kernelName:ye.Rb,inputsToSave:["x"],gradFunc:function(t,e,r){var n=e[0],a=r.paddings.map((function(t){return t[0]}));return{x:function(){return Object(hu.a)(t,a,n.shape)}}}},mu=r(162);function gu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Tu={kernelName:ye.Sb,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return gu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?gu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=Object($n.a)(n.shape,a.shape);return{a:function(){var e=Object($n.c)(n.shape,o);return e.length>0?Object(Ha.a)(Object(Ja.a)(t,e),n.shape):t},b:function(){var e=Object(sr.a)(t,Object(Ka.a)(Object(mu.a)(Object(vr.a)(n,a)))),r=Object($n.c)(a.shape,o);return r.length>0?Object(Ha.a)(Object(Ja.a)(e,r),a.shape):e}}}};function ju(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var zu={kernelName:ye.Ub,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ju(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ju(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=Object($n.a)(n.shape,a.shape);return{a:function(){var e=Object(sr.a)(t,Object(bt.a)(a,"float32")),r=Object($n.c)(n.shape,o);return r.length>0?Object(Ha.a)(Object(Ja.a)(e,r),n.shape):e},b:function(){var e=Object(sr.a)(t,Object(bt.a)(n,"float32")),r=Object($n.c)(a.shape,o);return r.length>0?Object(Ha.a)(Object(Ja.a)(e,r),a.shape):e}}}},wu={kernelName:ye.Vb,gradFunc:function(t){return{x:function(){return Object(Ka.a)(t)}}}},Du={kernelName:ye.ac,inputsToSave:["indices"],gradFunc:function(t,e){var r=e[0];return{indices:function(){return Object(Jn.a)(r.shape,"float32")}}}},xu={kernelName:ye.bc,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}},Ou=r(104),Lu={kernelName:ye.cc,saveAllInputs:!0,gradFunc:function(t,e,r){var n=r.axis;return Object(Ou.a)(t,n).map((function(t){return function(){return t}}))}},Su={kernelName:ye.dc,inputsToSave:["x"],gradFunc:function(t,e,r){var n=e[0],a=r.paddings.map((function(t){return t[0]}));return{x:function(){return Object(hu.a)(t,a,n.shape)}}}},Au=r(89);function ku(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Cu={kernelName:ye.fc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ku(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ku(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,3),n=r[0],a=r[1],o=r[2],i=n,u=a,v=$n.a(i.shape,u.shape);return{a:function(){var e=Object(bt.a)(u,"float32"),r=Object(sr.a)(t,Object(sr.a)(e,Object(Kr.a)(i,Object(Br.a)(e,Object(dr.a)(1))))),n=$n.c(i.shape,v);return n.length>0&&(r=Object(Ja.a)(r,n)),Object(Ha.a)(r,i.shape)},b:function(){var e=Object(Yi.a)(i,0),r=Object(Co.a)(e,Object(Au.a)(i),Object(lr.a)(i)),n=Object(sr.a)(t,Object(sr.a)(o,r)),a=$n.c(u.shape,v);return a.length>0&&(n=Object(Ja.a)(n,a)),Object(Ha.a)(n,u.shape)}}}};function Iu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Eu={kernelName:ye.gc,inputsToSave:["x","alpha"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Iu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Iu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=Object(Yi.a)(n,0);return{x:function(){return Object(Co.a)(o,t,Object(sr.a)(t,a))},alpha:function(){var e=Object(Co.a)(o,Object(lr.a)(t),Object(sr.a)(t,n)),r=Object($n.c)(a.shape,t.shape);return r.length>0&&(e=Object(Ja.a)(e,r)),Object(Ha.a)(e,a.shape)}}}};function Mu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Uu={kernelName:ye.kc,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Mu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Mu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=$n.a(n.shape,a.shape);return{a:function(){var e=Object(vr.a)(t,Object(bt.a)(a,"float32")),r=$n.c(n.shape,o);return r.length>0?Object(Ha.a)(Object(Ja.a)(e,r),n.shape):e},b:function(){var e=Object(sr.a)(t,Object(bt.a)(n,"float32")),r=$n.c(a.shape,o);r.length>0&&(e=Object(Ha.a)(Object(Ja.a)(e,r),a.shape));var i=Object(Pr.a)(a);return Object(Ka.a)(Object(vr.a)(e,Object(bt.a)(i,"float32")))}}}};function Ru(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Wu={kernelName:ye.lc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ru(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ru(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(vr.a)(t,Object(Ka.a)(Object(Pr.a)(r)))}}}};function Qu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Yu={kernelName:ye.nc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Qu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Qu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],n=Object(sr.a)(Object(Ao.a)(r,6),Object(Fa.a)(r));return{x:function(){return Object(sr.a)(t,Object(bt.a)(n,"float32"))}}}};function Gu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Fu={kernelName:ye.mc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Gu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Gu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(t,Object(bt.a)(Object(Fa.a)(r),"float32"))}}}};function Nu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var qu={kernelName:ye.oc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Nu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Nu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(Ha.a)(t,r.shape)}}}};function Ku(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Bu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Bu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Bu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Vu={kernelName:ye.pc,inputsToSave:["images"],gradFunc:function(t,e,r){var n={dy:t,images:Ku(e,1)[0]};return{images:function(){return l.a.runKernel(ye.qc,n,r)}}}};function Xu(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Zu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Zu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Zu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Hu={kernelName:ye.rc,inputsToSave:["images"],gradFunc:function(t,e,r){var n={dy:t,images:Xu(e,1)[0]};return{images:function(){return l.a.runKernel(ye.sc,n,r)}}}},Ju=r(55),_u={kernelName:ye.tc,gradFunc:function(t,e,r){var n=r.dims,a=Object(I.I)(n,t.shape);return{x:function(){return Object(Ju.a)(t,a)}}}},$u={kernelName:ye.vc,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}};function tv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ev={kernelName:ye.wc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return tv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?tv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(Ka.a)(Object(vr.a)(t,Object(sr.a)(Object(Kr.a)(r,1.5),2)))}}}},rv=r(123);function nv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var av={kernelName:ye.yc,inputsToSave:["condition"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return nv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?nv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{condition:function(){return Object(bt.a)(Object(lr.a)(r),"float32")},t:function(){return Object(sr.a)(t,Object(bt.a)(r,t.dtype))},e:function(){return Object(sr.a)(t,Object(bt.a)(Object(rv.a)(r),t.dtype))}}}};function ov(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var iv={kernelName:ye.zc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ov(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ov(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){var e=Object(Yi.a)(r,Object(dr.a)(0)),n=Object(dr.a)(la),a=Object(dr.a)(fa),o=Object(sr.a)(t,a),i=Object(sr.a)(Object(sr.a)(t,n),Object(fi.a)(Object(bt.a)(r,"float32")));return Object(Co.a)(e,o,i)}}}};function uv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var vv={kernelName:ye.Ac,outputsToSave:[!0],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return uv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?uv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(t,Object(sr.a)(r,Object(Br.a)(Object(dr.a)(1),r)))}}}},sv={kernelName:ye.Bc,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}},cv=r(159);function Pv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var lv={kernelName:ye.Cc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Pv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Pv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(Object(cv.a)(Object(bt.a)(r,"float32")),t)}}}},fv=r(218);function dv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var pv={kernelName:ye.Dc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return dv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?dv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(Object(fv.a)(Object(bt.a)(r,"float32")),t)}}}},bv=r(62);function hv(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return yv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?yv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function yv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var mv={kernelName:ye.Ec,inputsToSave:["x"],gradFunc:function(t,e,r){for(var n=hv(e,1)[0],a=r.begin,o=r.size,i=n.shape,u=hv(Ve(n,a,o),2),v=u[0],s=u[1],c=[],P=0;P<t.rank;P++)c.push([v[P],i[P]-v[P]-s[P]]);return{x:function(){return Object(bv.a)(t,c)}}}};function gv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Tv={kernelName:ye.Fc,outputsToSave:[!0],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return gv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?gv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.dim,o=Object(sr.a)(t,n);return{logits:function(){return Object(Br.a)(o,Object(sr.a)(Object(Ja.a)(o,[a],!0),n))}}}},jv=r(106);function zv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var wv={kernelName:ye.Gc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return zv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?zv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(t,Object(jv.a)(r))}}}},Dv=r(120),xv={kernelName:ye.Hc,gradFunc:function(t,e,r){var n=r.blockShape,a=r.paddings;return{x:function(){return Object(Dv.a)(t,n,a)}}}},Ov=r(34),Lv={kernelName:ye.Jc,gradFunc:function(t,e,r){var n=r.axis;return{x:function(){return Object(Ov.a)(t,n)}}}};function Sv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Av={kernelName:ye.Kc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Sv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Sv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(vr.a)(t,Object(sr.a)(Object(cr.a)(Object(bt.a)(r,"float32")),2))}}}};function kv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Cv={kernelName:ye.Lc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return kv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?kv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(t,Object(sr.a)(Object(bt.a)(r,"float32"),2))}}}};function Iv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Ev={kernelName:ye.Mc,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Iv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Iv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=Object(dr.a)(2);return{a:function(){return Object(sr.a)(t,Object(sr.a)(o,Object(Br.a)(n,a)))},b:function(){return Object(sr.a)(t,Object(sr.a)(o,Object(Br.a)(a,n)))}}}},Mv={kernelName:ye.Nc,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}};function Uv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Rv={kernelName:ye.Pc,inputsToSave:["a","b"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Uv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Uv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=r[0],a=r[1],o=$n.a(n.shape,a.shape);return{a:function(){var e=t,r=$n.c(n.shape,o);return r.length>0&&(e=Object(Ja.a)(e,r)),Object(Ha.a)(e,n.shape)},b:function(){var e=t,r=$n.c(a.shape,o);return r.length>0&&(e=Object(Ja.a)(e,r)),Object(Ha.a)(Object(Ka.a)(e),a.shape)}}}};function Wv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Qv={kernelName:ye.Qc,inputsToSave:["x"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Wv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Wv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=n.shape.slice(),o=r.axis;Object(I.I)(o,n.shape).forEach((function(t){a[t]=1}));var i=Object(Ha.a)(t,a),u=Object(sr.a)(i,Object(cu.a)(n.shape,"float32"));return{x:function(){return u}}}};function Yv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Gv={kernelName:ye.Rc,inputsToSave:["x"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Yv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Yv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(vr.a)(t,Object(Pr.a)(Object(cv.a)(r)))}}}};function Fv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Nv={kernelName:ye.Sc,outputsToSave:[!0],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Fv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Fv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return Object(sr.a)(Object(Br.a)(Object(dr.a)(1),Object(Pr.a)(r)),t)}}}};function qv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Kv={kernelName:ye.Tc,inputsToSave:["x"],gradFunc:function(t,e,r){var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return qv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?qv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0],a=r.reps;return{x:function(){var e=Object(lr.a)(n);if(1===n.rank)for(var r=0;r<a[0];++r)e=Object(ur.a)(e,Object(hu.a)(t,[r*n.shape[0]],[n.shape[0]]));else if(2===n.rank)for(var o=0;o<a[0];++o)for(var i=0;i<a[1];++i)e=Object(ur.a)(e,Object(hu.a)(t,[o*n.shape[0],i*n.shape[1]],[n.shape[0],n.shape[1]]));else if(3===n.rank)for(var u=0;u<a[0];++u)for(var v=0;v<a[1];++v)for(var s=0;s<a[2];++s)e=Object(ur.a)(e,Object(hu.a)(t,[u*n.shape[0],v*n.shape[1],s*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else{if(4!==n.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(n.rank," tensors yet."));for(var c=0;c<a[0];++c)for(var P=0;P<a[1];++P)for(var l=0;l<a[2];++l)for(var f=0;f<a[3];++f)e=Object(ur.a)(e,Object(hu.a)(t,[c*n.shape[0],P*n.shape[1],l*n.shape[2],f*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]))}return e}}}},Bv={kernelName:ye.Vc,gradFunc:function(t,e,r){var n=r.perm,a=_n.h(n);return{x:function(){return Object(be.a)(t,a)}}}},Vv=r(70),Xv={kernelName:ye.Xc,gradFunc:function(t,e,r){var n=r.axis;return{value:function(){return Object(Vv.a)(t,n)}}}},Zv=r(72),Hv=r(121);function Jv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}for(var _v=0,$v=[qa,Va,Za,$a,to,ro,ao,io,vo,co,lo,po,yo,To,zo,Do,xo,Oo,Lo,Eo,Mo,Ro,qo,Go,Xo,Jo,ti,ni,ui,si,Uu,li,pi,hi,mi,Ti,wi,ji,Li,ki,Mi,Ui,Ri,Wi,Qi,Fi,qi,Bi,Xi,Ji,tu,tu,nu,iu,su,lu,du,bu,yu,Tu,zu,wu,Du,xu,Lu,Su,Su,Cu,Eu,Wu,Yu,Fu,qu,Vu,Hu,_u,$u,ev,av,iv,vv,sv,lv,pv,mv,Tv,wv,xv,xv,Lv,Lv,Av,Ev,Cv,Mv,Rv,Qv,Gv,Nv,Kv,Bv,Xv,{kernelName:ye.Yc,inputsToSave:["segmentIds"],gradFunc:function(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Jv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Jv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0];return{x:function(){return function(t,e){for(var r=Object(on.a)(e,Object(lr.a)(e)),n=Object(Hv.a)(t,r),a=Object(So.a)(e,Object(dr.a)(0,"int32")),o=n.rank-a.rank,i=0;i<o;++i)a=Object(Zv.a)(a,i+1);a=Object(ko.a)(a,Object(cu.a)(n.shape,"bool"));var u=Object(lr.a)(n);return Object(Co.a)(a,n,u)}(t,r)}}}},{kernelName:ye.Zc,gradFunc:function(t){return{x:function(){return Object(lr.a)(t)}}}}];_v<$v.length;_v++){var ts=$v[_v];Object(me.e)(ts)}mt.a.prototype.abs=function(){return this.throwIfDisposed(),Object(an.a)(this)};var es=r(321);mt.a.prototype.acos=function(){return this.throwIfDisposed(),Object(es.a)(this)};var rs=r(322);mt.a.prototype.acosh=function(){return this.throwIfDisposed(),Object(rs.a)(this)};var ns=r(355);mt.a.prototype.addStrict=function(t){return this.throwIfDisposed(),Object(ns.a)(this,t)},mt.a.prototype.add=function(t){return this.throwIfDisposed(),Object(ur.a)(this,t)};var as=r(211);mt.a.prototype.all=function(t,e){return this.throwIfDisposed(),Object(as.a)(this,t,e)};var os=r(212);mt.a.prototype.any=function(t,e){return this.throwIfDisposed(),Object(os.a)(this,t,e)};var is=r(213);mt.a.prototype.argMax=function(t){return this.throwIfDisposed(),Object(is.a)(this,t)};var us=r(214);mt.a.prototype.argMin=function(t){return this.throwIfDisposed(),Object(us.a)(this,t)},mt.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(I.b)(1===this.size,(function(){return"The array must have only 1 element."})),Object(Ha.a)(this,[])},mt.a.prototype.asType=function(t){return this.throwIfDisposed(),Object(bt.a)(this,t)},mt.a.prototype.as1D=function(){return this.throwIfDisposed(),Object(Ha.a)(this,[this.size])},mt.a.prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(Ha.a)(this,[t,e])},mt.a.prototype.as3D=function(t,e,r){return this.throwIfDisposed(),Object(Ha.a)(this,[t,e,r])},mt.a.prototype.as4D=function(t,e,r,n){return this.throwIfDisposed(),Object(Ha.a)(this,[t,e,r,n])},mt.a.prototype.as5D=function(t,e,r,n,a){return this.throwIfDisposed(),Object(Ha.a)(this,[t,e,r,n,a])};var vs=r(324);mt.a.prototype.asin=function(){return this.throwIfDisposed(),Object(vs.a)(this)};var ss=r(325);mt.a.prototype.asinh=function(){return this.throwIfDisposed(),Object(ss.a)(this)};var cs=r(326);mt.a.prototype.atan=function(){return this.throwIfDisposed(),Object(cs.a)(this)};var Ps=r(215);mt.a.prototype.atan2=function(t){return this.throwIfDisposed(),Object(Ps.a)(this,t)};var ls=r(327);mt.a.prototype.atanh=function(){return this.throwIfDisposed(),Object(ls.a)(this)};var fs=r(158);mt.a.prototype.avgPool=function(t,e,r,n){return this.throwIfDisposed(),Object(fs.a)(this,t,e,r,n)},mt.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(Dv.a)(this,t,e)};var ds=r(105);mt.a.prototype.batchNorm=function(t,e,r,n,a){return this.throwIfDisposed(),Object(ds.a)(this,t,e,r,n,a)};var ps=r(143);mt.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(ps.a)(this,t)},mt.a.prototype.cast=function(t){return this.throwIfDisposed(),Object(bt.a)(this,t)};var bs=r(330);mt.a.prototype.ceil=function(){return this.throwIfDisposed(),Object(bs.a)(this)};var hs=r(331);function ys(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}mt.a.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(hs.a)(this,t,e)},mt.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof mt.a&&(t=[t]),Object(Ov.a)([this].concat(function(t){return function(t){if(Array.isArray(t))return ys(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return ys(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ys(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(t)),e)};var ms=r(216);mt.a.prototype.conv1d=function(t,e,r,n,a,o){return this.throwIfDisposed(),Object(ms.a)(this,t,e,r,n,a,o)};var gs=r(217);mt.a.prototype.conv2dTranspose=function(t,e,r,n,a){return this.throwIfDisposed(),Object(gs.a)(this,t,e,r,n,a)},mt.a.prototype.conv2d=function(t,e,r,n,a,o){return this.throwIfDisposed(),Object(Fo.a)(this,t,e,r,n,a,o)},mt.a.prototype.cos=function(){return this.throwIfDisposed(),Object(cv.a)(this)},mt.a.prototype.cosh=function(){return this.throwIfDisposed(),Object(fv.a)(this)},mt.a.prototype.cumsum=function(t,e,r){return this.throwIfDisposed(),Object(ei.a)(this,t,e,r)};var Ts=r(219);mt.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(Ts.a)(this,t,e)};var js=r(99);mt.a.prototype.depthwiseConv2D=function(t,e,r,n,a,o){return Object(ir.b)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Object(js.a)(this,t,e,r,n,a,o)},mt.a.prototype.depthwiseConv2d=function(t,e,r,n,a,o){return this.throwIfDisposed(),Object(js.a)(this,t,e,r,n,a,o)};var zs=r(220);mt.a.prototype.dilation2d=function(t,e,r,n,a){return this.throwIfDisposed(),Object(zs.a)(this,t,e,r,n,a)};var ws=r(221);mt.a.prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(ws.a)(this,t)},mt.a.prototype.divStrict=function(t){return this.throwIfDisposed(),Object(ns.b)(this,t)},mt.a.prototype.div=function(t){return this.throwIfDisposed(),Object(vr.a)(this,t)};var Ds=r(222);mt.a.prototype.dot=function(t){return this.throwIfDisposed(),Object(Ds.a)(this,t)};var xs=r(161);mt.a.prototype.elu=function(){return this.throwIfDisposed(),Object(xs.a)(this)};var Os=r(354);mt.a.prototype.equalStrict=function(t){return this.throwIfDisposed(),Object(Os.a)(this,t)},mt.a.prototype.equal=function(t){return this.throwIfDisposed(),Object(_i.a)(this,t)};var Ls=r(334);mt.a.prototype.erf=function(){return this.throwIfDisposed(),Object(Ls.a)(this)},mt.a.prototype.exp=function(){return this.throwIfDisposed(),Object(fi.a)(this)},mt.a.prototype.expandDims=function(t){return this.throwIfDisposed(),Object(Zv.a)(this,t)};var Ss=r(335);mt.a.prototype.expm1=function(){return this.throwIfDisposed(),Object(Ss.a)(this)};var As=r(171);mt.a.prototype.fft=function(){return this.throwIfDisposed(),Object(As.a)(this)},mt.a.prototype.flatten=function(){return this.throwIfDisposed(),Object(Ha.a)(this,[this.size])},mt.a.prototype.floor=function(){return this.throwIfDisposed(),Object(mu.a)(this)};var ks=r(156);mt.a.prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(ks.a)(this,t)},mt.a.prototype.gather=function(t,e){return this.throwIfDisposed(),Object(Hv.a)(this,t,e)},mt.a.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Object(Os.b)(this,t)},mt.a.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(So.a)(this,t)},mt.a.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Object(Os.c)(this,t)},mt.a.prototype.greater=function(t){return this.throwIfDisposed(),Object(Yi.a)(this,t)};var Cs=r(147);mt.a.prototype.ifft=function(){return this.throwIfDisposed(),Object(Cs.a)(this)};var Is=r(236);mt.a.prototype.irfft=function(){return this.throwIfDisposed(),Object(Is.a)(this)};var Es=r(336);mt.a.prototype.isFinite=function(){return this.throwIfDisposed(),Object(Es.a)(this)};var Ms=r(337);mt.a.prototype.isInf=function(){return this.throwIfDisposed(),Object(Ms.a)(this)};var Us=r(338);mt.a.prototype.isNaN=function(){return this.throwIfDisposed(),Object(Us.a)(this)};var Rs=r(164);mt.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(Rs.a)(this,t)},mt.a.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Object(Os.d)(this,t)},mt.a.prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(Ao.a)(this,t)},mt.a.prototype.lessStrict=function(t){return this.throwIfDisposed(),Object(Os.e)(this,t)},mt.a.prototype.less=function(t){return this.throwIfDisposed(),Object(eu.a)(this,t)};var Ws=r(223);mt.a.prototype.localResponseNormalization=function(t,e,r,n){return this.throwIfDisposed(),Object(Ws.a)(this,t,e,r,n)};var Qs=r(340);mt.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(Qs.a)(this)};var Ys=r(341);mt.a.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(Ys.a)(this,t)};var Gs=r(165);mt.a.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(Gs.a)(this,t,e)},mt.a.prototype.log=function(){return this.throwIfDisposed(),Object(Au.a)(this)};var Fs=r(224);mt.a.prototype.log1p=function(){return this.throwIfDisposed(),Object(Fs.a)(this)},mt.a.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(ko.a)(this,t)},mt.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Object(rv.a)(this)};var Ns=r(166);mt.a.prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(Ns.a)(this,t)};var qs=r(226);mt.a.prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(qs.a)(this,t)},mt.a.prototype.matMul=function(t,e,r){return this.throwIfDisposed(),Object(fe.a)(this,t,e,r)};var Ks=r(167);mt.a.prototype.maxPool=function(t,e,r,n){return this.throwIfDisposed(),Object(Ks.a)(this,t,e,r,n)};var Bs=r(81);mt.a.prototype.max=function(t,e){return this.throwIfDisposed(),Object(Bs.a)(this,t,e)},mt.a.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Object(ns.c)(this,t)},mt.a.prototype.maximum=function(t){return this.throwIfDisposed(),Object(on.a)(this,t)};var Vs=r(112);mt.a.prototype.mean=function(t,e){return this.throwIfDisposed(),Object(Vs.a)(this,t,e)};var Xs=r(144);mt.a.prototype.min=function(t,e){return this.throwIfDisposed(),Object(Xs.a)(this,t,e)},mt.a.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Object(ns.d)(this,t)};var Zs=r(124);mt.a.prototype.minimum=function(t){return this.throwIfDisposed(),Object(Zs.a)(this,t)};var Hs=r(227);mt.a.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(Hs.a)(this,t,e)},mt.a.prototype.modStrict=function(t){return this.throwIfDisposed(),Object(ns.e)(this,t)};var Js=r(168);mt.a.prototype.mod=function(t){return this.throwIfDisposed(),Object(Js.a)(this,t)},mt.a.prototype.mulStrict=function(t){return this.throwIfDisposed(),Object(ns.f)(this,t)},mt.a.prototype.mul=function(t){return this.throwIfDisposed(),Object(sr.a)(this,t)},mt.a.prototype.neg=function(){return this.throwIfDisposed(),Object(Ka.a)(this)};var _s=r(174);mt.a.prototype.norm=function(t,e,r){return this.throwIfDisposed(),Object(_s.a)(this,t,e,r)},mt.a.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Object(Os.f)(this,t)};var $s=r(125);mt.a.prototype.notEqual=function(t){return this.throwIfDisposed(),Object($s.a)(this,t)},mt.a.prototype.oneHot=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Object(de.a)(this,t,e,r)};var tc=r(345);mt.a.prototype.onesLike=function(){return this.throwIfDisposed(),Object(tc.a)(this)},mt.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Object(bv.a)(this,t,e)};var ec=r(228);mt.a.prototype.pool=function(t,e,r,n,a){return this.throwIfDisposed(),Object(ec.a)(this,t,e,r,n,a)},mt.a.prototype.powStrict=function(t){return this.throwIfDisposed(),Object(ns.g)(this,t)},mt.a.prototype.pow=function(t){return this.throwIfDisposed(),Object(Kr.a)(this,t)};var rc=r(169);mt.a.prototype.prelu=function(t){return this.throwIfDisposed(),Object(rc.a)(this,t)};var nc=r(229);mt.a.prototype.prod=function(t,e){return this.throwIfDisposed(),Object(nc.a)(this,t,e)};var ac=r(346);mt.a.prototype.reciprocal=function(){return this.throwIfDisposed(),Object(ac.a)(this)};var oc=r(102);mt.a.prototype.relu=function(){return this.throwIfDisposed(),Object(oc.a)(this)};var ic=r(170);mt.a.prototype.relu6=function(){return this.throwIfDisposed(),Object(ic.a)(this)},mt.a.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(Ha.a)(this,t.shape)},mt.a.prototype.reshape=function(t){return this.throwIfDisposed(),Object(Ha.a)(this,t)};var uc=r(245);mt.a.prototype.resizeBilinear=function(t,e,r){return this.throwIfDisposed(),Object(uc.a)(this,t,e,r)};var vc=r(244);mt.a.prototype.resizeNearestNeighbor=function(t,e,r){return this.throwIfDisposed(),Object(vc.a)(this,t,e,r)},mt.a.prototype.reverse=function(t){return this.throwIfDisposed(),Object(Ju.a)(this,t)};var sc=r(172);mt.a.prototype.rfft=function(){return this.throwIfDisposed(),Object(sc.a)(this)};var cc=r(347);mt.a.prototype.round=function(){return this.throwIfDisposed(),Object(cc.a)(this)},mt.a.prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Di.a)(this)};var Pc=r(232);mt.a.prototype.selu=function(){return this.throwIfDisposed(),Object(Pc.a)(this)};var lc=r(233);mt.a.prototype.separableConv2d=function(t,e,r,n,a,o){return this.throwIfDisposed(),Object(lc.a)(this,t,e,r,n,a,o)},mt.a.prototype.sigmoid=function(){return this.throwIfDisposed(),Object(jv.a)(this)};var fc=r(349);mt.a.prototype.sign=function(){return this.throwIfDisposed(),Object(fc.a)(this)},mt.a.prototype.sin=function(){return this.throwIfDisposed(),Object(Zo.a)(this)},mt.a.prototype.sinh=function(){return this.throwIfDisposed(),Object(_o.a)(this)},mt.a.prototype.slice=function(t,e){return this.throwIfDisposed(),Object(hu.a)(this,t,e)};var dc=r(350);mt.a.prototype.softmax=function(t){return this.throwIfDisposed(),Object(dc.a)(this,t)};var pc=r(225);mt.a.prototype.softplus=function(){return this.throwIfDisposed(),Object(pc.a)(this)},mt.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(wo.a)(this,t,e)},mt.a.prototype.split=function(t,e){return this.throwIfDisposed(),Object(Uo.a)(this,t,e)},mt.a.prototype.sqrt=function(){return this.throwIfDisposed(),Object(cr.a)(this)},mt.a.prototype.square=function(){return this.throwIfDisposed(),Object(Pr.a)(this)};var bc=r(127);mt.a.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(bc.a)(this,t)},mt.a.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Object(ns.h)(this,t)};var hc=r(128);function yc(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}mt.a.prototype.squeeze=function(t){return this.throwIfDisposed(),Object(hc.a)(this,t)},mt.a.prototype.stack=function(t,e){this.throwIfDisposed();var r=t instanceof mt.a?[this,t]:[this].concat(function(t){return function(t){if(Array.isArray(t))return yc(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return yc(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?yc(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(t));return Object(Vv.a)(r,e)},mt.a.prototype.step=function(t){return this.throwIfDisposed(),Object(Fa.a)(this,t)};var mc=r(351);mt.a.prototype.stridedSlice=function(t,e,r,n,a,o,i,u){return this.throwIfDisposed(),Object(mc.a)(this,t,e,r,n,a,o,i,u)},mt.a.prototype.subStrict=function(t){return this.throwIfDisposed(),Object(ns.i)(this,t)},mt.a.prototype.sub=function(t){return this.throwIfDisposed(),Object(Br.a)(this,t)},mt.a.prototype.sum=function(t,e){return this.throwIfDisposed(),Object(Ja.a)(this,t,e)};var gc=r(352);mt.a.prototype.tan=function(){return this.throwIfDisposed(),Object(gc.a)(this)};var Tc=r(188);mt.a.prototype.tanh=function(){return this.throwIfDisposed(),Object(Tc.a)(this)},mt.a.prototype.tile=function(t){return this.throwIfDisposed(),Object(xi.a)(this,t)},mt.a.prototype.toBool=function(){return this.throwIfDisposed(),Object(bt.a)(this,"bool")},mt.a.prototype.toFloat=function(){return this.throwIfDisposed(),Object(bt.a)(this,"float32")},mt.a.prototype.toInt=function(){return this.throwIfDisposed(),Object(bt.a)(this,"int32")};var jc=r(238);mt.a.prototype.topk=function(t,e){return this.throwIfDisposed(),Object(jc.a)(this,t,e)},mt.a.prototype.transpose=function(t){return this.throwIfDisposed(),Object(be.a)(this,t)};var zc=r(239);mt.a.prototype.unique=function(t){return this.throwIfDisposed(),Object(zc.a)(this,t)},mt.a.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(Si.a)(this,t,e)},mt.a.prototype.unstack=function(t){return this.throwIfDisposed(),Object(Ou.a)(this,t)},mt.a.prototype.where=function(t,e){return this.throwIfDisposed(),Object(Co.a)(t,this,e)},mt.a.prototype.zerosLike=function(){return this.throwIfDisposed(),Object(lr.a)(this)}},function(t,e,r){"use strict";r.d(e,"c",(function(){return v})),r.d(e,"a",(function(){return c})),r.d(e,"b",(function(){return P}));var n=r(5),a=r(24),o=r(6),i=r(7),u=r(10);function v(t,e){var r=t;if(Object(i.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];for(var n=[];Array.isArray(r)||Object(i.A)(r)&&"string"!==e;)n.push(r.length),r=r[0];return Array.isArray(t)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,r,n){if(n=n||[],Array.isArray(e)||Object(i.A)(e)){Object(i.b)(r.length>0,(function(){return"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements")})),Object(i.b)(e.length===r[0],(function(){return"Element arr[".concat(n.join("]["),"] should have ").concat(r[0]," ")+"elements, but has ".concat(e.length," elements")}));for(var a=r.slice(1),o=0;o<e.length;++o)t(e[o],a,n.concat(o))}else Object(i.b)(0===r.length,(function(){return"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(r[0]," elements")}))}(t,n,[]),n}function s(t,e,r,n){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(r,"' passed to '").concat(n,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function c(t,e,r){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof o.a)return s(a,t.dtype,e,r),t;var c=Object(i.r)(t);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),s(a,c,e,r),null==t||!Object(i.A)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){var P=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(r,"' must be a ")+"Tensor or TensorLike, but got '".concat(P,"'"))}var l=v(t,c);Object(i.A)(t)||Array.isArray(t)||(t=[t]);var f=!0,d="string"!==c?Object(u.toTypedArray)(t,c):Object(i.m)(t,[],f);return n.a.makeTensor(d,l,c)}function P(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(r," must be a ")+"`Tensor[]` or `TensorLike[]`");var a=t;return a.map((function(t,a){return c(t,"".concat(e,"[").concat(a,"]"),r,n)}))}},function(t,e,r){"use strict";r.d(e,"d",(function(){return i})),r.d(e,"e",(function(){return u})),r.d(e,"f",(function(){return v})),r.d(e,"b",(function(){return s})),r.d(e,"g",(function(){return P})),r.d(e,"c",(function(){return l})),r.d(e,"a",(function(){return f}));var n=r(0);function a(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return o(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t,e,r,a,o){var i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){var v=i.inputIndexStart,s=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?v+1:i.inputIndexEnd;if("tensor"===i.type)return u(e.inputNames[i.inputIndexStart],r,a,o);if("tensors"===i.type)return e.inputNames.slice(v,s).map((function(t){return u(t,r,a,o)}));var c=u(e.inputNames.slice(v)[0],r,a,o),P=c.dataSync();return"number"===i.type?P[0]:n.util.toNestedArray(c.shape,P)}var l=e.attrParams[t];return l&&l.value}function u(t,e,r,n){var o=a(P(t),2),i=o[0],u=o[1];if(null!=n){var v=n.getHashTableHandleByName(i);if(null!=v)return v}var s=r.currentContextIds.find((function(t){return!!e[c(i,t)]}));return void 0!==s?e[c(i,s)][u]:void 0}function v(t,e,r){return e[c(t,r.currentContextId)]}function s(t,e){var r=a(P(t),2),n=r[0],o=r[1];return[c(n,e&&e.currentContextId),o]}function c(t,e){return e?"".concat(t,"-").concat(e):t}function P(t){var e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function l(t,e,r){var n=i("pad",t,e,r);if("explicit"===n){n=i("explicitPaddings",t,e,r);for(var a=[[0,0],[0,0],[0,0],[0,0]],o=0;o<4;o++)a[o][0]=n[2*o],a[o][1]=n[2*o+1];return a}return n}function f(t){return t.kept?t:Object(n.clone)(t)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return n})),r.d(e,"b",(function(){return a})),r.d(e,"c",(function(){return o})),r.d(e,"d",(function(){return i})),r.d(e,"e",(function(){return u})),r.d(e,"f",(function(){return v})),r.d(e,"g",(function(){return s})),r.d(e,"h",(function(){return c})),r.d(e,"i",(function(){return P})),r.d(e,"j",(function(){return l})),r.d(e,"k",(function(){return f})),r.d(e,"l",(function(){return d})),r.d(e,"n",(function(){return p})),r.d(e,"m",(function(){return b})),r.d(e,"o",(function(){return h})),r.d(e,"r",(function(){return y})),r.d(e,"p",(function(){return m})),r.d(e,"q",(function(){return g})),r.d(e,"s",(function(){return T})),r.d(e,"t",(function(){return j})),r.d(e,"u",(function(){return z})),r.d(e,"v",(function(){return w})),r.d(e,"w",(function(){return D})),r.d(e,"x",(function(){return x})),r.d(e,"y",(function(){return O})),r.d(e,"z",(function(){return L})),r.d(e,"A",(function(){return S})),r.d(e,"B",(function(){return A})),r.d(e,"C",(function(){return k})),r.d(e,"D",(function(){return C})),r.d(e,"E",(function(){return I})),r.d(e,"F",(function(){return E})),r.d(e,"G",(function(){return M})),r.d(e,"H",(function(){return U})),r.d(e,"I",(function(){return R})),r.d(e,"J",(function(){return W})),r.d(e,"L",(function(){return Q})),r.d(e,"K",(function(){return Y})),r.d(e,"M",(function(){return G})),r.d(e,"N",(function(){return F})),r.d(e,"O",(function(){return N})),r.d(e,"P",(function(){return q})),r.d(e,"Q",(function(){return K})),r.d(e,"R",(function(){return B})),r.d(e,"S",(function(){return V})),r.d(e,"U",(function(){return X})),r.d(e,"T",(function(){return Z})),r.d(e,"kc",(function(){return H})),r.d(e,"V",(function(){return J})),r.d(e,"W",(function(){return _})),r.d(e,"Y",(function(){return $})),r.d(e,"X",(function(){return tt})),r.d(e,"Z",(function(){return et})),r.d(e,"ab",(function(){return rt})),r.d(e,"bb",(function(){return nt})),r.d(e,"cb",(function(){return at})),r.d(e,"db",(function(){return ot})),r.d(e,"eb",(function(){return it})),r.d(e,"fb",(function(){return ut})),r.d(e,"gb",(function(){return vt})),r.d(e,"ib",(function(){return st})),r.d(e,"mb",(function(){return ct})),r.d(e,"lb",(function(){return Pt})),r.d(e,"nb",(function(){return lt})),r.d(e,"ob",(function(){return ft})),r.d(e,"qb",(function(){return dt})),r.d(e,"pb",(function(){return pt})),r.d(e,"rb",(function(){return bt})),r.d(e,"sb",(function(){return ht})),r.d(e,"tb",(function(){return yt})),r.d(e,"ub",(function(){return mt})),r.d(e,"xb",(function(){return gt})),r.d(e,"yb",(function(){return Tt})),r.d(e,"zb",(function(){return jt})),r.d(e,"Ab",(function(){return zt})),r.d(e,"Bb",(function(){return wt})),r.d(e,"Cb",(function(){return Dt})),r.d(e,"Eb",(function(){return xt})),r.d(e,"Fb",(function(){return Ot})),r.d(e,"Gb",(function(){return Lt})),r.d(e,"Db",(function(){return St})),r.d(e,"vb",(function(){return At})),r.d(e,"wb",(function(){return kt})),r.d(e,"Hb",(function(){return Ct})),r.d(e,"Nb",(function(){return It})),r.d(e,"Ib",(function(){return Et})),r.d(e,"Lb",(function(){return Mt})),r.d(e,"Jb",(function(){return Ut})),r.d(e,"Kb",(function(){return Rt})),r.d(e,"Mb",(function(){return Wt})),r.d(e,"Ob",(function(){return Qt})),r.d(e,"Pb",(function(){return Yt})),r.d(e,"Qb",(function(){return Gt})),r.d(e,"Rb",(function(){return Ft})),r.d(e,"Sb",(function(){return Nt})),r.d(e,"Tb",(function(){return qt})),r.d(e,"Ub",(function(){return Kt})),r.d(e,"Vb",(function(){return Bt})),r.d(e,"Zb",(function(){return Vt})),r.d(e,"Wb",(function(){return Xt})),r.d(e,"Xb",(function(){return Zt})),r.d(e,"Yb",(function(){return Ht})),r.d(e,"bc",(function(){return Jt})),r.d(e,"ac",(function(){return _t})),r.d(e,"cc",(function(){return $t})),r.d(e,"dc",(function(){return te})),r.d(e,"ec",(function(){return ee})),r.d(e,"fc",(function(){return re})),r.d(e,"gc",(function(){return ne})),r.d(e,"hc",(function(){return ae})),r.d(e,"ic",(function(){return oe})),r.d(e,"jc",(function(){return ie})),r.d(e,"lc",(function(){return ue})),r.d(e,"mc",(function(){return ve})),r.d(e,"oc",(function(){return se})),r.d(e,"rc",(function(){return ce})),r.d(e,"sc",(function(){return Pe})),r.d(e,"pc",(function(){return le})),r.d(e,"qc",(function(){return fe})),r.d(e,"nc",(function(){return de})),r.d(e,"tc",(function(){return pe})),r.d(e,"vc",(function(){return be})),r.d(e,"wc",(function(){return he})),r.d(e,"xc",(function(){return ye})),r.d(e,"yc",(function(){return me})),r.d(e,"zc",(function(){return ge})),r.d(e,"Ec",(function(){return Te})),r.d(e,"Cc",(function(){return je})),r.d(e,"Dc",(function(){return ze})),r.d(e,"Bc",(function(){return we})),r.d(e,"Ac",(function(){return De})),r.d(e,"Gc",(function(){return xe})),r.d(e,"Kc",(function(){return Oe})),r.d(e,"Qc",(function(){return Le})),r.d(e,"Hc",(function(){return Se})),r.d(e,"Jc",(function(){return Ae})),r.d(e,"Fc",(function(){return ke})),r.d(e,"Mc",(function(){return Ce})),r.d(e,"Lc",(function(){return Ie})),r.d(e,"Pc",(function(){return Ee})),r.d(e,"Ic",(function(){return Me})),r.d(e,"Oc",(function(){return Ue})),r.d(e,"Rc",(function(){return Re})),r.d(e,"Sc",(function(){return We})),r.d(e,"Tc",(function(){return Qe})),r.d(e,"Uc",(function(){return Ye})),r.d(e,"Vc",(function(){return Ge})),r.d(e,"Wc",(function(){return Fe})),r.d(e,"Xc",(function(){return Ne})),r.d(e,"Yc",(function(){return qe})),r.d(e,"Zc",(function(){return Ke})),r.d(e,"Nc",(function(){return Be})),r.d(e,"hb",(function(){return Ve})),r.d(e,"uc",(function(){return Xe})),r.d(e,"ad",(function(){return Ze})),r.d(e,"jb",(function(){return He})),r.d(e,"kb",(function(){return Je}));var n="Abs",a="Acos",o="Acosh",i="Add",u="AddN",v="All",s="Any",c="ArgMax",P="ArgMin",l="Asin",f="Asinh",d="Atan",p="Atanh",b="Atan2",h="AvgPool",y="AvgPoolGrad",m="AvgPool3D",g="AvgPool3DGrad",T="BatchMatMul",j="BatchToSpaceND",z="Bincount",w="BroadcastTo",D="Cast",x="Ceil",O="ClipByValue",L="Complex",S="ComplexAbs",A="Concat",k="Conv2D",C="Conv2DBackpropFilter",I="Conv2DBackpropInput",E="Conv3D",M="Conv3DBackpropFilterV2",U="Conv3DBackpropInputV2",R="Cos",W="Cosh",Q="Cumsum",Y="CropAndResize",G="DenseBincount",F="DepthToSpace",N="DepthwiseConv2dNative",q="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",B="Diag",V="Dilation2D",X="Dilation2DBackpropInput",Z="Dilation2DBackpropFilter",H="RealDiv",J="Elu",_="EluGrad",$="Erf",tt="Equal",et="Exp",rt="ExpandDims",nt="Expm1",at="FFT",ot="Fill",it="FlipLeftRight",ut="Floor",vt="FloorDiv",st="FusedBatchNorm",ct="GatherV2",Pt="GatherNd",lt="Greater",ft="GreaterEqual",dt="Identity",pt="IFFT",bt="Imag",ht="IsFinite",yt="IsInf",mt="IsNan",gt="LeakyRelu",Tt="Less",jt="LessEqual",zt="LinSpace",wt="Log",Dt="Log1p",xt="LogicalAnd",Ot="LogicalNot",Lt="LogicalOr",St="LogSoftmax",At="LRN",kt="LRNGrad",Ct="Max",It="Maximum",Et="MaxPool",Mt="MaxPoolGrad",Ut="MaxPool3D",Rt="MaxPool3DGrad",Wt="MaxPoolWithArgmax",Qt="Mean",Yt="Min",Gt="Minimum",Ft="MirrorPad",Nt="Mod",qt="Multinomial",Kt="Multiply",Bt="Neg",Vt="NotEqual",Xt="NonMaxSuppressionV3",Zt="NonMaxSuppressionV4",Ht="NonMaxSuppressionV5",Jt="OnesLike",_t="OneHot",$t="Pack",te="PadV2",ee="Pool",re="Pow",ne="Prelu",ae="Prod",oe="Range",ie="Real",ue="Reciprocal",ve="Relu",se="Reshape",ce="ResizeNearestNeighbor",Pe="ResizeNearestNeighborGrad",le="ResizeBilinear",fe="ResizeBilinearGrad",de="Relu6",pe="Reverse",be="Round",he="Rsqrt",ye="ScatterNd",me="Select",ge="Selu",Te="Slice",je="Sin",ze="Sinh",we="Sign",De="Sigmoid",xe="Softplus",Oe="Sqrt",Le="Sum",Se="SpaceToBatchND",Ae="SplitV",ke="Softmax",Ce="SquaredDifference",Ie="Square",Ee="Sub",Me="SparseToDense",Ue="StridedSlice",Re="Tan",We="Tanh",Qe="Tile",Ye="TopK",Ge="Transpose",Fe="Unique",Ne="Unpack",qe="UnsortedSegmentSum",Ke="ZerosLike",Be="Step",Ve="FromPixels",Xe="RotateWithOffset",Ze="_FusedMatMul",He="FusedConv2D",Je="FusedDepthwiseConv2D"},function(t,e,r){"use strict";r.d(e,"a",(function(){return o})),r.d(e,"b",(function(){return i}));var n=r(5),a=r(7),o="__op";function i(t){var e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));var r=e[0],i=t[r];r.endsWith("_")&&(r=r.substring(0,r.length-1)),r+=o;var u=function(){n.a.startScope(r);try{var t=i.apply(void 0,arguments);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),n.a.endScope(t),t}catch(t){throw n.a.endScope(null),t}};return Object.defineProperty(u,"name",{value:r,configurable:!0}),u}},function(t,e,r){"use strict";r.d(e,"b",(function(){return k})),r.d(e,"a",(function(){return C}));var n=r(187),a=r(24),o=r(190),i=r(3),u=r(82),v=r(7);function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function c(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function P(t,e,r){return e&&c(t.prototype,e),r&&c(t,r),t}var l=function(){function t(e,r){s(this,t),this.backendTimer=e,this.logger=r,null==r&&(this.logger=new f)}return P(t,[{key:"profileKernel",value:function(t,e,r){var n,o=this.backendTimer.time((function(){n=r()}));if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(var i=function(e){var r=n[e];r.data().then((function(e){!function(t,e,r){if("float32"!==e)return!1;for(var n=0;n<t.length;n++){var a=t[n];if(isNaN(a)||!isFinite(a))return console.warn("Found ".concat(a," in the result of '").concat(r,"'")),!0}}(e,r.dtype,t)}))},u=0;u<n.length;u++)i(u);return{kernelName:t,outputs:n,inputs:e,timeMs:o.then((function(t){return t.kernelMs})),extraInfo:o.then((function(t){return null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""}))}}},{key:"logKernelProfile",value:function(t){var e=this,r=t.kernelName,n=t.outputs,a=t.timeMs,o=t.inputs,i=t.extraInfo;n.forEach((function(t){Promise.all([t.data(),a,i]).then((function(n){e.logger.logKernelProfile(r,t,n[0],n[1],o,n[2])}))}))}}]),t}(),f=function(){function t(){s(this,t)}return P(t,[{key:"logKernelProfile",value:function(t,e,r,n,a,o){var i="number"==typeof n?v.L("".concat(n,"ms"),9):n.error,u=v.L(t,25),s=e.rank,c=e.size,P=v.L(e.shape.toString(),14),l="";for(var f in a){var d=a[f];if(null!=d){var p=d.shape||e.shape,b=p.length;l+="".concat(f,": ").concat(b,"D ").concat(b>0?p:""," ")}}console.log("%c".concat(u,"\t%c").concat(i,"\t%c").concat(s,"D ").concat(P,"\t%c").concat(c,"\t%c").concat(l,"\t%c").concat(o),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}]),t}();function d(t,e,r){for(var n={},a={},o=0;o<e.length;o++)n[e[o].id]=!0;for(var i=0;i<t.length;i++){var u=t[i],v=u.inputs;for(var s in v){for(var c=v[s],P=!1,l=0;l<e.length;l++)if(n[c.id]){u.outputs.forEach((function(t){return n[t.id]=!0})),P=!0,a[u.id]=!0;break}if(P)break}}var f={};f[r.id]=!0;for(var d={},p=t.length-1;p>=0;p--)for(var b=t[p],h=b.inputs,y=0;y<b.outputs.length;y++)if(f[b.outputs[y].id]){for(var m in h)f[h[m].id]=!0,d[b.id]=!0;break}for(var g=[],T=0;T<t.length;T++){var j=t[T];if(a[j.id]&&d[j.id]){var z={};for(var w in j.inputs){var D=j.inputs[w];n[D.id]&&(z[w]=D)}var x=Object.assign({},j);x.inputs=z,x.outputs=j.outputs,g.push(x)}}return g}function p(t,e,r,n){for(var a=function(a){var o=e[a],i=[];if(o.outputs.forEach((function(e){var r=t[e.id];null!=r?i.push(r):i.push(null)})),null==o.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(o.kernelName,"."));var u=o.gradient(i),s=function(e){if(!(e in u))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(u),"."));var a=r((function(){return u[e]()}));if("float32"!==a.dtype)throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(a.dtype,"'"));var i=o.inputs[e];if(!v.a(a.shape,i.shape))throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(a.shape,"', which does not match ")+"the shape of the input '".concat(i.shape,"'"));if(null==t[i.id])t[i.id]=a;else{var s=t[i.id];t[i.id]=n(s,a),s.dispose()}};for(var c in o.inputs)s(c)},o=e.length-1;o>=0;o--)a(o)}var b=r(6),h=r(23),y=r(10);function m(t,e){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=T(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,a=function(){};return{s:a,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,u=!1;return{s:function(){r=t[Symbol.iterator]()},n:function(){var t=r.next();return i=t.done,t},e:function(t){u=!0,o=t},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw o}}}}function g(t){return function(t){if(Array.isArray(t))return j(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||T(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(t,e){if(t){if("string"==typeof t)return j(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?j(t,e):void 0}}function j(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function z(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function w(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){z(o,n,a,i,u,"next",t)}function u(t){z(o,n,a,i,u,"throw",t)}i(void 0)}))}}function D(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function x(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function O(t,e,r){return e&&x(t.prototype,e),r&&x(t,r),t}var L=function(){function t(){D(this,t),this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((function(t){return t.name}))))}}}return O(t,[{key:"dispose",value:function(){for(var t in this.registeredVariables)this.registeredVariables[t].dispose()}}]),t}(),S=function(){function t(e){D(this,t),this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new L}var e,r,a,o;return O(t,[{key:"ready",value:(o=w(regeneratorRuntime.mark((function t(){var e,r,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null==this.pendingBackendInit){t.next=2;break}return t.abrupt("return",this.pendingBackendInit.then((function(){})));case 2:if(null==this.backendInstance){t.next=4;break}return t.abrupt("return");case 4:e=this.getSortedBackends(),r=0;case 6:if(!(r<e.length)){t.next=18;break}return n=e[r],t.next=10,this.initializeBackend(n).success;case 10:if(!t.sent){t.next=15;break}return t.next=14,this.setBackend(n);case 14:return t.abrupt("return");case 15:r++,t.next=6;break;case 18:throw new Error("Could not initialize any backends, all backend initializations failed.");case 19:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"backend",get:function(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){var t=this.initializeBackendsAndReturnBest(),e=t.name;if(t.asyncInit)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}},{key:"backendNames",value:function(){return Object.keys(this.registryFactory)}},{key:"findBackend",value:function(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;if(this.initializeBackend(t).asyncInit)return null}return this.registry[t]}},{key:"findBackendFactory",value:function(t){return t in this.registryFactory?this.registryFactory[t].factory:null}},{key:"registerBackend",value:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(console.warn("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:r},!0)}},{key:"setBackend",value:(a=w(regeneratorRuntime.mark((function t(e){var r,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null!=this.registryFactory[e]){t.next=2;break}throw new Error("Backend name '".concat(e,"' not found in registry"));case 2:if(this.backendName=e,null!=this.registry[e]){t.next=16;break}if(this.backendInstance=null,r=this.initializeBackend(e),n=r.success,!r.asyncInit){t.next=12;break}return t.next=9,n;case 9:t.t0=t.sent,t.next=13;break;case 12:t.t0=n;case 13:if(t.t0){t.next=16;break}return t.abrupt("return",!1);case 16:return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),t.abrupt("return",!0);case 20:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"setupRegisteredKernels",value:function(){var t=this;Object(u.d)(this.backendName).forEach((function(e){null!=e.setupFunc&&e.setupFunc(t.backendInstance)}))}},{key:"disposeRegisteredKernels",value:function(t){var e=this;Object(u.d)(t).forEach((function(r){null!=r.disposeFunc&&r.disposeFunc(e.registry[t])}))}},{key:"initializeBackend",value:function(t){var e=this,r=this.registryFactory[t];if(null==r)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{var a=r.factory();if(!a||a instanceof n.b||"function"!=typeof a.then)return this.registry[t]=a,{success:!0,asyncInit:!1};var o=++this.pendingBackendInitId,i=a.then((function(r){return!(o<e.pendingBackendInitId||(e.registry[t]=r,e.pendingBackendInit=null,0))})).catch((function(r){return o<e.pendingBackendInitId||(e.pendingBackendInit=null,console.warn("Initialization of backend ".concat(t," failed")),console.warn(r.stack||r.message)),!1}));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}catch(e){return console.warn("Initialization of backend ".concat(t," failed")),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}},{key:"removeBackend",value:function(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}},{key:"getSortedBackends",value:function(){var t=this;if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((function(e,r){return t.registryFactory[r].priority-t.registryFactory[e].priority}))}},{key:"initializeBackendsAndReturnBest",value:function(){for(var t=this.getSortedBackends(),e=0;e<t.length;e++){var r=t[e],n=this.initializeBackend(r),a=n.success,o=n.asyncInit;if(o||a)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}},{key:"moveData",value:function(t,e){var r=this.state.tensorInfo.get(e),n=r.backend,a=this.readSync(e);n.disposeData(e),r.backend=t,t.move(e,a,r.shape,r.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}},{key:"tidy",value:function(t,e){var r,n=this,a=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun((function(){return n.startScope(a)}),(function(){return n.endScope(r)}),(function(){return(r=e())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r}))}},{key:"scopedRun",value:function(t,e,r){t();try{var n=r();return e(),n}catch(t){throw e(),t}}},{key:"nextTensorId",value:function(){return t.nextTensorId++}},{key:"nextVariableId",value:function(){return t.nextVariableId++}},{key:"clone",value:function(t){var e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),r={x:t};return this.addTapeNode(this.state.activeScope.name,r,[e],(function(t){return{x:function(){var e={x:t};return C.runKernelFunc((function(e){return e.cast(t,"float32")}),e,null,i.w,{dtype:"float32"})}}}),[],{}),e}},{key:"runKernel",value:function(t,e,r,n,a){return this.runKernelFunc(null,e,null,t,r,n,a)}},{key:"shouldCheckForMemLeaks",value:function(){return this.ENV.getBool("IS_TEST")}},{key:"checkKernelForMemLeak",value:function(t,e,r){var n=this.backend.numDataIds(),a=0;r.forEach((function(t){a+="complex64"===t.dtype?3:1}));var o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=n-e-a-o;if(i>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(i," data ids) after running '").concat(t,"'"))}},{key:"runKernelFunc",value:function(t,e,r,n,a,o,i){var v,s=this,c=[],P=this.isTapeOn();null==n&&(n=null!=this.state.activeScope?this.state.activeScope.name:"");var l,f=this.state.numBytes,d=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;var p,b,h=Object(u.c)(n,this.backendName);if(null!=h)l=function(){var t=s.backend.numDataIds();p=h.kernelFunc({inputs:e,attrs:a,backend:s.backend});var r=Array.isArray(p)?p:[p];s.shouldCheckForMemLeaks()&&s.checkKernelForMemLeak(n,t,r);var u=r.map((function(t){if(null!=t.rank)return t;var e=t.dataId,r=t.shape,n=t.dtype;return s.makeTensorFromDataId(e,r,n)}));if(P){var v=s.getTensorsForGradient(n,e,u);if(null==v){null==i&&(i=[]);var l=u.filter((function(t,e){return i[e]}));v=(o||[]).slice().concat(l)}c=s.saveTensorsForBackwardMode(v)}return u};else{if(null==t)throw new Error("Error running ".concat(n,": Neither modular kernel nor forward func passed"));var y=function(t){P&&(c=t.map((function(t){return s.keep(s.clone(t))})))};l=function(){var e=s.backend.numDataIds();p=s.tidy((function(){return t(s.backend,y)}));var r=Array.isArray(p)?p:[p];return s.shouldCheckForMemLeaks()&&s.checkKernelForMemLeak(n,e,r),r}}return this.scopedRun((function(){return s.state.kernelDepth++}),(function(){return s.state.kernelDepth--}),(function(){s.ENV.getBool("DEBUG")||s.state.profiling?(b=s.profiler.profileKernel(n,e,(function(){return l()})),s.ENV.getBool("DEBUG")&&s.profiler.logKernelProfile(b),v=b.outputs):v=l()})),P&&this.addTapeNode(n,e,v,r,c,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:n,bytesAdded:this.state.numBytes-f,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-d,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((function(t){return null!=e[t]?e[t].shape:null})),outputShapes:v.map((function(t){return t.shape})),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(p)?v:v[0]}},{key:"saveTensorsForBackwardMode",value:function(t){var e=this;return t.map((function(t){return e.keep(e.clone(t))}))}},{key:"getTensorsForGradient",value:function(t,e,r){var n=Object(u.b)(t);if(null!=n){var a,o=n.inputsToSave||[],i=n.outputsToSave||[];n.saveAllInputs?(v.b(Array.isArray(e),(function(){return"saveAllInputs is true, expected inputs to be an array."})),a=Object.keys(e).map((function(t){return e[t]}))):a=o.map((function(t){return e[t]}));var s=r.filter((function(t,e){return i[e]}));return a.concat(s)}return null}},{key:"makeTensor",value:function(t,e,r,n){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",n=n||this.backend;var a=t;"string"===r&&v.z(t[0])&&(a=t.map((function(t){return y.encodeString(t)})));var o=n.write(a,e,r),i=new b.a(e,r,o,this.nextTensorId());if(this.incRef(i,n),"string"===r){var u=this.state.tensorInfo.get(o),s=Object(v.f)(a);this.state.numBytes+=s-u.bytes,u.bytes=s}return i}},{key:"makeTensorFromDataId",value:function(t,e,r,n){r=r||"float32";var a=new b.a(e,r,t,this.nextTensorId());return this.incRef(a,n),a}},{key:"makeVariable",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0;r=r||this.nextVariableId().toString(),null!=n&&n!==t.dtype&&(t=t.cast(n));var a=new b.c(t,e,r,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name ".concat(a.name," was already registered"));return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}},{key:"incRef",value:function(t,e){var r=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===r){this.state.numDataBuffers++;var n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*v.g(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof b.c||this.track(t)}},{key:"disposeTensor",value:function(t){if(this.state.tensorInfo.has(t.dataId)){this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;var e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):(e.backend.decComplexRef(t.dataId),this.state.tensorInfo.get(t.dataId).refCount--)}}},{key:"disposeVariables",value:function(){for(var t in this.state.registeredVariables){var e=this.state.registeredVariables[t];this.disposeVariable(e)}}},{key:"disposeVariable",value:function(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}},{key:"memory",value:function(){var t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}},{key:"profile",value:(r=w(regeneratorRuntime.mark((function t(e){var r,n,a,o,i;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.state.profiling=!0,r=this.state.numBytes,n=this.state.numTensors,this.state.activeProfile.kernels=[],t.next=6,e();case 6:this.state.activeProfile.result=t.sent,this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,g(this.state.activeProfile.kernels.map((function(t){return t.totalBytesSnapshot})))),this.state.activeProfile.newBytes=this.state.numBytes-r,this.state.activeProfile.newTensors=this.state.numTensors-n,a=m(this.state.activeProfile.kernels),t.prev=12,a.s();case 14:if((o=a.n()).done){t.next=24;break}return i=o.value,t.next=18,i.kernelTimeMs;case 18:return i.kernelTimeMs=t.sent,t.next=21,i.extraInfo;case 21:i.extraInfo=t.sent;case 22:t.next=14;break;case 24:t.next=29;break;case 26:t.prev=26,t.t0=t.catch(12),a.e(t.t0);case 29:return t.prev=29,a.f(),t.finish(29);case 32:return t.abrupt("return",this.state.activeProfile);case 33:case"end":return t.stop()}}),t,this,[[12,26,29,32]])}))),function(t){return r.apply(this,arguments)})},{key:"isTapeOn",value:function(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}},{key:"addTapeNode",value:function(t,e,r,n,a,o){var i=this,s={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:r,saved:a},c=Object(u.b)(t);null!=c&&(n=c.gradFunc),null!=n&&(s.gradient=function(t){return t=t.map((function(t,e){if(null==t){var n=r[e],a=v.F(n.size,n.dtype);return i.makeTensor(a,n.shape,n.dtype)}return t})),n(t.length>1?t:t[0],a,o)}),this.state.activeTape.push(s)}},{key:"keep",value:function(t){return t.kept=!0,t}},{key:"startTape",value:function(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}},{key:"endTape",value:function(){this.state.gradientDepth--}},{key:"startScope",value:function(t){var e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}},{key:"endScope",value:function(t){for(var e=this,r=Object(h.getTensorsInContainer)(t),n=new Set(r.map((function(t){return t.id}))),a=0;a<this.state.activeScope.track.length;a++){var o=this.state.activeScope.track[a];o.kept||n.has(o.id)||o.dispose()}var i=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],r.forEach((function(t){t.kept||t.scopeId!==i.id||e.track(t)}))}},{key:"gradients",value:function(t,e,r){var n=this,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(v.b(e.length>0,(function(){return"gradients() received an empty list of xs."})),null!=r&&"float32"!==r.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(r.dtype,"'"));var o=this.scopedRun((function(){return n.startTape()}),(function(){return n.endTape()}),(function(){return n.tidy("forward",t)}));v.b(o instanceof b.a,(function(){return"The result y returned by f() must be a tensor."}));var i=d(this.state.activeTape,e,o);if(!a&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(function(){var t={};t[o.id]=null==r?A(o.shape):r,p(t,i,(function(t){return n.tidy(t)}),I);var a=e.map((function(e){return t[e.id]}));return 0===n.state.gradientDepth&&(n.state.activeTape.forEach((function(t){var e,r=m(t.saved);try{for(r.s();!(e=r.n()).done;)e.value.dispose()}catch(t){r.e(t)}finally{r.f()}})),n.state.activeTape=null),{value:o,grads:a}}))}},{key:"customGrad",value:function(t){var e=this;return v.b(v.u(t),(function(){return"The f passed in customGrad(f) must be a function."})),function(){for(var r=arguments.length,n=new Array(r),a=0;a<r;a++)n[a]=arguments[a];var o;v.b(n.every((function(t){return t instanceof b.a})),(function(){return"The args passed in customGrad(f)(x1, x2,...) must all be tensors"}));var i={};return n.forEach((function(t,e){i[e]=t})),e.runKernelFunc((function(e,r){return o=t.apply(void 0,[].concat(n,[r])),v.b(o.value instanceof b.a,(function(){return"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"})),v.b(v.u(o.gradFunc),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."})),o.value}),i,(function(t,e){var r=o.gradFunc(t,e),a=Array.isArray(r)?r:[r];v.b(a.length===n.length,(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."})),v.b(a.every((function(t){return t instanceof b.a})),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."}));var i={};return a.forEach((function(t,e){i[e]=function(){return t}})),i}))}}},{key:"readSync",value:function(t){return this.state.tensorInfo.get(t).backend.readSync(t)}},{key:"read",value:function(t){return this.state.tensorInfo.get(t).backend.read(t)}},{key:"time",value:(e=w(regeneratorRuntime.mark((function t(e){var r,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=Object(y.now)(),t.next=3,this.backend.time(e);case 3:return(n=t.sent).wallMs=Object(y.now)()-r,t.abrupt("return",n);case 6:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:"track",value:function(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}},{key:"registeredVariables",get:function(){return this.state.registeredVariables}},{key:"reset",value:function(){for(var t in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new L,this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}]),t}();function A(t){var e=Object(v.D)(Object(v.N)(t),"float32");return C.makeTensor(e,t,"float32")}function k(){var t=Object(o.b)();if(null==t._tfengine){var e=new a.b(t);t._tfengine=new S(e)}return Object(a.d)(t._tfengine.ENV),Object(b.f)((function(){return t._tfengine})),t._tfengine}S.nextTensorId=0,S.nextVariableId=0;var C=k();function I(t,e){var r={a:t,b:e};return C.runKernel(i.d,r)}},function(t,e,r){"use strict";r.d(e,"b",(function(){return g})),r.d(e,"f",(function(){return z})),r.d(e,"e",(function(){return w})),r.d(e,"d",(function(){return D})),r.d(e,"a",(function(){return x})),r.d(e,"c",(function(){return O}));var n=r(7);function a(t){return function(t){if(Array.isArray(t))return o(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return o(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t,e,r,o){var i=Object(n.j)(e),c=function(t,e,r,a){var o=Object(n.N)(e),i=a[a.length-1],v=new Array(i).fill(0),c=e.length,P="complex64"===r?s(t):t;if(c>1)for(var l=0;l<o/i;l++)for(var f=l*i,d=0;d<i;d++)v[d]=Math.max(v[d],u(P[f+d],0,r).length);return v}(t,e,r,i),P=e.length,l=function t(e,r,n,o,i){var c=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],P="complex64"===n?2:1,l=r[0],f=r.length;if(0===f){if("complex64"===n){var d=s(e);return[u(d[0],0,n)]}return"bool"===n?[v(e[0])]:[e[0].toString()]}if(1===f){if(l>20){var p=3*P,b=Array.from(e.slice(0,p)),h=Array.from(e.slice((l-3)*P,l*P));return"complex64"===n&&(b=s(b),h=s(h)),["["+b.map((function(t,e){return u(t,i[e],n)})).join(", ")+", ..., "+h.map((function(t,e){return u(t,i[l-3+e],n)})).join(", ")+"]"]}var y="complex64"===n?s(e):Array.from(e);return["["+y.map((function(t,e){return u(t,i[e],n)})).join(", ")+"]"]}var m=r.slice(1),g=o.slice(1),T=o[0]*P,j=[];if(l>20){for(var z=0;z<3;z++){var w=z*T,D=w+T;j.push.apply(j,a(t(e.slice(w,D),m,n,g,i,!1)))}j.push("...");for(var x=l-3;x<l;x++){var O=x*T,L=O+T;j.push.apply(j,a(t(e.slice(O,L),m,n,g,i,x===l-1)))}}else for(var S=0;S<l;S++){var A=S*T,k=A+T;j.push.apply(j,a(t(e.slice(A,k),m,n,g,i,S===l-1)))}var C=2===f?",":"";j[0]="["+j[0]+C;for(var I=1;I<j.length-1;I++)j[I]=" "+j[I]+C;for(var E=",\n",M=2;M<f;M++)E+="\n";return j[j.length-1]=" "+j[j.length-1]+"]"+(c?"":E),j}(t,e,r,i,c),f=["Tensor"];return o&&(f.push("  dtype: ".concat(r)),f.push("  rank: ".concat(P)),f.push("  shape: [".concat(e,"]")),f.push("  values:")),f.push(l.map((function(t){return"    "+t})).join("\n")),f.join("\n")}function u(t,e,r){var a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(7))," + ")+"".concat(parseFloat(t[1].toFixed(7)),"j"):Object(n.z)(t)?"'".concat(t,"'"):"bool"===r?v(t):parseFloat(t.toFixed(7)).toString(),Object(n.L)(a,e)}function v(t){return 0===t?"false":"true"}function s(t){for(var e=[],r=0;r<t.length;r+=2)e.push([t[r],t[r+1]]);return e}var c=r(10);function P(t){return(P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function f(t,e){return!e||"object"!==P(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function p(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function b(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){p(o,n,a,i,u,"next",t)}function u(t){p(o,n,a,i,u,"throw",t)}i(void 0)}))}}function h(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function y(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function m(t,e,r){return e&&y(t.prototype,e),r&&y(t,r),t}var g=function(){function t(e,r,a){var o=this;if(h(this,t),this.dtype=r,this.shape=e.slice(),this.size=n.N(e),null!=a){var i=a.length;n.b(i===this.size,(function(){return"Length of values '".concat(i,"' does not match the size ")+"inferred by the shape '".concat(o.size,"'.")}))}if("complex64"===r)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||n.n(r,this.size),this.strides=Object(n.j)(e)}return m(t,[{key:"set",value:function(t){for(var e=this,r=arguments.length,a=new Array(r>1?r-1:0),o=1;o<r;o++)a[o-1]=arguments[o];0===a.length&&(a=[0]),n.b(a.length===this.rank,(function(){return"The number of provided coordinates (".concat(a.length,") must ")+"match the rank (".concat(e.rank,")")}));var i=this.locToIndex(a);this.values[i]=t}},{key:"get",value:function(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];0===e.length&&(e=[0]);for(var n=0,a=0,o=e;a<o.length;a++){var i=o[a];if(i<0||i>=this.shape[n]){var u="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(u)}n++}for(var v=e[e.length-1],s=0;s<e.length-1;++s)v+=this.strides[s]*e[s];return this.values[v]}},{key:"locToIndex",value:function(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];for(var e=t[t.length-1],r=0;r<t.length-1;++r)e+=this.strides[r]*t[r];return e}},{key:"indexToLoc",value:function(t){if(0===this.rank)return[];if(1===this.rank)return[t];for(var e=new Array(this.shape.length),r=0;r<e.length-1;++r)e[r]=Math.floor(t/this.strides[r]),t-=e[r]*this.strides[r];return e[e.length-1]=t,e}},{key:"rank",get:function(){return this.shape.length}},{key:"toTensor",value:function(){return T().makeTensor(this.values,this.shape,this.dtype)}}]),t}(),T=null,j=null;function z(t){T=t}function w(t){j=t}function D(t){}var x=function(){function t(e,r,a,o){h(this,t),this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=r||"float32",this.size=n.N(e),this.strides=Object(n.j)(e),this.dataId=a,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}var e,r,a,o;return m(t,[{key:"rank",get:function(){return this.shape.length}},{key:"buffer",value:(o=b(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.data();case 2:return e=t.sent,t.abrupt("return",j.buffer(this.shape,this.dtype,e));case 4:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)})},{key:"bufferSync",value:function(){return j.buffer(this.shape,this.dtype,this.dataSync())}},{key:"array",value:(a=b(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.data();case 2:return e=t.sent,t.abrupt("return",Object(n.S)(this.shape,e));case 4:case"end":return t.stop()}}),t,this)}))),function(){return a.apply(this,arguments)})},{key:"arraySync",value:function(){return Object(n.S)(this.shape,this.dataSync())}},{key:"data",value:(r=b(regeneratorRuntime.mark((function t(){var e,r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.throwIfDisposed(),e=T().read(this.dataId),"string"!==this.dtype){t.next=13;break}return t.next=5,e;case 5:return r=t.sent,t.prev=6,t.abrupt("return",r.map((function(t){return c.decodeString(t)})));case 10:throw t.prev=10,t.t0=t.catch(6),new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().");case 13:return t.abrupt("return",e);case 14:case"end":return t.stop()}}),t,this,[[6,10]])}))),function(){return r.apply(this,arguments)})},{key:"dataSync",value:function(){this.throwIfDisposed();var t=T().readSync(this.dataId);if("string"===this.dtype)try{return t.map((function(t){return c.decodeString(t)}))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}},{key:"bytes",value:(e=b(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.throwIfDisposed(),t.next=3,T().read(this.dataId);case 3:if(e=t.sent,"string"!==this.dtype){t.next=8;break}return t.abrupt("return",e);case 8:return t.abrupt("return",new Uint8Array(e.buffer));case 9:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"dispose",value:function(){this.isDisposed||(T().disposeTensor(this),this.isDisposedInternal=!0)}},{key:"isDisposed",get:function(){return this.isDisposedInternal}},{key:"throwIfDisposed",value:function(){if(this.isDisposed)throw new Error("Tensor is disposed.")}},{key:"print",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return j.print(this,t)}},{key:"clone",value:function(){return this.throwIfDisposed(),j.clone(this)}},{key:"toString",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=this.dataSync();return i(e,this.shape,this.dtype,t)}},{key:"cast",value:function(t){return this.throwIfDisposed(),j.cast(this,t)}},{key:"variable",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,r=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),T().makeVariable(this,t,e,r)}}]),t}();Object.defineProperty(x,Symbol.hasInstance,{value:function(t){return!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}});var O=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(r,t);var e=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=d(t);if(e){var a=d(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return f(this,r)}}(r);function r(t,n,a,o){var i;return h(this,r),(i=e.call(this,t.shape,t.dtype,t.dataId,o)).trainable=n,i.name=a,i}return m(r,[{key:"assign",value:function(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!n.a(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));T().disposeTensor(this),this.dataId=t.dataId,T().incRef(this,null)}},{key:"dispose",value:function(){T().disposeVariable(this),this.isDisposedInternal=!0}}]),r}(x);Object.defineProperty(O,Symbol.hasInstance,{value:function(t){return t instanceof x&&null!=t.assign&&t.assign instanceof Function}})},function(t,e,r){"use strict";function n(t){for(var e=t.length,r=0,n=0;e>0;)n=Math.random()*e|0,r=t[--e],t[e]=t[n],t[n]=r}function a(t,e,r){return Math.max(t,Math.min(e,r))}function o(t){return t%2==0?t:t+1}function i(t){for(var e=0,r=0;r<t.length;r++)e+=t[r];return e}function u(t,e){var r=Math.random();return e*r+(1-r)*t}function v(t,e){for(var r=0,n=0;n<t.length;n++){var a=Number(t[n])-Number(e[n]);r+=a*a}return r}function s(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function c(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";s(p(t,e),(function(){return r+" Shapes ".concat(t," and ").concat(e," must match")}))}function P(t){s(null!=t,(function(){return"The input to the tensor constructor must be a non-null value."}))}function l(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),Array.isArray(t)||A(t)&&!r)for(var n=0;n<t.length;++n)l(t[n],e,r);else e.push(t);return e}function f(t){if(0===t.length)return 1;for(var e=t[0],r=1;r<t.length;r++)e*=t[r];return e}function d(t){return 0===t.length}function p(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(var r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}function b(t){return t%1==0}function h(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;var e=Math.exp(2*t);return(e-1)/(e+1)}function y(t){var e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function m(t){for(var e=new Uint32Array(t),r=0;r<t;++r)e[r]=r;return n(e),e}function g(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function T(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(t){return 0},r=arguments.length>2?arguments[2]:void 0;return new Promise((function(n,a){var o=0;!function i(){if(t())n();else{o++;var u=e(o);null!=r&&o>=r?a():setTimeout(i,u)}}()}))}function j(t,e){for(var r=1,n=-1,a=0;a<t.length;++a)if(t[a]>=0)r*=t[a];else if(-1===t[a]){if(-1!==n)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(n," and dim ").concat(a));n=a}else if(t[a]<0)throw Error("Shapes can not be < 0. Found ".concat(t[a]," at dim ").concat(a));if(-1===n){if(e>0&&e!==r)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===r)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%r!=0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(r));var o=t.slice();return o[n]=e/r,o}function z(t,e){var r=e.length;return s((t=null==t?e.map((function(t,e){return e})):[].concat(t)).every((function(t){return t>=-r&&t<r})),(function(){return"All values in axis param must be in range [-".concat(r,", ").concat(r,") but ")+"got axis ".concat(t)})),s(t.every((function(t){return b(t)})),(function(){return"All values in axis param must be integers but "+"got axis ".concat(t)})),t.map((function(t){return t<0?r+t:t}))}function w(t,e){for(var r=[],n=[],a=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||a?null:z(e,t).sort(),i=0,u=0;u<t.length;++u){if(null!=o){if(o[i]===u&&1!==t[u])throw new Error("Can't squeeze axis ".concat(u," since its dim '").concat(t[u],"' is not 1"));(null==o[i]||o[i]>u)&&1===t[u]&&(r.push(t[u]),n.push(u)),o[i]<=u&&i++}1!==t[u]&&(r.push(t[u]),n.push(u))}return{newShape:r,keptDims:n}}function D(t,e){var r=null;if(null==t||"float32"===t)r=new Float32Array(e);else if("int32"===t)r=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type ".concat(t));r=new Uint8Array(e)}return r}function x(t,e){var r=null;if(null==t||"float32"===t)r=new Float32Array(e);else if("int32"===t)r=new Int32Array(e);else if("bool"===t)r=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));r=new Array(e)}return r}function O(t,e){for(var r=0;r<t.length;r++){var n=t[r];if(isNaN(n)||!isFinite(n))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(n,"."))}}function L(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function S(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function A(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function k(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function C(t){if(null==t)return 0;var e=0;return t.forEach((function(t){return e+=t.length})),e}function I(t){return"string"==typeof t||t instanceof String}function E(t){return"boolean"==typeof t}function M(t){return"number"==typeof t}function U(t){return Array.isArray(t)?U(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":M(t)?"float32":I(t)?"string":E(t)?"bool":"float32"}function R(t){return!!(t&&t.constructor&&t.call&&t.apply)}function W(t,e){for(var r=e;r<t;++r)if(t%r==0)return r;return t}function Q(t){var e=t.length;if(e<2)return[];var r=new Array(e-1);r[e-2]=t[e-1];for(var n=e-3;n>=0;--n)r[n]=r[n+1]*t[n+1];return r}function Y(t,e){if(0===t.length)return e[0];var r=t.reduce((function(t,e){return t*e}));if(0===r)return[];if(r!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length,"."));return function t(e,r,n){var a=new Array;if(1===r.length)for(var o=r[0],i=0;i<o;i++)a[i]=n[e+i];else for(var u=r[0],v=r.slice(1),s=v.reduce((function(t,e){return t*e})),c=0;c<u;c++)a[c]=t(e+c*s,v,n);return a}(0,t,e)}function G(t,e){for(var r=F(t,e),n=0;n<r.length;n++)r[n]=1;return r}function F(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function N(t,e){var r=t.reduce((function(t,e){return t*e}),1);if(null==e||"float32"===e)return Y(t,new Float32Array(r));if("int32"===e)return Y(t,new Int32Array(r));if("bool"===e)return Y(t,new Uint8Array(r));throw new Error("Unknown data type ".concat(e))}function q(t){t.forEach((function(e){s(Number.isInteger(e)&&e>=0,(function(){return"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"].")}))}))}function K(t,e,r){if(0===e)return 0;if(1===e)return t[0];for(var n=t[t.length-1],a=0;a<t.length-1;++a)n+=r[a]*t[a];return n}function B(t,e,r){if(0===e)return[];if(1===e)return[t];for(var n=new Array(e),a=0;a<n.length-1;++a)n[a]=Math.floor(t/r[a]),t-=n[a]*r[a];return n[n.length-1]=t,n}function V(t){return t&&t.then&&"function"==typeof t.then}r.d(e,"M",(function(){return n})),r.d(e,"i",(function(){return a})),r.d(e,"H",(function(){return o})),r.d(e,"Q",(function(){return i})),r.d(e,"J",(function(){return u})),r.d(e,"l",(function(){return v})),r.d(e,"b",(function(){return s})),r.d(e,"e",(function(){return c})),r.d(e,"d",(function(){return P})),r.d(e,"m",(function(){return l})),r.d(e,"N",(function(){return f})),r.d(e,"y",(function(){return d})),r.d(e,"a",(function(){return p})),r.d(e,"v",(function(){return b})),r.d(e,"R",(function(){return h})),r.d(e,"O",(function(){return y})),r.d(e,"k",(function(){return m})),r.d(e,"L",(function(){return g})),r.d(e,"K",(function(){return T})),r.d(e,"s",(function(){return j})),r.d(e,"I",(function(){return z})),r.d(e,"P",(function(){return w})),r.d(e,"o",(function(){return D})),r.d(e,"n",(function(){return x})),r.d(e,"h",(function(){return O})),r.d(e,"B",(function(){return L})),r.d(e,"p",(function(){return S})),r.d(e,"A",(function(){return A})),r.d(e,"g",(function(){return k})),r.d(e,"f",(function(){return C})),r.d(e,"z",(function(){return I})),r.d(e,"t",(function(){return E})),r.d(e,"w",(function(){return M})),r.d(e,"r",(function(){return U})),r.d(e,"u",(function(){return R})),r.d(e,"G",(function(){return W})),r.d(e,"j",(function(){return Q})),r.d(e,"S",(function(){return Y})),r.d(e,"D",(function(){return G})),r.d(e,"F",(function(){return F})),r.d(e,"E",(function(){return N})),r.d(e,"c",(function(){return q})),r.d(e,"C",(function(){return K})),r.d(e,"q",(function(){return B})),r.d(e,"x",(function(){return V}))},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({reshape_:function(t,e){var r={x:Object(o.a)(t,"x","reshape","string_or_numeric")},i={shape:e};return n.a.runKernel(a.oc,r,i)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({mul_:function(t,e){var r=Object(i.a)(t,"a","mul"),u=Object(i.a)(e,"b","mul"),s=v(Object(o.makeTypesMatch)(r,u),2),c={a:r=s[0],b:u=s[1]};return n.a.runKernel(a.Ub,c)}})},function(t,e,r){"use strict";r.r(e),r.d(e,"createScalarValue",(function(){return o})),r.d(e,"toTypedArray",(function(){return i})),r.d(e,"now",(function(){return u})),r.d(e,"fetch",(function(){return v})),r.d(e,"encodeString",(function(){return s})),r.d(e,"decodeString",(function(){return c}));var n=r(24),a=r(7);function o(t,e){return"string"===e?s(t):i([t],e)}function i(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(n.c)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){for(var r=new Uint8Array(t.length),o=0;o<r.length;++o)0!==Math.round(t[o])&&(r[o]=1);return r}throw new Error("Unknown data type ".concat(e))}function u(){return Object(n.c)().platform.now()}function v(t,e){return Object(n.c)().platform.fetch(t,e)}function s(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",Object(n.c)().platform.encode(t,e)}function c(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",Object(n.c)().platform.decode(t,e)}r.d(e,"shuffle",(function(){return a.M})),r.d(e,"clamp",(function(){return a.i})),r.d(e,"nearestLargerEven",(function(){return a.H})),r.d(e,"sum",(function(){return a.Q})),r.d(e,"randUniform",(function(){return a.J})),r.d(e,"distSquared",(function(){return a.l})),r.d(e,"assert",(function(){return a.b})),r.d(e,"assertShapesMatch",(function(){return a.e})),r.d(e,"assertNonNull",(function(){return a.d})),r.d(e,"flatten",(function(){return a.m})),r.d(e,"sizeFromShape",(function(){return a.N})),r.d(e,"isScalarShape",(function(){return a.y})),r.d(e,"arraysEqual",(function(){return a.a})),r.d(e,"isInt",(function(){return a.v})),r.d(e,"tanh",(function(){return a.R})),r.d(e,"sizeToSquarishShape",(function(){return a.O})),r.d(e,"createShuffledIndices",(function(){return a.k})),r.d(e,"rightPad",(function(){return a.L})),r.d(e,"repeatedTry",(function(){return a.K})),r.d(e,"inferFromImplicitShape",(function(){return a.s})),r.d(e,"parseAxisParam",(function(){return a.I})),r.d(e,"squeezeShape",(function(){return a.P})),r.d(e,"getTypedArrayFromDType",(function(){return a.o})),r.d(e,"getArrayFromDType",(function(){return a.n})),r.d(e,"checkConversionForErrors",(function(){return a.h})),r.d(e,"isValidDtype",(function(){return a.B})),r.d(e,"hasEncodingLoss",(function(){return a.p})),r.d(e,"isTypedArray",(function(){return a.A})),r.d(e,"bytesPerElement",(function(){return a.g})),r.d(e,"bytesFromStringArray",(function(){return a.f})),r.d(e,"isString",(function(){return a.z})),r.d(e,"isBoolean",(function(){return a.t})),r.d(e,"isNumber",(function(){return a.w})),r.d(e,"inferDtype",(function(){return a.r})),r.d(e,"isFunction",(function(){return a.u})),r.d(e,"nearestDivisor",(function(){return a.G})),r.d(e,"computeStrides",(function(){return a.j})),r.d(e,"toNestedArray",(function(){return a.S})),r.d(e,"makeOnesTypedArray",(function(){return a.D})),r.d(e,"makeZerosTypedArray",(function(){return a.F})),r.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),r.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),r.d(e,"locToIndex",(function(){return a.C})),r.d(e,"indexToLoc",(function(){return a.q})),r.d(e,"isPromise",(function(){return a.x}))},function(t,e,r){var n=r(31),a=r(84),o=r(65),i=r(66),u=r(85),v=function t(e,r,v){var s,c,P,l,f=e&t.F,d=e&t.G,p=e&t.P,b=e&t.B,h=d?n:e&t.S?n[r]||(n[r]={}):(n[r]||{}).prototype,y=d?a:a[r]||(a[r]={}),m=y.prototype||(y.prototype={});for(s in d&&(v=r),v)P=((c=!f&&h&&void 0!==h[s])?h:v)[s],l=b&&c?u(P,n):p&&"function"==typeof P?u(Function.call,P):P,h&&i(h,s,P,e&t.U),y[s]!=P&&o(y,s,l),p&&m[s]!=P&&(m[s]=P)};n.core=a,v.F=1,v.G=2,v.S=4,v.P=8,v.B=16,v.W=32,v.U=64,v.R=128,t.exports=v},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({cast_:function(t,e){var r=Object(o.a)(t,"x","cast");if(!i.B(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==r.dtype||"string"!==e&&"string"===r.dtype)throw new Error("Only strings can be casted to strings");var u={x:r},v={dtype:e};return n.a.runKernel(a.w,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({add_:function(t,e){var r=Object(i.a)(t,"a","add"),u=Object(i.a)(e,"b","add"),s=v(Object(o.makeTypesMatch)(r,u),2),c={a:r=s[0],b:u=s[1]};return n.a.runKernel(a.d,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({sub_:function(t,e){var r=Object(i.a)(t,"a","sub"),u=Object(i.a)(e,"b","sub"),s=v(Object(o.makeTypesMatch)(r,u),2),c={a:r=s[0],b:u=s[1]};return n.a.runKernel(a.Pc,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(156),v=r(4);function s(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(v.b)({div_:function(t,e){var r=Object(i.a)(t,"a","div"),v=Object(i.a)(e,"b","div"),c=s(Object(o.makeTypesMatch)(r,v),2);if(r=c[0],v=c[1],"int32"===r.dtype&&"int32"===v.dtype)return Object(u.a)(r,v);var P={a:r,b:v};return n.a.runKernel(a.kc,P,{})}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var n=r(7),a=r(56);function o(t,e){if((Object(n.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(n.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},function(t,e,r){"use strict";function n(t,e){for(var r=t.length,n=[],a=0;a<r;a++){var o=r-1-a,i=t[o]||1;(e[e.length-1-a]||1)>1&&1===i&&n.unshift(o)}return n}function a(t,e){for(var r=[],n=0;n<e.length;n++){var a=t[t.length-n-1],o=e.length-n-1,i=e[o];(null==a||1===a&&i>1)&&r.unshift(o)}return r}function o(t,e){for(var r=[],n=Math.max(t.length,e.length),a=0;a<n;a++){var o=t[t.length-a-1];null==o&&(o=1);var i=e[e.length-a-1];if(null==i&&(i=1),1===o)r.unshift(i);else if(1===i)r.unshift(o);else{if(o!==i){var u="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(u)}r.unshift(o)}}return r}r.d(e,"b",(function(){return n})),r.d(e,"c",(function(){return a})),r.d(e,"a",(function(){return o}))},function(t,e,r){"use strict";r.d(e,"b",(function(){return a.a})),r.d(e,"c",(function(){return o.a})),r.d(e,"d",(function(){return i.a})),r.d(e,"e",(function(){return u.a})),r.d(e,"f",(function(){return v.a})),r.d(e,"h",(function(){return s.a})),r.d(e,"i",(function(){return c.a})),r.d(e,"j",(function(){return P.a})),r.d(e,"k",(function(){return l.a})),r.d(e,"l",(function(){return f.a})),r.d(e,"m",(function(){return d.a})),r.d(e,"n",(function(){return p.a})),r.d(e,"o",(function(){return b.a})),r.d(e,"p",(function(){return h.a})),r.d(e,"q",(function(){return y.a})),r.d(e,"r",(function(){return m.a})),r.d(e,"s",(function(){return L})),r.d(e,"x",(function(){return S.a})),r.d(e,"t",(function(){return A.a})),r.d(e,"u",(function(){return C})),r.d(e,"v",(function(){return I})),r.d(e,"w",(function(){return E})),r.d(e,"y",(function(){return M.a})),r.d(e,"A",(function(){return U.a})),r.d(e,"B",(function(){return R.a})),r.d(e,"C",(function(){return W.a})),r.d(e,"D",(function(){return Q.a})),r.d(e,"E",(function(){return Y.a})),r.d(e,"F",(function(){return G.a})),r.d(e,"G",(function(){return F.a})),r.d(e,"H",(function(){return T.a})),r.d(e,"I",(function(){return N})),r.d(e,"J",(function(){return q})),r.d(e,"K",(function(){return K})),r.d(e,"L",(function(){return B})),r.d(e,"M",(function(){return V.a})),r.d(e,"N",(function(){return X.a})),r.d(e,"O",(function(){return Z.a})),r.d(e,"P",(function(){return H.a})),r.d(e,"Q",(function(){return _})),r.d(e,"R",(function(){return $.a})),r.d(e,"S",(function(){return tt.a})),r.d(e,"U",(function(){return et.a})),r.d(e,"V",(function(){return rt.a})),r.d(e,"W",(function(){return nt.a})),r.d(e,"X",(function(){return at.a})),r.d(e,"Y",(function(){return ut})),r.d(e,"Z",(function(){return vt.a})),r.d(e,"ab",(function(){return st.a})),r.d(e,"bb",(function(){return ct.a})),r.d(e,"db",(function(){return Pt.a})),r.d(e,"fb",(function(){return lt.a})),r.d(e,"hb",(function(){return ft.a})),r.d(e,"jb",(function(){return dt.a})),r.d(e,"kb",(function(){return pt.a})),r.d(e,"lb",(function(){return bt.a})),r.d(e,"mb",(function(){return ht.a})),r.d(e,"nb",(function(){return gt})),r.d(e,"pb",(function(){return Tt.a})),r.d(e,"qb",(function(){return jt.a})),r.d(e,"rb",(function(){return zt.a})),r.d(e,"tb",(function(){return wt.a})),r.d(e,"vb",(function(){return Dt.a})),r.d(e,"wb",(function(){return xt.a})),r.d(e,"Ab",(function(){return Ot.a})),r.d(e,"Eb",(function(){return Lt.a})),r.d(e,"Fb",(function(){return St.a})),r.d(e,"Gb",(function(){return At.a})),r.d(e,"Hb",(function(){return kt.a})),r.d(e,"Ib",(function(){return Ct.a})),r.d(e,"Jb",(function(){return It.a})),r.d(e,"Nb",(function(){return Et.a})),r.d(e,"Ob",(function(){return Mt.a})),r.d(e,"Pb",(function(){return Ut.a})),r.d(e,"Qb",(function(){return Rt.a})),r.d(e,"Rb",(function(){return Wt.a})),r.d(e,"Sb",(function(){return Qt.a})),r.d(e,"Tb",(function(){return Yt.a})),r.d(e,"Ub",(function(){return Gt.a})),r.d(e,"Vb",(function(){return Ft.a})),r.d(e,"Wb",(function(){return Nt.a})),r.d(e,"Xb",(function(){return qt.a})),r.d(e,"Zb",(function(){return j.a})),r.d(e,"ac",(function(){return Kt.a})),r.d(e,"bc",(function(){return Bt.a})),r.d(e,"cc",(function(){return Vt.a})),r.d(e,"dc",(function(){return Xt.a})),r.d(e,"ec",(function(){return Zt.a})),r.d(e,"gc",(function(){return Ht.a})),r.d(e,"hc",(function(){return Jt.a})),r.d(e,"ic",(function(){return _t.a})),r.d(e,"kc",(function(){return $t.a})),r.d(e,"lc",(function(){return te.a})),r.d(e,"nc",(function(){return ae})),r.d(e,"pc",(function(){return z.a})),r.d(e,"rc",(function(){return oe})),r.d(e,"sc",(function(){return ie.a})),r.d(e,"tc",(function(){return ue.a})),r.d(e,"vc",(function(){return ve.a})),r.d(e,"xc",(function(){return se.a})),r.d(e,"yc",(function(){return ce.a})),r.d(e,"zc",(function(){return Pe.a})),r.d(e,"Bc",(function(){return le})),r.d(e,"Cc",(function(){return fe.a})),r.d(e,"Dc",(function(){return de})),r.d(e,"Ec",(function(){return pe})),r.d(e,"Fc",(function(){return be})),r.d(e,"Gc",(function(){return he})),r.d(e,"Hc",(function(){return ye.a})),r.d(e,"Ic",(function(){return me.a})),r.d(e,"Kc",(function(){return ge.a})),r.d(e,"Lc",(function(){return Te.a})),r.d(e,"Mc",(function(){return je.a})),r.d(e,"Nc",(function(){return ze})),r.d(e,"Oc",(function(){return De})),r.d(e,"Pc",(function(){return xe})),r.d(e,"Qc",(function(){return Oe.a})),r.d(e,"Rc",(function(){return Le.a})),r.d(e,"Sc",(function(){return Se.a})),r.d(e,"Tc",(function(){return Ae.a})),r.d(e,"Uc",(function(){return ke.a})),r.d(e,"Vc",(function(){return Ce.a})),r.d(e,"Wc",(function(){return yt.a})),r.d(e,"Xc",(function(){return Ie.a})),r.d(e,"Yc",(function(){return Ee})),r.d(e,"Zc",(function(){return Me})),r.d(e,"ad",(function(){return Ue})),r.d(e,"bd",(function(){return Re})),r.d(e,"dd",(function(){return We.a})),r.d(e,"ed",(function(){return Qe.a})),r.d(e,"fd",(function(){return Ye.a})),r.d(e,"hd",(function(){return Ge.a})),r.d(e,"id",(function(){return Fe.a})),r.d(e,"jd",(function(){return Ne.a})),r.d(e,"kd",(function(){return D.a})),r.d(e,"ld",(function(){return qe.a})),r.d(e,"nd",(function(){return Ke.a})),r.d(e,"od",(function(){return Be.a})),r.d(e,"pd",(function(){return x.a})),r.d(e,"qd",(function(){return Ve})),r.d(e,"rd",(function(){return Xe})),r.d(e,"sd",(function(){return Ze})),r.d(e,"td",(function(){return He})),r.d(e,"ud",(function(){return Je.a})),r.d(e,"vd",(function(){return _e.a})),r.d(e,"wd",(function(){return $e.a})),r.d(e,"ob",(function(){return tr.a})),r.d(e,"zb",(function(){return er.a})),r.d(e,"Db",(function(){return rr.a})),r.d(e,"cd",(function(){return nr.a})),r.d(e,"zd",(function(){return ar.a})),r.d(e,"Ad",(function(){return or.a})),r.d(e,"Bd",(function(){return re.a})),r.d(e,"Cd",(function(){return ir.a})),r.d(e,"Ed",(function(){return ur.a})),r.d(e,"Fd",(function(){return vr.a})),r.d(e,"Gd",(function(){return sr.a})),r.d(e,"Hd",(function(){return cr.a})),r.d(e,"Id",(function(){return ne.a})),r.d(e,"Kd",(function(){return Pr.a})),r.d(e,"Ld",(function(){return lr.a})),r.d(e,"Md",(function(){return O.a})),r.d(e,"Nd",(function(){return fr.a})),r.d(e,"Od",(function(){return dr.a})),r.d(e,"Pd",(function(){return br})),r.d(e,"Qd",(function(){return hr.a})),r.d(e,"Rd",(function(){return yr})),r.d(e,"Sd",(function(){return mr})),r.d(e,"Td",(function(){return gr})),r.d(e,"Ud",(function(){return mt.a})),r.d(e,"Vd",(function(){return Tr.a})),r.d(e,"Xd",(function(){return jr.a})),r.d(e,"Yd",(function(){return zr.a})),r.d(e,"Zd",(function(){return wr.a})),r.d(e,"ae",(function(){return Dr.a})),r.d(e,"be",(function(){return xr})),r.d(e,"ce",(function(){return Or.a})),r.d(e,"de",(function(){return Lr.a})),r.d(e,"ee",(function(){return Sr.a})),r.d(e,"fe",(function(){return Ar.a})),r.d(e,"z",(function(){return Er})),r.d(e,"ib",(function(){return Mr.a})),r.d(e,"xb",(function(){return Mr.b})),r.d(e,"yb",(function(){return Mr.c})),r.d(e,"Kb",(function(){return Mr.d})),r.d(e,"Lb",(function(){return Mr.e})),r.d(e,"wc",(function(){return Mr.f})),r.d(e,"g",(function(){return Ur.a})),r.d(e,"cb",(function(){return Ur.b})),r.d(e,"fc",(function(){return Ur.c})),r.d(e,"jc",(function(){return Ur.d})),r.d(e,"mc",(function(){return Ur.e})),r.d(e,"qc",(function(){return Ur.f})),r.d(e,"Jc",(function(){return Ur.g})),r.d(e,"Dd",(function(){return Ur.h})),r.d(e,"Jd",(function(){return Ur.i})),r.d(e,"Wd",(function(){return Rr.a})),r.d(e,"uc",(function(){return Wr.a})),r.d(e,"oc",(function(){return Yr})),r.d(e,"gd",(function(){return Gr.a})),r.d(e,"xd",(function(){return Fr.a})),r.d(e,"ub",(function(){return Nr.a})),r.d(e,"eb",(function(){return Kr})),r.d(e,"gb",(function(){return Br})),r.d(e,"T",(function(){return Vr})),r.d(e,"Cb",(function(){return Jr})),r.d(e,"Ac",(function(){return w.b})),r.d(e,"a",(function(){return w.a})),r.d(e,"Bb",(function(){return Pa})),r.d(e,"Mb",(function(){return la})),r.d(e,"Yb",(function(){return fa})),r.d(e,"yd",(function(){return sa})),r.d(e,"sb",(function(){return n})),r.d(e,"md",(function(){return ca}));var n={};r.r(n),r.d(n,"conv2d",(function(){return un})),r.d(n,"depthwiseConv2d",(function(){return ln})),r.d(n,"matMul",(function(){return pn}));var a=r(50),o=r(321),i=r(322),u=r(13),v=r(323),s=r(211),c=r(212),P=r(213),l=r(214),f=r(324),d=r(325),p=r(326),b=r(215),h=r(327),y=r(158),m=r(328),g=r(1),T=r(34),j=r(27),z=r(9),w=r(4),D=r(106),x=r(26),O=r(188),L=Object(w.b)({basicLSTMCell_:function(t,e,r,n,a,o){var i=Object(g.a)(t,"forgetBias","basicLSTMCell"),v=Object(g.a)(e,"lstmKernel","basicLSTMCell"),s=Object(g.a)(r,"lstmBias","basicLSTMCell"),c=Object(g.a)(n,"data","basicLSTMCell"),P=Object(g.a)(a,"c","basicLSTMCell"),l=Object(g.a)(o,"h","basicLSTMCell"),f=Object(T.a)([c,l],1),d=Object(j.a)(f,v),p=Object(u.a)(d,s),b=p.shape[0],h=p.shape[1]/4,y=[b,h],m=Object(x.a)(p,[0,0],y),w=Object(x.a)(p,[0,h],y),L=Object(x.a)(p,[0,2*h],y),S=Object(x.a)(p,[0,3*h],y),A=Object(u.a)(Object(z.a)(Object(D.a)(m),Object(O.a)(w)),Object(z.a)(P,Object(D.a)(Object(u.a)(i,L))));return[A,Object(z.a)(Object(O.a)(A),Object(D.a)(S))]}}),S=r(120),A=r(105),k=r(7),C=Object(w.b)({batchNorm2d_:function(t,e,r,n,a,o){var i,u,v=Object(g.a)(t,"x","batchNorm"),s=Object(g.a)(e,"mean","batchNorm"),c=Object(g.a)(r,"variance","batchNorm");return null!=a&&(i=Object(g.a)(a,"scale","batchNorm")),null!=n&&(u=Object(g.a)(n,"offset","batchNorm")),k.b(2===v.rank,(function(){return"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(v.rank,".")})),k.b(2===s.rank||1===s.rank,(function(){return"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(s.rank,".")})),k.b(2===c.rank||1===c.rank,(function(){return"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,".")})),null!=i&&k.b(2===i.rank||1===i.rank,(function(){return"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(i.rank,".")})),null!=u&&k.b(2===u.rank||1===u.rank,(function(){return"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,".")})),Object(A.a)(v,s,c,u,i,o)}}),I=Object(w.b)({batchNorm3d_:function(t,e,r,n,a,o){var i,u,v=Object(g.a)(t,"x","batchNorm"),s=Object(g.a)(e,"mean","batchNorm"),c=Object(g.a)(r,"variance","batchNorm");return null!=a&&(i=Object(g.a)(a,"scale","batchNorm")),null!=n&&(u=Object(g.a)(n,"offset","batchNorm")),k.b(3===v.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(v.rank,".")})),k.b(3===s.rank||1===s.rank,(function(){return"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(s.rank,".")})),k.b(3===c.rank||1===c.rank,(function(){return"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,".")})),null!=i&&k.b(3===i.rank||1===i.rank,(function(){return"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(i.rank,".")})),null!=u&&k.b(3===u.rank||1===u.rank,(function(){return"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,".")})),Object(A.a)(v,s,c,u,i,o)}}),E=Object(w.b)({batchNorm4d_:function(t,e,r,n,a,o){var i,u,v=Object(g.a)(t,"x","batchNorm"),s=Object(g.a)(e,"mean","batchNorm"),c=Object(g.a)(r,"variance","batchNorm");return null!=a&&(i=Object(g.a)(a,"scale","batchNorm")),null!=n&&(u=Object(g.a)(n,"offset","batchNorm")),k.b(4===v.rank,(function(){return"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(v.rank,".")})),k.b(4===s.rank||1===s.rank,(function(){return"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(s.rank,".")})),k.b(4===c.rank||1===c.rank,(function(){return"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,".")})),null!=i&&k.b(4===i.rank||1===i.rank,(function(){return"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(i.rank,".")})),null!=u&&k.b(4===u.rank||1===u.rank,(function(){return"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,".")})),Object(A.a)(v,s,c,u,i,o)}}),M=r(329),U=r(143),R=r(53),W=r(12),Q=r(330),Y=r(331),G=r(80),F=r(68),N=Object(w.b)({concat1d_:function(t){return Object(T.a)(t,0)}}),q=Object(w.b)({concat2d_:function(t,e){return Object(T.a)(t,e)}}),K=Object(w.b)({concat3d_:function(t,e){return Object(T.a)(t,e)}}),B=Object(w.b)({concat4d_:function(t,e){return Object(T.a)(t,e)}}),V=r(216),X=r(78),Z=r(217),H=r(332),J=r(243),_=Object(w.b)({conv3dTranspose_:function(t,e,r,n,a){var o=Object(g.a)(t,"x","conv3dTranspose"),i=Object(g.a)(e,"filter","conv3dTranspose");return Object(J.a)(r,o,i,n,a)}}),$=r(159),tt=r(218),et=r(160),rt=r(333),nt=r(219),at=r(99),ot=r(5),it=r(3),ut=Object(w.b)({diag_:function(t){var e={x:Object(g.a)(t,"x","diag")};return ot.a.runKernel(it.R,e)}}),vt=r(220),st=r(15),ct=r(221),Pt=r(222),lt=r(161),ft=r(100),dt=r(334),pt=r(47),bt=r(72),ht=r(335),yt=r(8),mt=r(107),gt=Object(w.b)({eye_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==e&&(e=t);for(var a=Object(R.a)([t,e],n),o=t<=e?t:e,i=0;i<o;++i)a.set(1,i,i);var u=Object(yt.a)(a.toTensor(),[t,e]);if(null==r)return u;if(1===r.length)return Object(mt.a)(Object(bt.a)(u,0),[r[0],1,1]);if(2===r.length)return Object(mt.a)(Object(bt.a)(Object(bt.a)(u,0),0),[r[0],r[1],1,1]);if(3===r.length)return Object(mt.a)(Object(bt.a)(Object(bt.a)(Object(bt.a)(u,0),0),0),[r[0],r[1],r[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(r.length,"D."))}}),Tt=r(157),jt=r(162),zt=r(156),wt=r(121),Dt=r(52),xt=r(60),Ot=r(163),Lt=r(336),St=r(337),At=r(338),kt=r(164),Ct=r(122),It=r(61),Et=r(339),Mt=r(223),Ut=r(89),Rt=r(224),Wt=r(340),Qt=r(341),Yt=r(165),Gt=r(69),Ft=r(123),Nt=r(166),qt=r(226),Kt=r(81),Bt=r(167),Vt=r(342),Xt=r(343),Zt=r(98),Ht=r(112),Jt=r(144),_t=r(124),$t=r(227),te=r(168),ee=r(44),re=r(25),ne=r(14),ae=Object(w.b)({moments_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t=Object(g.a)(t,"x","moments");var n=Object(k.I)(e,t.shape),a=Object(Ht.a)(t,n,r),o=a.shape;r||(o=Object(ee.e)(a.shape,n));var i=Object(re.a)(Object(ne.a)(Object(W.a)(t,"float32"),Object(yt.a)(a,o))),u=Object(Ht.a)(i,n,r);return{mean:a,variance:u}}}),oe=Object(w.b)({multiRNNCell_:function(t,e,r,n){for(var a=Object(g.a)(e,"data","multiRNNCell"),o=Object(g.b)(r,"c","multiRNNCell"),i=Object(g.b)(n,"h","multiRNNCell"),u=a,v=[],s=0;s<t.length;s++){var c=t[s](u,o[s],i[s]);v.push(c[0]),v.push(c[1]),u=c[1]}for(var P=[],l=[],f=0;f<v.length;f+=2)P.push(v[f]),l.push(v[f+1]);return[P,l]}}),ie=r(344),ue=r(30),ve=r(125),se=r(145),ce=r(101),Pe=r(345),le=Object(w.b)({outerProduct_:function(t,e){var r=Object(g.a)(t,"v1","outerProduct"),n=Object(g.a)(e,"v2","outerProduct");k.b(1===r.rank&&1===n.rank,(function(){return"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(r.rank," and ").concat(n.rank,".")}));var a=Object(yt.a)(r,[-1,1]),o=Object(yt.a)(n,[1,-1]);return Object(j.a)(a,o)}}),fe=r(62),de=Object(w.b)({pad1d_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(k.b)(2===e.length,(function(){return"Invalid number of paddings. Must be length of 2."})),Object(fe.a)(t,[e],r)}}),pe=Object(w.b)({pad2d_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(k.b)(2===e.length&&2===e[0].length&&2===e[1].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),Object(fe.a)(t,e,r)}}),be=Object(w.b)({pad3d_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(k.b)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),Object(fe.a)(t,e,r)}}),he=Object(w.b)({pad4d_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(k.b)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),Object(fe.a)(t,e,r)}}),ye=r(228),me=r(54),ge=r(169),Te=r(210),je=r(229),ze=Object(w.b)({rand_:function(t,e,r){var n=Object(k.N)(t),a=null;if(null==r||"float32"===r)a=new Float32Array(n);else if("int32"===r)a=new Int32Array(n);else{if("bool"!==r)throw new Error("Unknown data type ".concat(r));a=new Uint8Array(n)}for(var o=0;o<n;o++)a[o]=e();return ot.a.makeTensor(a,t,r)}}),we=r(130),De=Object(w.b)({randomGamma_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if(null==r&&(r=1),null==n&&(n="float32"),"float32"!==n&&"int32"!==n)throw new Error("Unsupported data type ".concat(n));for(var o=new we.b(e,r,n,a),i=Object(R.a)(t,n),u=0;u<i.values.length;u++)i.values[u]=o.nextValue();return i.toTensor()}}),xe=Object(w.b)({randomNormal_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=n&&"bool"===n)throw new Error("Unsupported data type ".concat(n));for(var o=new we.a(e,r,n,!1,a),i=Object(R.a)(t,n),u=0;u<i.values.length;u++)i.values[u]=o.nextValue();return i.toTensor()}}),Oe=r(230),Le=r(189),Se=r(146),Ae=r(346),ke=r(102),Ce=r(170),Ie=r(55),Ee=Object(w.b)({reverse1d_:function(t){var e=Object(g.a)(t,"x","reverse");return k.b(1===e.rank,(function(){return"Error in reverse1D: x must be rank 1 but got rank ".concat(e.rank,".")})),Object(Ie.a)(e,0)}}),Me=Object(w.b)({reverse2d_:function(t,e){var r=Object(g.a)(t,"x","reverse");return k.b(2===r.rank,(function(){return"Error in reverse2D: x must be rank 2 but got rank ".concat(r.rank,".")})),Object(Ie.a)(r,e)}}),Ue=Object(w.b)({reverse3d_:function(t,e){var r=Object(g.a)(t,"x","reverse");return k.b(3===r.rank,(function(){return"Error in reverse3D: x must be rank 3 but got rank ".concat(r.rank,".")})),Object(Ie.a)(r,e)}}),Re=Object(w.b)({reverse4d_:function(t,e){var r=Object(g.a)(t,"x","reverse");return k.b(4===r.rank,(function(){return"Error in reverse4D: x must be rank 4 but got rank ".concat(r.rank,".")})),Object(Ie.a)(r,e)}}),We=r(347),Qe=r(231),Ye=r(16),Ge=r(232),Fe=r(233),Ne=r(348),qe=r(349),Ke=r(234),Be=r(235),Ve=Object(w.b)({slice1d_:function(t,e,r){var n=Object(g.a)(t,"x","slice1d");return k.b(1===n.rank,(function(){return"slice1d expects a rank-1 tensor, but got a rank-".concat(n.rank," tensor")})),Object(x.a)(n,[e],[r])}}),Xe=Object(w.b)({slice2d_:function(t,e,r){var n=Object(g.a)(t,"x","slice2d");return k.b(2===n.rank,(function(){return"slice2d expects a rank-2 tensor, but got a rank-".concat(n.rank," tensor")})),Object(x.a)(n,e,r)}}),Ze=Object(w.b)({slice3d_:function(t,e,r){var n=Object(g.a)(t,"x","slice3d");return k.b(3===n.rank,(function(){return"slice3d expects a rank-3 tensor, but got a rank-".concat(n.rank," tensor")})),Object(x.a)(n,e,r)}}),He=Object(w.b)({slice4d_:function(t,e,r){var n=Object(g.a)(t,"x","slice4d");return k.b(4===n.rank,(function(){return"slice4d expects a rank-4 tensor, but got a rank-".concat(n.rank," tensor")})),Object(x.a)(n,e,r)}}),Je=r(350),_e=r(225),$e=r(126),tr=r(171),er=r(147),rr=r(236),nr=r(172),ar=r(90),or=r(42),ir=r(127),ur=r(128),vr=r(70),sr=r(103),cr=r(351),Pr=r(19),lr=r(352),fr=r(129),dr=r(91),pr=r(56);function br(t,e,r){if(Object(k.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");var n=Object(g.c)(t,r);if(2!==n.length&&1!==n.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===n.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(pr.a)(t,e,n,r)}var hr=r(237);function yr(t,e,r){if(Object(k.d)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");var n=Object(g.c)(t,r);if(4!==n.length&&1!==n.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===n.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(pr.a)(t,e,n,r)}function mr(t,e,r){if(Object(k.d)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");var n=Object(g.c)(t,r);if(5!==n.length&&1!==n.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===n.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(pr.a)(t,e,n,r)}function gr(t,e,r){if(Object(k.d)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");var n=Object(g.c)(t,r);if(6!==n.length&&1!==n.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===n.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,Object(pr.a)(t,e,n,r)}var Tr=r(238),jr=r(353),zr=r(239),wr=r(173),Dr=r(104);function xr(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0;return ot.a.makeVariable(t,e,r,n)}var Or=r(41),Lr=r(240),Sr=r(79),Ar=r(22);function kr(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Cr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){kr(o,n,a,i,u,"next",t)}function u(t){kr(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Ir(){return(Ir=Cr(regeneratorRuntime.mark((function t(e,r,n){var a,o,i,u,v,s,c,P,l,f,d,p,b;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:for(a=Object(g.a)(e,"tensor","boolMask"),o=Object(g.a)(r,"mask","boolMask","bool"),i=null==n?0:n,u=o.rank,v=a.shape,k.b(u>0,(function(){return"mask cannot be scalar"})),k.e(v.slice(i,i+u),o.shape,"mask's shape must match the first K dimensions of tensor's shape,"),s=1,c=i;c<i+u;c++)s*=v[c];return P=v.slice(0,i).concat([s],v.slice(i+u)),l=Object(yt.a)(a,P),f=Object(yt.a)(o,[-1]),t.next=14,Object(Lr.a)(f);case 14:return d=t.sent,p=Object(ur.a)(d,[1]),b=Object(wt.a)(l,p,i),e!==a&&a.dispose(),r!==o&&o.dispose(),p.dispose(),l.dispose(),f.dispose(),d.dispose(),t.abrupt("return",b);case 24:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var Er=function(t,e,r){return Ir.apply(this,arguments)},Mr=r(354),Ur=r(355),Rr=r(57),Wr=r(174),Qr=r(23),Yr=Object(w.b)({movingAverage_:function(t,e,r,n){var a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=Object(g.a)(t,"v","movingAverage"),i=Object(g.a)(e,"x","movingAverage"),v=Object(g.a)(r,"decay","movingAverage");Object(Qr.assertTypesMatch)(o,i),k.b(k.a(o.shape,i.shape),(function(){return"Shape mismatch in v and x"}));var s=Object(Ye.a)(1),c=Object(ne.a)(s,v),P=Object(z.a)(Object(ne.a)(i,o),c);if(a){k.b(null!=n,(function(){return"When using zeroDebias: true, step is required."}));var l=Object(g.a)(n,"step","movingAverage");P=Object(st.a)(P,Object(ne.a)(s,Object(me.a)(v,l)))}return Object(u.a)(o,P)}}),Gr=r(356),Fr=r(365),Nr=r(357),qr=r(6),Kr=Object(w.b)({dropout_:function(t,e,r,n){var a=Object(g.a)(t,"x","dropout");if(k.b("float32"===a.dtype,(function(){return"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(a.dtype," tensor instead.")})),k.b(e>=0&&e<1,(function(){return"rate must be a float in the range [0, 1), but got ".concat(e,".")})),0===e)return t instanceof qr.a?a.clone():a;var o=function(t,e){if(null==e)return t.shape.slice();if(k.a(t.shape,e))return e;if(t.shape.length===e.length){for(var r=[],n=0;n<t.shape.length;n++)null==e[n]&&null!=t.shape[n]?r.push(t.shape[n]):r.push(e[n]);return r}return e}(a,r),i=1-e,v=Object(st.a)(Object(jt.a)(Object(u.a)(Object(Oe.a)(o,0,1,"float32",n),i)),i);return Object(z.a)(a,v)}});function Br(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Vr(t,e,r){for(var n=1-t%2,a=new Float32Array(t),o=0;o<t;++o){var i=2*Math.PI*o/(t+n-1);a[o]=e-r*Math.cos(i)}return Object(dr.a)(a,"float32")}function Xr(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Zr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Xr(o,n,a,i,u,"next",t)}function u(t){Xr(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Hr(){return(Hr=Zr(regeneratorRuntime.mark((function t(e,r){var n,a,o,i,u,v,s,c,P,l,f,d,p,b,h,y=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=y.length>2&&void 0!==y[2]?y[2]:1,a=Object(g.a)(e,"predictions","inTopK"),o=Object(g.a)(r,"targets","inTopK"),Object(k.b)(a.rank>1,(function(){return"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank)})),Object(k.b)(a.rank-1===o.rank,(function(){return"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(o.rank)})),Object(k.e)(a.shape.slice(0,a.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),i=a.shape[a.shape.length-1],Object(k.b)(n>0&&n<=i,(function(){return"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(i,"), but got ").concat(n)})),t.next=10,a.data();case 10:return u=t.sent,t.next=13,o.data();case 13:v=t.sent,s=u.length/i,c=i,P=Object(k.o)("bool",s),l=0;case 17:if(!(l<s)){t.next=35;break}for(f=l*c,d=u.subarray(f,f+c),p=[],b=0;b<d.length;b++)p.push({value:d[b],index:b});p.sort((function(t,e){return e.value-t.value})),P[l]=0,h=0;case 25:if(!(h<n)){t.next=32;break}if(p[h].index!==v[l]){t.next=29;break}return P[l]=1,t.abrupt("break",32);case 29:h++,t.next=25;break;case 32:l++,t.next=17;break;case 35:return e!==a&&a.dispose(),r!==o&&o.dispose(),t.abrupt("return",Object(fr.a)(P,o.shape,"bool"));case 38:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var Jr=function(t,e){return Hr.apply(this,arguments)},_r=r(38),$r=r(17),tn=r(177),en=r(175),rn=r(29),nn=r(51);function an(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return on(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?on(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function on(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var un=Object(w.b)({fusedConv2d_:function(t){var e=t.x,r=t.filter,n=t.strides,a=t.pad,o=t.dataFormat,i=void 0===o?"NHWC":o,v=t.dilations,s=void 0===v?[1,1]:v,c=t.dimRoundingMode,P=t.bias,l=t.activation,f=void 0===l?"linear":l,d=t.preluActivationWeights,p=t.leakyreluAlpha;if(f=f||"linear",!1===Object(nn.d)(ot.a.state.gradientDepth,f)){var b=Object(X.a)(e,r,n,a,i,s,c);return null!=P&&(b=Object(u.a)(b,P)),Object(nn.a)(b,f,d,p)}var h=Object(g.a)(e,"x","conv2d"),y=Object(g.a)(r,"filter","conv2d"),m=h,T=!1;3===h.rank&&(T=!0,m=Object(yt.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k.b(4===m.rank,(function(){return"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(m.rank,".")})),k.b(4===y.rank,(function(){return"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(y.rank,".")})),null!=c&&k.b(k.v(a),(function(){return"Error in fused conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(c," but got pad ").concat(a,".")})),k.b(m.shape[3]===y.shape[2],(function(){return"Error in conv2d: depth of input (".concat(m.shape[3],") must match ")+"input depth for filter ".concat(y.shape[2],".")})),k.b(rn.h(n,s),(function(){return"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'")})),k.b("NHWC"===i,(function(){return"Error in conv2d: got dataFormat of ".concat(i," but only NHWC is currently supported.")}));var j,z,w=rn.a(m.shape,y.shape,n,s,a,c);null!=P&&(j=Object(g.a)(P,"bias","fused conv2d"),j=an(Object(Qr.makeTypesMatch)(j,h),1)[0],$r.a(w.outShape,j.shape)),null!=d&&(z=Object(g.a)(d,"prelu weights","fused conv2d"));var D=function(t,e){var r=an(e,4),o=r[0],i=r[1],u=r[2],v=r[3],c=Object(nn.c)(t,u,f);k.b(rn.i(s),(function(){return"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'")}));var P=[Object(en.a)(i.shape,c,o,n,a),Object(tn.a)(i,c,o.shape,n,a)];if(null!=v){var l=Object(nn.b)(v,c);P.push(l)}return P},x={x:m,filter:y,bias:j,preluActivationWeights:z},O={strides:n,pad:a,dataFormat:i,dilations:s,dimRoundingMode:c,activation:f,leakyreluAlpha:p};return null==P?Object(_r.a)((function(t,e,r){var n=ot.a.runKernel(it.jb,x,O);return r([e,t,n]),T&&(n=Object(yt.a)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:D}}))(m,y):Object(_r.a)((function(t,e,r,n){var a=ot.a.runKernel(it.jb,x,O);return n([e,t,a,r]),T&&(a=Object(yt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:D}}))(m,y,j)}}),vn=r(247),sn=r(246);function cn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Pn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Pn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Pn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ln=Object(w.b)({fusedDepthwiseConv2d_:function(t){var e=t.x,r=t.filter,n=t.strides,a=t.pad,o=t.dataFormat,i=void 0===o?"NHWC":o,v=t.dilations,s=void 0===v?[1,1]:v,c=t.dimRoundingMode,P=t.bias,l=t.activation,f=void 0===l?"linear":l,d=t.preluActivationWeights,p=t.leakyreluAlpha;if(!1===Object(nn.d)(ot.a.state.gradientDepth,f)){var b=Object(at.a)(e,r,n,a,i,s,c);return null!=P&&(b=Object(u.a)(b,P)),Object(nn.a)(b,f,d,p)}var h=Object(g.a)(e,"x","depthwiseConv2d"),y=Object(g.a)(r,"filter","depthwiseConv2d"),m=h,T=!1;3===h.rank&&(T=!0,m=Object(yt.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k.b(4===m.rank,(function(){return"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")})),k.b(4===y.rank,(function(){return"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(y.rank,".")})),k.b(m.shape[3]===y.shape[2],(function(){return"Error in fused depthwiseConv2d: number of input channels "+"(".concat(m.shape[3],") must match the inChannels dimension in ")+"filter ".concat(y.shape[2],".")})),null==s&&(s=[1,1]),k.b(rn.h(n,s),(function(){return"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(n," and dilations '").concat(s,"'")})),null!=c&&k.b(k.v(a),(function(){return"Error in fused depthwiseConv2d: pad must be an integer when "+"using dimRoundingMode ".concat(c," but got pad ").concat(a,".")}));var j,z,w=rn.a(m.shape,y.shape,n,s,a,c,!0);if(null!=P){j=Object(g.a)(P,"bias","fused conv2d");var D=cn(Object(Qr.makeTypesMatch)(j,h),1);j=D[0],$r.a(w.outShape,j.shape)}null!=d&&(z=Object(g.a)(d,"prelu weights","fused depthwiseConv2d"));var x=function(t,e){k.b(rn.i(s),(function(){return"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(s,"'")}));var r=cn(e,4),o=r[0],i=r[1],u=r[2],v=r[3],P=Object(nn.c)(t,u,f),l=Object(sn.a)(i.shape,P,o,n,a,s,c),d=Object(vn.a)(i,P,o.shape,n,a,s,c);return null!=v?[l,d,Object(nn.b)(j,P)]:[l,d]},O={x:m,filter:y,bias:j,preluActivationWeights:z},L={strides:n,pad:a,dataFormat:i,dilations:s,dimRoundingMode:c,activation:f,leakyreluAlpha:p};return null==P?Object(_r.a)((function(t,e,r){var n=ot.a.runKernel(it.kb,O,L);return r([e,t,n]),T&&(n=Object(yt.a)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:x}}))(m,y):Object(_r.a)((function(t,e,r,n){var a=ot.a.runKernel(it.kb,O,L);return n([e,t,a,r]),T&&(a=Object(yt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(m,y,j)}});function fn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return dn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?dn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function dn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var pn=Object(w.b)({fusedMatMul_:function(t){var e=t.a,r=t.b,n=t.transposeA,a=void 0!==n&&n,o=t.transposeB,i=void 0!==o&&o,v=t.bias,s=t.activation,c=void 0===s?"linear":s,P=t.preluActivationWeights,l=t.leakyreluAlpha;if(!1===Object(nn.d)(ot.a.state.gradientDepth,c)){var f=Object(j.a)(e,r,a,i);return null!=v&&(f=Object(u.a)(f,v)),Object(nn.a)(f,c,P,l)}var d=Object(g.a)(e,"a","fused matMul"),p=Object(g.a)(r,"b","fused matMul"),b=fn(Object(Qr.makeTypesMatch)(d,p),2);d=b[0],p=b[1];var h=a?d.shape[d.rank-2]:d.shape[d.rank-1],y=i?p.shape[p.rank-1]:p.shape[p.rank-2],m=a?d.shape[d.rank-1]:d.shape[d.rank-2],T=i?p.shape[p.rank-2]:p.shape[p.rank-1],z=d.shape.slice(0,-2),w=p.shape.slice(0,-2),D=k.N(z),x=k.N(w);k.b(d.rank>=2&&p.rank>=2&&d.rank===p.rank,(function(){return"Error in fused matMul: inputs must have the same rank of at "+"least 2, got ranks ".concat(d.rank," and ").concat(p.rank,".")})),k.b(k.a(z,w),(function(){return"Error in fused matMul: outer dimensions (".concat(z,") and (")+"".concat(w,") of Tensors with shapes ").concat(d.shape," and ")+"".concat(p.shape," must match.")})),k.b(h===y,(function(){return"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(y,") of Tensors with shapes ").concat(d.shape," and ")+"".concat(p.shape," and transposeA=").concat(a)+" and transposeB=".concat(i," must match.")}));var O,L,S=d.shape.slice(0,-2).concat([m,T]),A=a?Object(yt.a)(d,[D,h,m]):Object(yt.a)(d,[D,m,h]),C=i?Object(yt.a)(p,[x,T,y]):Object(yt.a)(p,[x,y,T]);null!=v&&(O=Object(g.a)(v,"bias","fused matMul"),O=fn(Object(Qr.makeTypesMatch)(O,d),1)[0],$r.a(S,O.shape)),null!=P&&(L=Object(g.a)(P,"prelu weights","fused matMul"));var I=function(t,e){var r,n,o=fn(e,4),u=o[0],s=o[1],P=o[2],l=o[3],f=Object(nn.c)(Object(yt.a)(t,P.shape),P,c);return a||i?!a&&i?(r=Object(j.a)(f,s,!1,!1),n=Object(j.a)(f,u,!0,!1)):a&&!i?(r=Object(j.a)(s,f,!1,!0),n=Object(j.a)(u,f,!1,!1)):(r=Object(j.a)(s,f,!0,!0),n=Object(j.a)(f,u,!0,!0)):(r=Object(j.a)(f,s,!1,!0),n=Object(j.a)(u,f,!0,!1)),null!=v?[r,n,Object(nn.b)(l,f)]:[r,n]},E={a:A,b:C,bias:O,preluActivationWeights:L},M={transposeA:a,transposeB:i,activation:c,leakyreluAlpha:l};return null==v?Object(_r.a)((function(t,e,r){var n=ot.a.runKernel(it.ad,E,M);return r([t,e,n]),{value:Object(yt.a)(n,S),gradFunc:I}}))(A,C):Object(_r.a)((function(t,e,r,n){var a=ot.a.runKernel(it.ad,E,M);return n([t,e,a,r]),{value:Object(yt.a)(a,S),gradFunc:I}}))(A,C,O)}}),bn=Object(w.b)({hammingWindow_:function(t){return Vr(t,.54,.46)}}),hn=Object(w.b)({hannWindow_:function(t){return Vr(t,.5,.5)}}),yn=Object(w.b)({frame_:function(t,e,r){for(var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=0,i=[];o+e<=t.size;)i.push(Object(x.a)(t,o,e)),o+=r;if(n)for(;o<t.size;){var u=o+e-t.size,v=Object(T.a)([Object(x.a)(t,o,e-u),Object(Tt.a)([u],a)]);i.push(v),o+=r}return 0===i.length?br([],[0,e]):Object(yt.a)(Object(T.a)(i),[i.length,e])}}),mn=Object(w.b)({stft_:function(t,e,r,n){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:hn;null==n&&(n=Br(e));for(var o=yn(t,e,r),i=Object(z.a)(o,a(e)),u=[],v=0;v<o.shape[0];v++)u.push(Object(nr.a)(Object(x.a)(i,[v,0],[1,e]),n));return Object(T.a)(u)}}),gn=Object(w.b)({cropAndResize_:function(t,e,r,n){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=Object(g.a)(t,"image","cropAndResize"),u=Object(g.a)(e,"boxes","cropAndResize","float32"),v=Object(g.a)(r,"boxInd","cropAndResize","int32"),s=u.shape[0];k.b(4===i.rank,(function(){return"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(i.rank,".")})),k.b(2===u.rank&&4===u.shape[1],(function(){return"Error in cropAndResize: boxes must be have size [".concat(s,",4] ")+"but had shape ".concat(u.shape,".")})),k.b(1===v.rank&&v.shape[0]===s,(function(){return"Error in cropAndResize: boxInd must be have size [".concat(s,"] ")+"but had shape ".concat(u.shape,".")})),k.b(2===n.length,(function(){return"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(n.length,".")})),k.b(n[0]>=1&&n[1]>=1,(function(){return"cropSize must be atleast [1,1], but was ".concat(n)})),k.b("bilinear"===a||"nearest"===a,(function(){return"method must be bilinear or nearest, but was ".concat(a)}));var c={image:i,boxes:u,boxInd:v},P={method:a,extrapolationValue:o,cropSize:n},l=ot.a.runKernel(it.K,c,P);return l}}),Tn=Object(w.b)({flipLeftRight_:function(t){var e=Object(g.a)(t,"image","flipLeftRight","float32");k.b(4===e.rank,(function(){return"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,".")}));var r={image:e};return ot.a.runKernel(it.eb,r,{})}}),jn=Object(w.b)({rotateWithOffset_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=Object(g.a)(t,"image","rotateWithOffset","float32");k.b(4===a.rank,(function(){return"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(a.rank,".")}));var o={image:a},i={radians:e,fillValue:r,center:n},u=ot.a.runKernel(it.uc,o,i);return u}});function zn(t,e,r,n,a,o){null==n&&(n=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==o&&(o=0);var i=t.shape[0];return r=Math.min(r,i),k.b(0<=n&&n<=1,(function(){return"iouThreshold must be in [0, 1], but was '".concat(n,"'")})),k.b(2===t.rank,(function(){return"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'")})),k.b(4===t.shape[1],(function(){return"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1])})),k.b(1===e.rank,(function(){return"scores must be a 1D tensor"})),k.b(e.shape[0]===i,(function(){return"scores has incompatible shape with boxes. Expected ".concat(i,", ")+"but was ".concat(e.shape[0])})),k.b(0<=o&&o<=1,(function(){return"softNmsSigma must be in [0, 1], but was '".concat(o,"'")})),{maxOutputSize:r,iouThreshold:n,scoreThreshold:a,softNmsSigma:o}}var wn=Object(w.b)({nonMaxSuppression_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=Object(g.a)(t,"boxes","nonMaxSuppression"),i=Object(g.a)(e,"scores","nonMaxSuppression"),u=zn(o,i,r,n,a),v={maxOutputSize:r=u.maxOutputSize,iouThreshold:n=u.iouThreshold,scoreThreshold:a=u.scoreThreshold};return ot.a.runKernel(it.Wb,{boxes:o,scores:i},v)}}),Dn=r(97);function xn(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function On(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){xn(o,n,a,i,u,"next",t)}function u(t){xn(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Ln(){return(Ln=On(regeneratorRuntime.mark((function t(e,r,n){var a,o,i,u,v,s,c,P,l,f,d=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=d.length>3&&void 0!==d[3]?d[3]:.5,o=d.length>4&&void 0!==d[4]?d[4]:Number.NEGATIVE_INFINITY,i=Object(g.a)(e,"boxes","nonMaxSuppressionAsync"),u=Object(g.a)(r,"scores","nonMaxSuppressionAsync"),v=zn(i,u,n,a,o),n=v.maxOutputSize,a=v.iouThreshold,o=v.scoreThreshold,t.next=10,Promise.all([i.data(),u.data()]);case 10:return s=t.sent,c=s[0],P=s[1],l=Object(Dn.a)(c,P,n,a,o),f=l.selectedIndices,i!==e&&i.dispose(),u!==r&&u.dispose(),t.abrupt("return",Object(dr.a)(f,"int32"));case 17:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var Sn=Object(w.b)({nonMaxSuppressionWithScore_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=Object(g.a)(t,"boxes","nonMaxSuppression"),u=Object(g.a)(e,"scores","nonMaxSuppression"),v=zn(i,u,r,n,a,o),s={boxes:i,scores:u},c={maxOutputSize:r=v.maxOutputSize,iouThreshold:n=v.iouThreshold,scoreThreshold:a=v.scoreThreshold,softNmsSigma:o=v.softNmsSigma},P=ot.a.runKernel(it.Yb,s,c);return{selectedIndices:P[0],selectedScores:P[1]}}});function An(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function kn(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){An(o,n,a,i,u,"next",t)}function u(t){An(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Cn(){return(Cn=kn(regeneratorRuntime.mark((function t(e,r,n){var a,o,i,u,v,s,c,P,l,f,d,p,b=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=b.length>3&&void 0!==b[3]?b[3]:.5,o=b.length>4&&void 0!==b[4]?b[4]:Number.NEGATIVE_INFINITY,i=b.length>5&&void 0!==b[5]?b[5]:0,u=Object(g.a)(e,"boxes","nonMaxSuppressionAsync"),v=Object(g.a)(r,"scores","nonMaxSuppressionAsync"),s=zn(u,v,n,a,o,i),n=s.maxOutputSize,a=s.iouThreshold,o=s.scoreThreshold,i=s.softNmsSigma,t.next=12,Promise.all([u.data(),v.data()]);case 12:return c=t.sent,P=c[0],l=c[1],f=Object(Dn.c)(P,l,n,a,o,i),d=f.selectedIndices,p=f.selectedScores,u!==e&&u.dispose(),v!==r&&v.dispose(),t.abrupt("return",{selectedIndices:Object(dr.a)(d,"int32"),selectedScores:Object(dr.a)(p)});case 19:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var In=Object(w.b)({nonMaxSuppressionPadded_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=Object(g.a)(t,"boxes","nonMaxSuppression"),u=Object(g.a)(e,"scores","nonMaxSuppression"),v=zn(i,u,r,n,a,null),s=v.maxOutputSize,c=v.iouThreshold,P=v.scoreThreshold,l={boxes:i,scores:u},f={maxOutputSize:s,iouThreshold:c,scoreThreshold:P,padToMaxOutputSize:o},d=ot.a.runKernel(it.Xb,l,f);return{selectedIndices:d[0],validOutputs:d[1]}}});function En(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Mn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Mn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Mn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Un(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Rn(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Un(o,n,a,i,u,"next",t)}function u(t){Un(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Wn(){return(Wn=Rn(regeneratorRuntime.mark((function t(e,r,n){var a,o,i,u,v,s,c,P,l,f,d,p,b,h,y,m,T=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=T.length>3&&void 0!==T[3]?T[3]:.5,o=T.length>4&&void 0!==T[4]?T[4]:Number.NEGATIVE_INFINITY,i=T.length>5&&void 0!==T[5]&&T[5],u=Object(g.a)(e,"boxes","nonMaxSuppressionAsync"),v=Object(g.a)(r,"scores","nonMaxSuppressionAsync"),s=zn(u,v,n,a,o,null),c=s.maxOutputSize,P=s.iouThreshold,l=s.scoreThreshold,t.next=11,Promise.all([u.data(),v.data()]);case 11:return f=t.sent,d=En(f,2),p=d[0],b=d[1],h=Object(Dn.b)(p,b,c,P,l,i),y=h.selectedIndices,m=h.validOutputs,u!==e&&u.dispose(),v!==r&&v.dispose(),t.abrupt("return",{selectedIndices:Object(dr.a)(y,"int32"),validOutputs:Object(Ye.a)(m,"int32")});case 19:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var Qn=r(245),Yn=r(244);function Gn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Fn=Object(w.b)({bandPart_:function(t,e,r){Object(k.b)(e%1==0,(function(){return"bandPart(): numLower must be an integer, got ".concat(e,".")})),Object(k.b)(r%1==0,(function(){return"bandPart(): numUpper must be an integer, got ".concat(r,".")}));var n=Object(g.a)(t,"a","bandPart");Object(k.b)(n.rank>=2,(function(){return"bandPart(): Rank must be at least 2, got ".concat(n.rank,".")}));var a=n.shape,o=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Gn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Gn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(n.shape.slice(-2),2),i=o[0],u=o[1];if(!(e<=i))throw new Error("bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(i,")."));if(!(r<=u))throw new Error("bandPart(): numUpper (".concat(r,")")+" must not be greater than the number of columns (".concat(u,")."));e<0&&(e=i),r<0&&(r=u);var v=Object(yt.a)(Object(Le.a)(0,i,1,"int32"),[-1,1]),s=Object(Le.a)(0,u,1,"int32"),c=Object(ne.a)(v,s),P=Object(Gt.a)(Object(It.a)(c,Object(Ye.a)(+e,"int32")),Object(xt.a)(c,Object(Ye.a)(-r,"int32"))),l=Object(Sr.a)([i,u],n.dtype);return Object(yt.a)(Object(vr.a)(Object(Dr.a)(Object(yt.a)(n,[-1,i,u])).map((function(t){return Object(Or.a)(P,t,l)}))),a)}}),Nn=Object(w.b)({gramSchmidt_:function(t){var e;Array.isArray(t)?function(){e=!1,Object(k.b)(null!=t&&t.length>0,(function(){return"Gram-Schmidt process: input must not be null, undefined, or empty"}));for(var r=t[0].shape[0],n=function(e){Object(k.b)(t[e].shape[0]===r,(function(){return"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(r,")")}))},a=1;a<t.length;++a)n(a)}():(e=!0,t=Object(ar.a)(t,t.shape[0],0).map((function(t){return Object(ur.a)(t,[0])}))),Object(k.b)(t.length<=t[0].shape[0],(function(){return"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],").")}));for(var r=[],n=t,a=function(t){r.push(ot.a.tidy((function(){var e=n[t];if(t>0)for(var a=0;a<t;++a){var o=Object(z.a)(Object(Pr.a)(Object(z.a)(r[a],e)),r[a]);e=Object(ne.a)(e,o)}return Object(st.a)(e,Object(Wr.a)(e,"euclidean"))})))},o=0;o<t.length;++o)a(o);return e?Object(vr.a)(r,0):r}}),qn=r(20);function Kn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Bn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Bn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Bn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Vn(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return ot.a.tidy((function(){Object(k.b)(2===t.shape.length,(function(){return"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor.")}));for(var r=t.shape[0],n=t.shape[1],a=gt(r),o=Object(G.a)(t),i=br([[1]],[1,1]),u=Object(G.a)(i),v=r>=n?n:r,s=function(t){var e=o,v=u,s=a,c=Kn(ot.a.tidy((function(){var e=Object(x.a)(o,[t,t],[r-t,1]),v=Object(Wr.a)(e),s=Object(x.a)(o,[t,t],[1,1]),c=Object(Or.a)(Object(Dt.a)(s,0),br([[-1]]),br([[1]])),P=Object(ne.a)(s,Object(z.a)(c,v)),l=Object(st.a)(e,P);u=1===l.shape[0]?Object(G.a)(i):Object(T.a)([i,Object(x.a)(l,[1,0],[l.shape[0]-1,l.shape[1]])],0);var f=Object(ue.a)(Object(st.a)(Object(j.a)(c,P),v)),d=Object(x.a)(o,[t,0],[r-t,n]),p=Object(z.a)(f,u),b=Object(Rr.a)(u);if(0===t)o=Object(ne.a)(d,Object(j.a)(p,Object(j.a)(b,d)));else{var h=Object(ne.a)(d,Object(j.a)(p,Object(j.a)(b,d)));o=Object(T.a)([Object(x.a)(o,[0,0],[t,n]),h],0)}var y=Object(Rr.a)(p),m=Object(x.a)(a,[0,t],[r,a.shape[1]-t]);if(0===t)a=Object(ne.a)(m,Object(j.a)(Object(j.a)(m,u),y));else{var g=Object(ne.a)(m,Object(j.a)(Object(j.a)(m,u),y));a=Object(T.a)([Object(x.a)(a,[0,0],[r,t]),g],1)}return[u,o,a]})),3);u=c[0],o=c[1],a=c[2],Object(qn.d)([e,v,s])},c=0;c<v;++c)s(c);return!e&&r>n&&(a=Object(x.a)(a,[0,0],[r,n]),o=Object(x.a)(o,[0,0],[n,n])),[a,o]}))}var Xn=Object(w.b)({qr_:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Object(k.b)(t.rank>=2,(function(){return"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank)})),2===t.rank)return Vn(t,e);var r=t.shape.slice(0,t.shape.length-2).reduce((function(t,e){return t*e})),n=Object(Dr.a)(Object(yt.a)(t,[r,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],o=[];n.forEach((function(t){var r=Kn(Vn(t,e),2),n=r[0],i=r[1];a.push(n),o.push(i)}));var i=Object(yt.a)(Object(vr.a)(a,0),t.shape),u=Object(yt.a)(Object(vr.a)(o,0),t.shape);return[i,u]}}),Zn=r(39),Hn=Object(w.b)({computeWeightedLoss_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Zn.a.SUM_BY_NONZERO_WEIGHTS,n=Object(g.a)(t,"losses","computeWeightedLoss"),a=null;null!=e&&(a=Object(g.a)(e,"weights","computeWeightedLoss"));var o=null==a?n:Object(z.a)(n,a);if(r===Zn.a.NONE)return o;if(r===Zn.a.SUM)return Object(Pr.a)(o);if(r===Zn.a.MEAN){if(null==a)return Object(Ht.a)(o);var i=n.size/a.size,u=Object(st.a)(Object(Pr.a)(o),Object(Pr.a)(a));return i>1?Object(st.a)(u,Object(Ye.a)(i)):u}if(r===Zn.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(st.a)(Object(Pr.a)(o),Object(Ye.a)(n.size));var v=Object(z.a)(a,Object(ce.a)(n.shape)),s=Object(W.a)(Object(Pr.a)(Object(ve.a)(v,Object(Ye.a)(0))),"float32");return Object(st.a)(Object(Pr.a)(o),s)}throw Error("Unknown reduction: ".concat(r))}}),Jn=Object(w.b)({absoluteDifference_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zn.a.SUM_BY_NONZERO_WEIGHTS,o=Object(g.a)(t,"labels","absoluteDifference"),i=Object(g.a)(e,"predictions","absoluteDifference"),u=null;null!=r&&(u=Object(g.a)(r,"weights","absoluteDifference")),Object(k.e)(o.shape,i.shape,"Error in absoluteDifference: ");var v=Object(a.a)(Object(ne.a)(o,i));return Hn(v,u,n)}}),_n=Object(w.b)({cosineDistance_:function(t,e,r,n){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zn.a.SUM_BY_NONZERO_WEIGHTS,o=Object(g.a)(t,"labels","cosineDistance"),i=Object(g.a)(e,"predictions","cosineDistance"),u=null;null!=n&&(u=Object(g.a)(n,"weights","cosineDistance")),Object(k.e)(o.shape,i.shape,"Error in cosineDistance: ");var v=Object(Ye.a)(1),s=Object(ne.a)(v,Object(Pr.a)(Object(z.a)(o,i),r,!0));return Hn(s,u,a)}}),$n=Object(w.b)({hingeLoss_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zn.a.SUM_BY_NONZERO_WEIGHTS,a=Object(g.a)(t,"labels","hingeLoss"),o=Object(g.a)(e,"predictions","hingeLoss"),i=null;null!=r&&(i=Object(g.a)(r,"weights","hingeLoss")),Object(k.e)(a.shape,o.shape,"Error in hingeLoss: ");var u=Object(Ye.a)(1);a=Object(ne.a)(Object(z.a)(Object(Ye.a)(2),a),u);var v=Object(ke.a)(Object(ne.a)(u,Object(z.a)(a,o)));return Hn(v,i,n)}}),ta=Object(w.b)({huberLoss_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zn.a.SUM_BY_NONZERO_WEIGHTS,i=Object(g.a)(t,"labels","huberLoss"),v=Object(g.a)(e,"predictions","huberLoss"),s=null;null!=r&&(s=Object(g.a)(r,"weights","huberLoss")),Object(k.e)(i.shape,v.shape,"Error in huberLoss: ");var c=Object(Ye.a)(n),P=Object(a.a)(Object(ne.a)(v,i)),l=Object(_t.a)(P,c),f=Object(ne.a)(P,l),d=Object(u.a)(Object(z.a)(Object(Ye.a)(.5),Object(re.a)(l)),Object(z.a)(c,f));return Hn(d,s,o)}}),ea=Object(w.b)({logLoss_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zn.a.SUM_BY_NONZERO_WEIGHTS,o=Object(g.a)(t,"labels","logLoss"),i=Object(g.a)(e,"predictions","logLoss"),v=null;null!=r&&(v=Object(g.a)(r,"weights","logLoss")),Object(k.e)(o.shape,i.shape,"Error in logLoss: ");var s=Object(Ye.a)(1),c=Object(Ye.a)(n),P=Object(ue.a)(Object(z.a)(o,Object(Ut.a)(Object(u.a)(i,c)))),l=Object(z.a)(Object(ne.a)(s,o),Object(Ut.a)(Object(u.a)(Object(ne.a)(s,i),c))),f=Object(ne.a)(P,l);return Hn(f,v,a)}}),ra=Object(w.b)({meanSquaredError_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zn.a.SUM_BY_NONZERO_WEIGHTS,a=Object(g.a)(t,"labels","meanSquaredError"),o=Object(g.a)(e,"predictions","meanSquaredError"),i=null;null!=r&&(i=Object(g.a)(r,"weights","meanSquaredError")),Object(k.e)(a.shape,o.shape,"Error in meanSquaredError: ");var u=Object(ir.a)(a,o);return Hn(u,i,n)}});function na(t,e){var r=Object(g.a)(t,"labels","sigmoidCrossEntropyWithLogits"),n=Object(g.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(k.e)(r.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");var o=Object(ke.a)(n),i=Object(z.a)(n,r),v=Object(Rt.a)(Object(pt.a)(Object(ue.a)(Object(a.a)(n))));return Object(u.a)(Object(ne.a)(o,i),v)}var aa=Object(w.b)({sigmoidCrossEntropy_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zn.a.SUM_BY_NONZERO_WEIGHTS,o=Object(g.a)(t,"multiClassLabels","sigmoidCrossEntropy"),i=Object(g.a)(e,"logits","sigmoidCrossEntropy"),v=null;if(null!=r&&(v=Object(g.a)(r,"weights","sigmoidCrossEntropy")),Object(k.e)(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){var s=Object(Ye.a)(n),c=Object(Ye.a)(1),P=Object(Ye.a)(.5);o=Object(u.a)(Object(z.a)(o,Object(ne.a)(c,s)),Object(z.a)(P,s))}var l=na(o,i);return Hn(l,v,a)}});function oa(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ia(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ia(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ia(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function ua(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===r&&(r=e.rank-1),r!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(e.rank," ")+"and dim was ".concat(r));var n=Object(_r.a)((function(t,e,n){var a=Object(Yt.a)(e,[r],!0),o=Object(ne.a)(Object(W.a)(e,"float32"),a);n([t,o]);var i=Object(ue.a)(Object(z.a)(o,t));return{value:Object(Pr.a)(i,[r]),gradFunc:function(t,e){var n=oa(e,2),a=n[0],o=n[1],i=Object(ee.e)(t.shape,[r]);return[Object(z.a)(Object(yt.a)(t,i),Object(ne.a)(Object(W.a)(a,"float32"),Object(pt.a)(o))),Object(z.a)(Object(yt.a)(t,i),Object(ne.a)(Object(pt.a)(o),Object(W.a)(a,"float32")))]}}}));return n(t,e)}var va=Object(w.b)({softmaxCrossEntropy_:function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zn.a.SUM_BY_NONZERO_WEIGHTS,o=Object(g.a)(t,"onehotLabels","softmaxCrossEntropy"),i=Object(g.a)(e,"logits","softmaxCrossEntropy"),v=null;if(null!=r&&(v=Object(g.a)(r,"weights","softmaxCrossEntropy")),Object(k.e)(o.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){var s=Object(Ye.a)(n),c=Object(Ye.a)(1),P=Object(Ye.a)(o.shape[1]);o=Object(u.a)(Object(z.a)(o,Object(ne.a)(c,s)),Object(st.a)(s,P))}var l=ua(o,i);return Hn(l,v,a)}}),sa={fft:tr.a,ifft:er.a,rfft:nr.a,irfft:rr.a},ca={hammingWindow:bn,hannWindow:hn,frame:yn,stft:mn},Pa={flipLeftRight:Tn,resizeNearestNeighbor:Yn.a,resizeBilinear:Qn.a,rotateWithOffset:jn,cropAndResize:gn,nonMaxSuppression:wn,nonMaxSuppressionAsync:function(t,e,r){return Ln.apply(this,arguments)},nonMaxSuppressionWithScore:Sn,nonMaxSuppressionWithScoreAsync:function(t,e,r){return Cn.apply(this,arguments)},nonMaxSuppressionPadded:In,nonMaxSuppressionPaddedAsync:function(t,e,r){return Wn.apply(this,arguments)}},la={bandPart:Fn,gramSchmidt:Nn,qr:Xn},fa={absoluteDifference:Jn,computeWeightedLoss:Hn,cosineDistance:_n,hingeLoss:$n,huberLoss:ta,logLoss:ea,meanSquaredError:ra,sigmoidCrossEntropy:aa,softmaxCrossEntropy:va}},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(12),u=r(4),v=Object(u.b)({sum_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],u=Object(o.a)(t,"x","sum");"bool"===u.dtype&&(u=Object(i.a)(u,"int32"));var v={x:u},s={axis:e,keepDims:r};return n.a.runKernel(a.Qc,v,s)}})},function(t,e,r){"use strict";r.d(e,"g",(function(){return u})),r.d(e,"f",(function(){return v})),r.d(e,"c",(function(){return s})),r.d(e,"b",(function(){return c})),r.d(e,"e",(function(){return P})),r.d(e,"h",(function(){return l})),r.d(e,"m",(function(){return f})),r.d(e,"n",(function(){return d})),r.d(e,"t",(function(){return p})),r.d(e,"d",(function(){return b})),r.d(e,"l",(function(){return h})),r.d(e,"u",(function(){return y})),r.d(e,"r",(function(){return m})),r.d(e,"o",(function(){return g})),r.d(e,"k",(function(){return T})),r.d(e,"q",(function(){return j})),r.d(e,"i",(function(){return z})),r.d(e,"j",(function(){return w})),r.d(e,"p",(function(){return D})),r.d(e,"a",(function(){return x})),r.d(e,"s",(function(){return O}));var n=r(5),a=r(24),o=r(6),i=r(23);function u(){Object(a.c)().set("PROD",!0)}function v(){Object(a.c)().set("DEBUG",!0)}function s(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(t){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function P(){n.a.disposeVariables()}function l(){return n.a}function f(){return n.a.memory()}function d(t){return n.a.profile(t)}function p(t,e){return n.a.tidy(t,e)}function b(t){Object(i.getTensorsInContainer)(t).forEach((function(t){return t.dispose()}))}function h(t){return n.a.keep(t)}function y(t){return n.a.time(t)}function m(t){return n.a.setBackend(t)}function g(){return n.a.ready()}function T(){return n.a.backendName}function j(t){n.a.removeBackend(t)}function z(t){return n.a.findBackend(t)}function w(t){return n.a.findBackendFactory(t)}function D(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return n.a.registerBackend(t,e,r)}function x(){return n.a.backend}function O(t,e){Object(a.c)().setPlatform(t,e)}Object(o.d)(c)},function(t,e,r){"use strict";r.r(e),r.d(e,"PackingScheme",(function(){return n})),r.d(e,"TextureUsage",(function(){return a})),r.d(e,"PhysicalTextureType",(function(){return o})),r.d(e,"getUnpackedMatrixTextureShapeWidthHeight",(function(){return v})),r.d(e,"getUnpackedArraySizeFromMatrixSize",(function(){return s})),r.d(e,"getColorMatrixTextureShapeWidthHeight",(function(){return c})),r.d(e,"getDenseTexShape",(function(){return P})),r.d(e,"getMatrixSizeFromUnpackedArraySize",(function(){return l})),r.d(e,"decodeMatrixFromUnpackedColorRGBAArray",(function(){return f})),r.d(e,"getPackedMatrixTextureShapeWidthHeight",(function(){return d})),r.d(e,"getPackedRGBAArraySizeFromMatrixShape",(function(){return p})),r.d(e,"getTextureConfig",(function(){return b}));var n,a,o,i=r(0);function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function v(t,e){return[e,t]}function s(t,e){return t*e}function c(t,e){return[4*e,t]}function P(t){var e=i.util.sizeFromShape(t),r=Math.ceil(e/4);return i.util.sizeToSquarishShape(r)}function l(t,e){if(t%e!=0)throw new Error("unpackedSize (".concat(t,") must be a multiple of ")+"".concat(e));return t/e}function f(t,e,r){var n=t.length*r/4;if(e.length<n)throw new Error("matrix length (".concat(e.length,") must be >= ").concat(n));for(var a=0,o=0;o<t.length;o+=4)for(var i=0;i<r;i++)e[a++]=t[o+i]}function d(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function p(t,e){var r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(d(t,e),2);return r[0]*r[1]*4}function b(t,e){var r,n,a,o,u,v,s,c,P,l=t;return 2===Object(i.env)().getNumber("WEBGL_VERSION")?(r=l.R32F,n=l.R16F,a=l.RGBA16F,o=l.RGBA32F,u=l.RED,v=4,s=1,c=l.HALF_FLOAT,P=l.FLOAT):(r=t.RGBA,n=t.RGBA,a=t.RGBA,o=l.RGBA,u=t.RGBA,v=4,s=4,c=null!=e?e.HALF_FLOAT_OES:null,P=t.FLOAT),{internalFormatFloat:r,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:t.RGBA,downloadUnpackNumChannels:v,defaultNumChannels:s,textureTypeHalfFloat:c,textureTypeFloat:P}}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(n||(n={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(a||(a={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(o||(o={}))},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({zerosLike_:function(t){var e={x:Object(o.a)(t,"x","zerosLike")};return n.a.runKernel(a.Zc,e)}})},function(t,e,r){"use strict";r.r(e),r.d(e,"makeTypesMatch",(function(){return u})),r.d(e,"assertTypesMatch",(function(){return v})),r.d(e,"isTensorInList",(function(){return s})),r.d(e,"getTensorsInContainer",(function(){return c}));var n=r(6),a=r(119),o=r(7);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){if(t.dtype===e.dtype)return[t,e];var r=Object(a.c)(t.dtype,e.dtype);return[t.cast(r),e.cast(r)]}function v(t,e){Object(o.b)(t.dtype===e.dtype,(function(){return"The dtypes of the first(".concat(t.dtype,") and")+" second(".concat(e.dtype,") input must match")}))}function s(t,e){return e.some((function(e){return e.id===t.id}))}function c(t){var e=[];return function t(e,r,a){if(null!=e)if(e instanceof n.a)r.push(e);else if(o=e,Array.isArray(o)||"object"===i(o)){var o,u=e;for(var v in u){var s=u[v];a.has(s)||(a.add(s),t(s,r,a))}}}(t,e,new Set),e}},function(t,e,r){"use strict";r.d(e,"b",(function(){return v})),r.d(e,"c",(function(){return c})),r.d(e,"a",(function(){return P})),r.d(e,"d",(function(){return l}));var n=r(7);function a(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return o(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function u(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var v=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}var e,r,o,v;return e=t,(r=[{key:"setPlatform",value:function(t,e){null!=this.platform&&console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,".")),this.platformName=t,this.platform=e}},{key:"registerFlag",value:function(t,e,r){if(this.flagRegistry[t]={evaluationFn:e,setHook:r},null!=this.urlFlags[t]){var n=this.urlFlags[t];console.warn("Setting feature override from URL ".concat(t,": ").concat(n,".")),this.set(t,n)}}},{key:"getAsync",value:(o=regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(e in this.flags)){t.next=2;break}return t.abrupt("return",this.flags[e]);case 2:return t.next=4,this.evaluateFlag(e);case 4:return this.flags[e]=t.sent,t.abrupt("return",this.flags[e]);case 6:case"end":return t.stop()}}),t,this)})),v=function(){var t=this,e=arguments;return new Promise((function(r,n){var a=o.apply(t,e);function u(t){i(a,r,n,u,v,"next",t)}function v(t){i(a,r,n,u,v,"throw",t)}u(void 0)}))},function(t){return v.apply(this,arguments)})},{key:"get",value:function(t){if(t in this.flags)return this.flags[t];var e=this.evaluateFlag(t);if(Object(n.x)(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}},{key:"getNumber",value:function(t){return this.get(t)}},{key:"getBool",value:function(t){return this.get(t)}},{key:"getFlags",value:function(){return this.flags}},{key:"features",get:function(){return this.flags}},{key:"set",value:function(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}},{key:"evaluateFlag",value:function(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}},{key:"setFlags",value:function(t){this.flags=Object.assign({},t)}},{key:"reset",value:function(){this.flags={},this.urlFlags={},this.populateURLFlags()}},{key:"populateURLFlags",value:function(){var t=this;if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){var e,r,n=(e=this.global.location.search,r={},e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];return s(r,n[0],n[1]),n.join("=")})),r);"tfjsflags"in n&&n.tfjsflags.split(",").forEach((function(e){var r=a(e.split(":"),2),n=r[0],o=r[1];t.urlFlags[n]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if("".concat(+e)===e)return+e;throw new Error("Could not parse value flag value ".concat(e," for flag ").concat(t,"."))}(n,o)}))}}}])&&u(e.prototype,r),t}();function s(t,e,r){t[decodeURIComponent(e)]=decodeURIComponent(r||"")}function c(){return P}var P=null;function l(t){P=t}},function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));var n=r(5),a=r(1),o=r(4),i=Object(o.b)({square_:function(t){var e=Object(a.a)(t,"x","square");return n.a.runKernel("Square",{x:e},{})}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({slice_:function(t,e,r){var i=Object(o.a)(t,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");var u={x:i},v={begin:e,size:r};return n.a.runKernel(a.Ec,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({matMul_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],u=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=Object(i.a)(t,"a","matMul"),c=Object(i.a)(e,"b","matMul"),P=Object(o.makeTypesMatch)(s,c),l=v(P,2),f={a:s=l[0],b:c=l[1]},d={transposeA:r,transposeB:u};return n.a.runKernel(a.s,f,d)}})},function(t,e,r){var n=r(33);t.exports=function(t){if(!n(t))throw TypeError(t+" is not an object!");return t}},function(t,e,r){"use strict";function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||i(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t){return function(t){if(Array.isArray(t))return u(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||i(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function v(t,e,r,n){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",i=arguments.length>5?arguments[5]:void 0,u=t[3],v=[].concat(o(e),[u]),s=j(a);return P(t,v,r,i,n,null,null,s)}function s(t,e,r,n,o,i){var u,v=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",s=d(e),c=a(s,2),l=c[0],f=c[1];if("channelsLast"===v)u=[l,f,t[3],t[3]];else{if("channelsFirst"!==v)throw new Error("Unknown dataFormat ".concat(v));u=[l,f,t[1],t[1]]}return P(t,u,r,n,o,i,!1,v)}function c(t,e,r,n,o,i){var u,v,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC",c=p(e),P=a(c,3),f=P[0],d=P[1],b=P[2];if("NDHWC"===s)v="channelsLast",u=[f,d,b,t[4],t[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat ".concat(s));v="channelsFirst",u=[f,d,b,t[1],t[1]]}return l(t,u,r,n,o,!1,v,i)}function P(t,e,r,n,o,i){var u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],v=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",s=-1,c=-1,P=-1,l=-1;if("channelsLast"===v){var f=a(t,4);s=f[0],c=f[1],P=f[2],l=f[3]}else{if("channelsFirst"!==v)throw new Error("Unknown dataFormat ".concat(v));var p=a(t,4);s=p[0],l=p[1],c=p[2],P=p[3]}var y,m=a(e,4),g=m[0],T=m[1],j=m[3],z=d(r),w=a(z,2),D=w[0],x=w[1],O=d(n),L=a(O,2),S=L[0],A=L[1],k=b(g,S),C=b(T,A),I=h(o,c,P,D,x,k,C,i,v),E=I.padInfo,M=I.outHeight,U=I.outWidth,R=u?j*l:j;return"channelsFirst"===v?y=[s,R,M,U]:"channelsLast"===v&&(y=[s,M,U,R]),{batchSize:s,dataFormat:v,inHeight:c,inWidth:P,inChannels:l,outHeight:M,outWidth:U,outChannels:R,padInfo:E,strideHeight:D,strideWidth:x,filterHeight:g,filterWidth:T,effectiveFilterHeight:k,effectiveFilterWidth:C,dilationHeight:S,dilationWidth:A,inShape:t,outShape:y,filterShape:e}}function l(t,e,r,n,o){var i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",v=arguments.length>7?arguments[7]:void 0,s=-1,c=-1,P=-1,l=-1,f=-1;if("channelsLast"===u){var d=a(t,5);s=d[0],c=d[1],P=d[2],l=d[3],f=d[4]}else{if("channelsFirst"!==u)throw new Error("Unknown dataFormat ".concat(u));var h=a(t,5);s=h[0],f=h[1],c=h[2],P=h[3],l=h[4]}var m,g=a(e,5),T=g[0],j=g[1],z=g[2],w=g[4],D=p(r),x=a(D,3),O=x[0],L=x[1],S=x[2],A=p(n),k=a(A,3),C=k[0],I=k[1],E=k[2],M=b(T,C),U=b(j,I),R=b(z,E),W=y(o,c,P,l,O,L,S,M,U,R,v),Q=W.padInfo,Y=W.outDepth,G=W.outHeight,F=W.outWidth,N=i?w*f:w;return"channelsFirst"===u?m=[s,N,Y,G,F]:"channelsLast"===u&&(m=[s,Y,G,F,N]),{batchSize:s,dataFormat:u,inDepth:c,inHeight:P,inWidth:l,inChannels:f,outDepth:Y,outHeight:G,outWidth:F,outChannels:N,padInfo:Q,strideDepth:O,strideHeight:L,strideWidth:S,filterDepth:T,filterHeight:j,filterWidth:z,effectiveFilterDepth:M,effectiveFilterHeight:U,effectiveFilterWidth:R,dilationDepth:C,dilationHeight:I,dilationWidth:E,inShape:t,outShape:m,filterShape:e}}function f(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=b(e,n);return Math.floor((t[0]*(r-1)-r+a)/2)}function d(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function p(t){return"number"==typeof t?[t,t,t]:t}function b(t,e){return e<=1?t:t+(t-1)*(e-1)}function h(t,e,r,a,o,i,u,v,s){var c,P,l;if("number"==typeof t){c={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};var d=function(t,e,r,n,a){null==n&&(n=f(t,e,r));var o=t[1];return[m((t[0]-e+2*n)/r+1,a),m((o-e+2*n)/r+1,a)]}([e,r],i,a,t,v);P=d[0],l=d[1]}else if("same"===t){P=Math.ceil(e/a),l=Math.ceil(r/o);var p=Math.max(0,(P-1)*a+i-e),b=Math.max(0,(l-1)*o+u-r),h=Math.floor(p/2),y=p-h,g=Math.floor(b/2);c={top:h,bottom:y,left:g,right:b-g,type:"SAME"}}else if("valid"===t)c={top:0,bottom:0,left:0,right:0,type:"VALID"},P=Math.ceil((e-i+1)/a),l=Math.ceil((r-u+1)/o);else{if("object"!==n(t))throw Error("Unknown padding parameter: ".concat(t));var T="channelsLast"===s?t[1][0]:t[2][0],j="channelsLast"===s?t[1][1]:t[2][1],z="channelsLast"===s?t[2][0]:t[3][0],w="channelsLast"===s?t[2][1]:t[3][1];c={top:T,bottom:j,left:z,right:w,type:0===T&&0===j&&0===z&&0===w?"VALID":"EXPLICIT"},P=m((e-i+T+j)/a+1,v),l=m((r-u+z+w)/o+1,v)}return{padInfo:c,outHeight:P,outWidth:l}}function y(t,e,r,n,a,o,i,u,v,s,c){var P,l,d,p;if("number"==typeof t){P={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};var b=function(t,e,r,n,a,o){null==a&&(a=f(t,e,n));var i=t[1],u=t[2];return[m((t[0]-e+2*a)/n+1,o),m((i-e+2*a)/n+1,o),m((u-e+2*a)/n+1,o),1]}([e,r,n,1],u,0,a,t,c);l=b[0],d=b[1],p=b[2]}else if("same"===t){var h=((l=Math.ceil(e/a))-1)*a+u-e,y=((d=Math.ceil(r/o))-1)*o+v-r,g=((p=Math.ceil(n/i))-1)*i+s-n,T=Math.floor(h/2),j=h-T,z=Math.floor(y/2),w=y-z,D=Math.floor(g/2);P={top:z,bottom:w,left:D,right:g-D,front:T,back:j,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: ".concat(t));P={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},l=Math.ceil((e-u+1)/a),d=Math.ceil((r-v+1)/o),p=Math.ceil((n-s+1)/i)}return{padInfo:P,outDepth:l,outHeight:d,outWidth:p}}function m(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function g(t){var e=a(d(t),3),r=e[0],n=e[1],o=e[2];return 1===r&&1===n&&1===o}function T(t,e){return g(t)||g(e)}function j(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}r.d(e,"d",(function(){return v})),r.d(e,"e",(function(){return s})),r.d(e,"f",(function(){return c})),r.d(e,"a",(function(){return P})),r.d(e,"b",(function(){return l})),r.d(e,"c",(function(){return f})),r.d(e,"i",(function(){return g})),r.d(e,"h",(function(){return T})),r.d(e,"g",(function(){return j}))},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({neg_:function(t){var e={x:Object(o.a)(t,"x","neg")};return n.a.runKernel(a.Vb,e)}})},function(t,e){var r=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e){function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t.exports=function(t){return"object"===r(t)?null!==t:"function"==typeof t}},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(80),v=r(4),s=Object(v.b)({concat_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Object(i.b)(t.length>=1,(function(){return"Pass at least one tensor to concat"}));var r=Object(o.b)(t,"tensors","concat","string_or_numeric");if("complex64"===r[0].dtype&&r.forEach((function(t){if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))})),1===r.length)return Object(u.a)(r[0]);var v=r,s={axis:e};return n.a.runKernel(a.B,v,s)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return a}));var n=r(0);function a(){var t,e,r,a,o,i,u,v,s,c;return 2===Object(n.env)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",r="out",a="in",o="texture",i="outputColor",u="out vec4 outputColor;",v="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",s="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",r="varying",a="varying",o="texture2D",i="gl_FragColor",u="",v="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",s="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:r,varyingFs:a,texture2D:o,output:i,defineOutput:u,defineSpecialNaN:v,defineSpecialInf:s,defineRound:c}}},function(t,e,r){var n=r(179)("wks"),a=r(132),o=r(31).Symbol,i="function"==typeof o;(t.exports=function(t){return n[t]||(n[t]=i&&o[t]||(i?o:a)("Symbol."+t))}).store=n},function(t,e,r){var n=r(87),a=Math.min;t.exports=function(t){return t>0?a(n(t),9007199254740991):0}},function(t,e,r){"use strict";r.d(e,"a",(function(){return d})),r.d(e,"f",(function(){return f})),r.d(e,"d",(function(){return P})),r.d(e,"e",(function(){return l})),r.d(e,"b",(function(){return s})),r.d(e,"c",(function(){return c}));var n=r(5),a=r(6),o=r(1),i=r(7);function u(t){return function(t){if(Array.isArray(t))return v(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return v(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?v(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function s(t){return i.b(i.u(t),(function(){return"The f passed in grad(f) must be a function"})),function(e,r){var a=Object(o.a)(e,"x","tf.grad","string_or_numeric"),u=null!=r?Object(o.a)(r,"dy","tf.grad"):null;return n.a.tidy((function(){var e=n.a.gradients((function(){return t(a)}),[a],u),r=e.value,o=e.grads;return null!=u&&i.e(r.shape,u.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(o),o[0]}))}}function c(t){return i.b(i.u(t),(function(){return"The f passed in grads(f) must be a function"})),function(e,r){i.b(Array.isArray(e),(function(){return"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"}));var a=Object(o.b)(e,"args","tf.grads","string_or_numeric"),v=null!=r?Object(o.a)(r,"dy","tf.grads"):null;return n.a.tidy((function(){var e=n.a.gradients((function(){return t.apply(void 0,u(a))}),a,v),r=e.value,o=e.grads;return null!=v&&i.e(r.shape,v.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(o),o}))}}function P(t){return i.b(i.u(t),(function(){return"The f passed in valueAndGrad(f) must be a function"})),function(e,r){i.b(e instanceof a.a,(function(){return"The x passed in valueAndGrad(f)(x) must be a tensor"})),i.b(null==r||r instanceof a.a,(function(){return"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"}));var o=n.a.gradients((function(){return t(e)}),[e],r),u=o.grads,v=o.value;return p(u),{grad:u[0],value:v}}}function l(t){return i.b(i.u(t),(function(){return"The f passed in valueAndGrads(f) must be a function"})),function(e,r){i.b(Array.isArray(e)&&e.every((function(t){return t instanceof a.a})),(function(){return"The args passed in valueAndGrads(f)(args) must be array of tensors"})),i.b(null==r||r instanceof a.a,(function(){return"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"}));var o=n.a.gradients((function(){return t.apply(void 0,u(e))}),e,r);return null!=r&&i.e(o.value.shape,r.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(o.grads),o}}function f(t,e){i.b(i.u(t),(function(){return"The f passed in variableGrads(f) must be a function"})),i.b(null==e||Array.isArray(e)&&e.every((function(t){return t instanceof a.c})),(function(){return"The varList passed in variableGrads(f, varList) must be an array of variables"}));var r=null!=e;if(!r)for(var o in e=[],n.a.registeredVariables)e.push(n.a.registeredVariables[o]);var u=r?e.filter((function(t){return!t.trainable})):null,v=e.length;e=e.filter((function(t){return t.trainable})),i.b(e.length>0,(function(){return"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(v," variables is ")+"trainable."}));var s=n.a.gradients(t,e,null,!0),c=s.value,P=s.grads;i.b(P.some((function(t){return null!=t})),(function(){return"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."})),i.b(0===c.rank,(function(){return"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")}));var l={};return e.forEach((function(t,e){null!=P[e]&&(l[t.name]=P[e])})),null!=u&&u.forEach((function(t){return l[t.name]=null})),{value:c,grads:l}}function d(t){return n.a.customGrad(t)}function p(t){if(t.filter((function(t){return null==t})).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},function(t,e,r){"use strict";var n;r.d(e,"a",(function(){return n})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(n||(n={}))},function(t,e,r){t.exports=!r(32)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(143),v=r(17),s=r(4),c=Object(s.b)({where_:function(t,e,r){var s=Object(o.a)(e,"a","where"),c=Object(o.a)(r,"b","where"),P=Object(o.a)(t,"condition","where","bool"),l=Object(v.a)(s.shape,c.shape),f=Object(u.a)(s,l),d=Object(u.a)(c,l);1===P.rank&&Object(i.b)(P.shape[0]===s.shape[0],(function(){return"The first dimension of `a` must match the size of `condition`."})),1!==P.rank&&Object(i.e)(P.shape,d.shape,"Error in where: ");var p={condition:P,t:f,e:d};return n.a.runKernel(a.yc,p)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({sqrt_:function(t){var e={x:Object(o.a)(t,"x","sqrt")};return n.a.runKernel(a.Kc,e)}})},function(t,e,r){var n=r(28),a=r(278),o=r(93),i=Object.defineProperty;e.f=r(40)?Object.defineProperty:function(t,e,r){if(n(t),e=o(e,!0),n(r),a)try{return i(t,e,r)}catch(t){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(t[e]=r.value),t}},function(t,e,r){"use strict";r.d(e,"b",(function(){return a})),r.d(e,"c",(function(){return o})),r.d(e,"d",(function(){return i})),r.d(e,"e",(function(){return u})),r.d(e,"a",(function(){return v})),r.d(e,"f",(function(){return s})),r.d(e,"h",(function(){return c})),r.d(e,"g",(function(){return P}));var n=r(7);function a(t,e){for(var r=0;r<t.length;++r)if(t[t.length-r-1]!==e-1-r)return!1;return!0}function o(t,e,r){for(var n=t.length+e.length,a=[],o=0,i=0,u=0;u<n;u++)-1===r.indexOf(u)?a.push(t[o++]):a.push(e[i++]);return a}function i(t,e){for(var r=[],n=t.length,a=0;a<n;a++)-1===e.indexOf(a)&&r.push(t[a]);return[r,e.map((function(e){return t[e]}))]}function u(t,e){return o(t,e.map((function(t){return 1})),e)}function v(t,e,r){n.b(a(e,r),(function(){return"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(r," input.")}))}function s(t,e){if(a(t,e))return null;for(var r=[],n=0;n<e;++n)-1===t.indexOf(n)&&r.push(n);return t.forEach((function(t){return r.push(t)})),r}function c(t){return t.map((function(t,e){return[e,t]})).sort((function(t,e){return t[1]-e[1]})).map((function(t){return t[0]}))}function P(t,e){for(var r=[],n=e-t;n<e;++n)r.push(n);return r}},function(t,e,r){"use strict";(function(t){r.d(e,"f",(function(){return P})),r.d(e,"e",(function(){return f})),r.d(e,"a",(function(){return h})),r.d(e,"b",(function(){return y})),r.d(e,"d",(function(){return m})),r.d(e,"c",(function(){return g})),r.d(e,"g",(function(){return T}));var n=r(68),a=r(129),o=r(7),i=r(191);function u(t,e){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return v(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?v(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,a=function(){};return{s:a,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,u=!1;return{s:function(){r=t[Symbol.iterator]()},n:function(){var t=r.next();return i=t.done,t},e:function(t){u=!0,o=t},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw o}}}}function v(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function s(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function c(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){s(o,n,a,i,u,"next",t)}function u(t){s(o,n,a,i,u,"throw",t)}i(void 0)}))}}function P(t,e){return l.apply(this,arguments)}function l(){return(l=c(regeneratorRuntime.mark((function t(e,r){var n,a,o,i,u,v;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:for(n=[],a=[],o=Array.isArray(e)?e.map((function(t){return t.name})):Object.keys(e),i=function(t){var i=o[t],u=Array.isArray(e)?e[t].tensor:e[i];if("float32"!==u.dtype&&"int32"!==u.dtype&&"bool"!==u.dtype&&"string"!==u.dtype&&"complex64"!==u.dtype)throw new Error("Unsupported dtype in weight '".concat(i,"': ").concat(u.dtype));var v={name:i,shape:u.shape,dtype:u.dtype};if("string"===u.dtype){var s=new Promise(function(){var t=c(regeneratorRuntime.mark((function t(e){var r,n,a,o,i,v,s;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,u.bytes();case 2:for(r=t.sent,n=r.reduce((function(t,e){return t+e.length}),0)+4*r.length,a=new Uint8Array(n),o=0,i=0;i<r.length;i++)v=r[i],s=new Uint8Array(new Uint32Array([v.length]).buffer),a.set(s,o),o+=4,a.set(v,o),o+=v.length;e(a);case 8:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}());a.push(s)}else a.push(u.data());null!=r&&(v.group=r),n.push(v)},u=0;u<o.length;++u)i(u);return t.next=7,Promise.all(a);case 7:return v=t.sent,t.abrupt("return",{data:d(v),specs:n});case 9:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function f(t,e){var r,v,s={},c=0,P=u(e);try{for(P.s();!(v=P.n()).done;){var l=v.value,f=l.name,d=l.dtype,p=l.shape,b=Object(o.N)(p),h=void 0;if("quantization"in l){var y=l.quantization;if("uint8"===y.dtype||"uint16"===y.dtype){if(!("min"in y)||!("scale"in y))throw new Error("Weight ".concat(l.name," with quantization ").concat(y.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==y.dtype)throw new Error("Weight ".concat(l.name," has unknown ")+"quantization dtype ".concat(y.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==d)throw new Error("Weight ".concat(l.name," is quantized with ").concat(y.dtype," ")+"which only supports weights of type float32 not ".concat(d,"."))}var m=i.a[y.dtype],g=t.slice(c,c+b*m),T="uint8"===y.dtype?new Uint8Array(g):new Uint16Array(g);if("float32"===d)if("uint8"===y.dtype||"uint16"===y.dtype){h=new Float32Array(T.length);for(var z=0;z<T.length;z++){var w=T[z];h[z]=w*y.scale+y.min}}else{if("float16"!==y.dtype)throw new Error("Unsupported quantization type ".concat(y.dtype," ")+"for weight type float32.");void 0===r&&(r=j()),h=r(T)}else{if("int32"!==d)throw new Error("Unsupported dtype in weight '".concat(f,"': ").concat(d));if("uint8"!==y.dtype&&"uint16"!==y.dtype)throw new Error("Unsupported quantization type ".concat(y.dtype," ")+"for weight type int32.");h=new Int32Array(T.length);for(var D=0;D<T.length;D++){var x=T[D];h[D]=Math.round(x*y.scale+y.min)}}c+=b*m}else if("string"===d){var O=Object(o.N)(l.shape);h=[];for(var L=0;L<O;L++){var S=new Uint32Array(t.slice(c,c+4))[0];c+=4;var A=new Uint8Array(t.slice(c,c+S));h.push(A),c+=S}}else{var k=i.a[d],C=t.slice(c,c+b*k);if("float32"===d)h=new Float32Array(C);else if("int32"===d)h=new Int32Array(C);else if("bool"===d)h=new Uint8Array(C);else{if("complex64"!==d)throw new Error("Unsupported dtype in weight '".concat(f,"': ").concat(d));h=new Float32Array(C);for(var I=new Float32Array(h.length/2),E=new Float32Array(h.length/2),M=0;M<I.length;M++)I[M]=h[2*M],E[M]=h[2*M+1];var U=Object(a.a)(I,p,"float32"),R=Object(a.a)(E,p,"float32");s[f]=Object(n.a)(U,R),U.dispose(),R.dispose()}c+=b*k}"complex64"!==d&&(s[f]=Object(a.a)(h,p,d))}}catch(t){P.e(t)}finally{P.f()}return s}function d(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));var e=0,r=[];t.forEach((function(t){if(e+=t.byteLength,r.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))}));var n=new Uint8Array(e),a=0;return r.forEach((function(t){n.set(new Uint8Array(t.buffer),a),a+=t.byteLength})),n.buffer}var p=void 0!==t&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function b(e){return p?t.byteLength(e):new Blob([e]).size}function h(e){if(p)return t.from(e).toString("base64");for(var r=new Uint8Array(e),n="",a=0,o=r.length;a<o;a++)n+=String.fromCharCode(r[a]);return btoa(n)}function y(e){if(p){var r=t.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}for(var n=atob(e),a=new Uint8Array(n.length),o=0;o<n.length;++o)a.set([n.charCodeAt(o)],o);return a.buffer}function m(t){if(1===t.length)return t[0];var e=0;t.forEach((function(t){e+=t.byteLength}));var r=new Uint8Array(e),n=0;return t.forEach((function(t){r.set(new Uint8Array(t),n),n+=t.byteLength})),r.buffer}function g(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);var e=t.split("/");return e[e.length-1]}function T(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:b(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:b(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function j(){var t=function(){var t=function(t){for(var e=t<<13,r=0;0==(8388608&e);)r-=8388608,e<<=1;return(e&=-8388609)|r+947912704},e=new Uint32Array(2048);e[0]=0;for(var r=1;r<1024;r++)e[r]=t(r);for(var n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){var t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(var e=1;e<31;e++)t[e]=e<<23;for(var r=33;r<63;r++)t[r]=2147483648+(r-32<<23);return t}(),r=function(){for(var t=new Uint32Array(64),e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return function(n){for(var a=new ArrayBuffer(4*n.length),o=new Uint32Array(a),i=0;i<n.length;i++){var u=n[i],v=t[r[u>>10]+(1023&u)]+e[u>>10];o[i]=v}return new Float32Array(a)}}}).call(this,r(320).Buffer)},function(t,e,r){var n=r(94);t.exports=function(t){return Object(n(t))}},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({exp_:function(t){var e={x:Object(o.a)(t,"x","exp")};return n.a.runKernel(a.Z,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var n=function(){function t(){}return t._AddLogEntry=function(e){t._LogCache=e+t._LogCache,t.OnNewCacheEntry&&t.OnNewCacheEntry(e)},t._FormatMessage=function(t){var e=function(t){return t<10?"0"+t:""+t},r=new Date;return"["+e(r.getHours())+":"+e(r.getMinutes())+":"+e(r.getSeconds())+"]: "+t},t._LogDisabled=function(t){},t._LogEnabled=function(e){var r=t._FormatMessage(e);console.log("BJS - "+r);var n="<div style='color:white'>"+r+"</div><br>";t._AddLogEntry(n)},t._WarnDisabled=function(t){},t._WarnEnabled=function(e){var r=t._FormatMessage(e);console.warn("BJS - "+r);var n="<div style='color:orange'>"+r+"</div><br>";t._AddLogEntry(n)},t._ErrorDisabled=function(t){},t._ErrorEnabled=function(e){t.errorsCount++;var r=t._FormatMessage(e);console.error("BJS - "+r);var n="<div style='color:red'>"+r+"</div><br>";t._AddLogEntry(n)},Object.defineProperty(t,"LogCache",{get:function(){return t._LogCache},enumerable:!1,configurable:!0}),t.ClearLogCache=function(){t._LogCache="",t.errorsCount=0},Object.defineProperty(t,"LogLevels",{set:function(e){(e&t.MessageLogLevel)===t.MessageLogLevel?t.Log=t._LogEnabled:t.Log=t._LogDisabled,(e&t.WarningLogLevel)===t.WarningLogLevel?t.Warn=t._WarnEnabled:t.Warn=t._WarnDisabled,(e&t.ErrorLogLevel)===t.ErrorLogLevel?t.Error=t._ErrorEnabled:t.Error=t._ErrorDisabled},enumerable:!1,configurable:!0}),t.NoneLogLevel=0,t.MessageLogLevel=1,t.WarningLogLevel=2,t.ErrorLogLevel=4,t.AllLogLevel=7,t._LogCache="",t.errorsCount=0,t.Log=t._LogEnabled,t.Warn=t._WarnEnabled,t.Error=t._ErrorEnabled,t}()},function(t,e,r){"use strict";r.d(e,"b",(function(){return a})),r.d(e,"a",(function(){return o}));var n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)};function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var o=function(){return(o=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var a in e=arguments[r])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};Object.create,Object.create},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({abs_:function(t){var e=Object(o.a)(t,"x","abs");if("complex64"===e.dtype){var r={x:e};return n.a.runKernel(a.A,r)}var i={x:e};return n.a.runKernel(a.a,i)}})},function(t,e,r){"use strict";r.d(e,"c",(function(){return f})),r.d(e,"b",(function(){return d})),r.d(e,"a",(function(){return p})),r.d(e,"d",(function(){return b}));var n=r(17),a=r(161),o=r(164),i=r(9),u=r(169),v=r(102),s=r(170),c=r(8),P=r(103),l=r(19);function f(t,e,r){if(null==r||"linear"===r)return t;if("relu"===r)return Object(i.a)(t,Object(P.a)(e));throw new Error("Cannot compute gradient for fused activation ".concat(r,"."))}function d(t,e){var r=e,a=n.c(t.shape,e.shape);return a.length>0&&(r=Object(l.a)(r,a)),Object(c.a)(r,t.shape)}function p(t,e,r,n){if("linear"===e)return t;if("relu"===e)return Object(v.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(s.a)(t);if("prelu"===e)return Object(u.a)(t,r);if("leakyrelu"===e)return Object(o.a)(t,n);throw new Error("Unknown fused activation ".concat(e,"."))}var b=function(t,e){return!(t>0)||"linear"===e}},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(4);function s(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(v.b)({greater_:function(t,e){var r=Object(i.a)(t,"a","greater"),v=Object(i.a)(e,"b","greater"),c=s(Object(o.makeTypesMatch)(r,v),2);r=c[0],v=c[1],Object(u.a)(r.shape,v.shape);var P={a:r,b:v};return n.a.runKernel(a.nb,P)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var n=r(6),a=r(7);function o(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",r=arguments.length>2?arguments[2]:void 0;return e=e||"float32",a.c(t),new n.b(t,e,r)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({pow_:function(t,e){var r=Object(i.a)(t,"base","pow"),u=Object(i.a)(e,"exp","pow"),s=v(Object(o.makeTypesMatch)(r,u),2),c={a:r=s[0],b:u=s[1]};return n.a.runKernel(a.fc,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({reverse_:function(t,e){var r={x:Object(o.a)(t,"x","reverse")},i={dims:e};return n.a.runKernel(a.tc,r,i)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));var n=r(5),a=r(7),o=r(10);function i(t,e,r,i){if(null==i&&(i=Object(a.r)(t)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);var u=Object(a.N)(e),v=Object(a.N)(r);Object(a.b)(u===v,(function(){return"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(u," values but has ").concat(v)}));for(var s=0;s<r.length;++s){var c=r[s],P=s!==r.length-1||c!==Object(a.N)(e.slice(s));Object(a.b)(r[s]===e[s]||!P,(function(){return"Error creating a new Tensor. Inferred shape "+"(".concat(r,") does not match the provided ")+"shape (".concat(e,"). ")}))}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||r,t="string"!==i?Object(o.toTypedArray)(t,i):Object(a.m)(t,[],!0),n.a.makeTensor(t,e,i)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({transpose_:function(t,e){var r=Object(o.a)(t,"x","transpose");if(null==e&&(e=r.shape.map((function(t,e){return e})).reverse()),i.b(r.rank===e.length,(function(){return"Error in transpose: rank of input ".concat(r.rank," ")+"must match length of perm ".concat(e,".")})),e.forEach((function(t){i.b(t>=0&&t<r.rank,(function(){return"All entries in 'perm' must be between 0 and ".concat(r.rank-1)+" but got ".concat(e)}))})),r.rank<=1)return r.clone();var u={x:r},v={perm:e};return n.a.runKernel(a.Vc,u,v)}})},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},,function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(4);function s(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(v.b)({greaterEqual_:function(t,e){var r=Object(i.a)(t,"a","greaterEqual"),v=Object(i.a)(e,"b","greaterEqual"),c=s(Object(o.makeTypesMatch)(r,v),2);r=c[0],v=c[1],Object(u.a)(r.shape,v.shape);var P={a:r,b:v};return n.a.runKernel(a.ob,P)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(4);function s(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(v.b)({lessEqual_:function(t,e){var r=Object(i.a)(t,"a","lessEqual"),v=Object(i.a)(e,"b","lessEqual"),c=s(Object(o.makeTypesMatch)(r,v),2);r=c[0],v=c[1],Object(u.a)(r.shape,v.shape);var P={a:r,b:v};return n.a.runKernel(a.zb,P)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({pad_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=Object(o.a)(t,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var u={paddings:e,constantValue:r},v={x:i};return n.a.runKernel(a.dc,v,u)}})},function(t,e,r){"use strict";r.r(e),r.d(e,"InternalTextureSource",(function(){return n})),r.d(e,"InternalTexture",(function(){return u}));var n,a=r(71),o=r(242),i=r(92);!function(t){t[t.Unknown=0]="Unknown",t[t.Url=1]="Url",t[t.Temp=2]="Temp",t[t.Raw=3]="Raw",t[t.Dynamic=4]="Dynamic",t[t.RenderTarget=5]="RenderTarget",t[t.MultiRenderTarget=6]="MultiRenderTarget",t[t.Cube=7]="Cube",t[t.CubeRaw=8]="CubeRaw",t[t.CubePrefiltered=9]="CubePrefiltered",t[t.Raw3D=10]="Raw3D",t[t.Raw2DArray=11]="Raw2DArray",t[t.Depth=12]="Depth",t[t.CubeRawRGBD=13]="CubeRawRGBD"}(n||(n={}));var u=function(){function t(t,e,r){void 0===r&&(r=!1),this.isReady=!1,this.isCube=!1,this.is3D=!1,this.is2DArray=!1,this.isMultiview=!1,this.url="",this.samplingMode=-1,this.generateMipMaps=!1,this.samples=0,this.type=-1,this.format=-1,this.onLoadedObservable=new a.Observable,this.width=0,this.height=0,this.depth=0,this.baseWidth=0,this.baseHeight=0,this.baseDepth=0,this.invertY=!1,this._invertVScale=!1,this._associatedChannel=-1,this._source=n.Unknown,this._buffer=null,this._bufferView=null,this._bufferViewArray=null,this._bufferViewArrayArray=null,this._size=0,this._extension="",this._files=null,this._workingCanvas=null,this._workingContext=null,this._framebuffer=null,this._depthStencilBuffer=null,this._MSAAFramebuffer=null,this._MSAARenderBuffer=null,this._attachments=null,this._textureArray=null,this._cachedCoordinatesMode=null,this._cachedWrapU=null,this._cachedWrapV=null,this._cachedWrapR=null,this._cachedAnisotropicFilteringLevel=null,this._isDisabled=!1,this._compression=null,this._generateStencilBuffer=!1,this._generateDepthBuffer=!1,this._comparisonFunction=0,this._sphericalPolynomial=null,this._lodGenerationScale=0,this._lodGenerationOffset=0,this._colorTextureArray=null,this._depthStencilTextureArray=null,this._lodTextureHigh=null,this._lodTextureMid=null,this._lodTextureLow=null,this._isRGBD=!1,this._linearSpecularLOD=!1,this._irradianceTexture=null,this._webGLTexture=null,this._references=1,this._gammaSpace=null,this._engine=t,this._source=e,r||(this._webGLTexture=t._createTexture())}return t.prototype.getEngine=function(){return this._engine},Object.defineProperty(t.prototype,"source",{get:function(){return this._source},enumerable:!1,configurable:!0}),t.prototype.incrementReferences=function(){this._references++},t.prototype.updateSize=function(t,e,r){void 0===r&&(r=1),this.width=t,this.height=e,this.depth=r,this.baseWidth=t,this.baseHeight=e,this.baseDepth=r,this._size=t*e*r},t.prototype._rebuild=function(){var e,r,a=this;switch(this.isReady=!1,this._cachedCoordinatesMode=null,this._cachedWrapU=null,this._cachedWrapV=null,this._cachedAnisotropicFilteringLevel=null,this.source){case n.Temp:return;case n.Url:return void(r=this._engine.createTexture(null!==(e=this._originalUrl)&&void 0!==e?e:this.url,!this.generateMipMaps,this.invertY,null,this.samplingMode,(function(){r._swapAndDie(a),a.isReady=!0}),null,this._buffer,void 0,this.format));case n.Raw:return(r=this._engine.createRawTexture(this._bufferView,this.baseWidth,this.baseHeight,this.format,this.generateMipMaps,this.invertY,this.samplingMode,this._compression))._swapAndDie(this),void(this.isReady=!0);case n.Raw3D:return(r=this._engine.createRawTexture3D(this._bufferView,this.baseWidth,this.baseHeight,this.baseDepth,this.format,this.generateMipMaps,this.invertY,this.samplingMode,this._compression))._swapAndDie(this),void(this.isReady=!0);case n.Raw2DArray:return(r=this._engine.createRawTexture2DArray(this._bufferView,this.baseWidth,this.baseHeight,this.baseDepth,this.format,this.generateMipMaps,this.invertY,this.samplingMode,this._compression))._swapAndDie(this),void(this.isReady=!0);case n.Dynamic:return(r=this._engine.createDynamicTexture(this.baseWidth,this.baseHeight,this.generateMipMaps,this.samplingMode))._swapAndDie(this),void this._engine.updateDynamicTexture(this,this._engine.getRenderingCanvas(),this.invertY,void 0,void 0,!0);case n.RenderTarget:var i=new o.a;if(i.generateDepthBuffer=this._generateDepthBuffer,i.generateMipMaps=this.generateMipMaps,i.generateStencilBuffer=this._generateStencilBuffer,i.samplingMode=this.samplingMode,i.type=this.type,this.isCube)r=this._engine.createRenderTargetCubeTexture(this.width,i);else{var u={width:this.width,height:this.height,layers:this.is2DArray?this.depth:void 0};r=this._engine.createRenderTargetTexture(u,i)}return r._swapAndDie(this),void(this.isReady=!0);case n.Depth:var v={bilinearFiltering:2!==this.samplingMode,comparisonFunction:this._comparisonFunction,generateStencil:this._generateStencilBuffer,isCube:this.isCube},s={width:this.width,height:this.height,layers:this.is2DArray?this.depth:void 0};return(r=this._engine.createDepthStencilTexture(s,v))._swapAndDie(this),void(this.isReady=!0);case n.Cube:return void(r=this._engine.createCubeTexture(this.url,null,this._files,!this.generateMipMaps,(function(){r._swapAndDie(a),a.isReady=!0}),null,this.format,this._extension));case n.CubeRaw:return(r=this._engine.createRawCubeTexture(this._bufferViewArray,this.width,this.format,this.type,this.generateMipMaps,this.invertY,this.samplingMode,this._compression))._swapAndDie(this),void(this.isReady=!0);case n.CubeRawRGBD:return r=this._engine.createRawCubeTexture(null,this.width,this.format,this.type,this.generateMipMaps,this.invertY,this.samplingMode,this._compression),void t._UpdateRGBDAsync(r,this._bufferViewArrayArray,this._sphericalPolynomial,this._lodGenerationScale,this._lodGenerationOffset).then((function(){r._swapAndDie(a),a.isReady=!0}));case n.CubePrefiltered:return void((r=this._engine.createPrefilteredCubeTexture(this.url,null,this._lodGenerationScale,this._lodGenerationOffset,(function(t){t&&t._swapAndDie(a),a.isReady=!0}),null,this.format,this._extension))._sphericalPolynomial=this._sphericalPolynomial)}},t.prototype._swapAndDie=function(t){t._webGLTexture=this._webGLTexture,t._isRGBD=this._isRGBD,this._framebuffer&&(t._framebuffer=this._framebuffer),this._depthStencilBuffer&&(t._depthStencilBuffer=this._depthStencilBuffer),t._depthStencilTexture=this._depthStencilTexture,this._lodTextureHigh&&(t._lodTextureHigh&&t._lodTextureHigh.dispose(),t._lodTextureHigh=this._lodTextureHigh),this._lodTextureMid&&(t._lodTextureMid&&t._lodTextureMid.dispose(),t._lodTextureMid=this._lodTextureMid),this._lodTextureLow&&(t._lodTextureLow&&t._lodTextureLow.dispose(),t._lodTextureLow=this._lodTextureLow),this._irradianceTexture&&(t._irradianceTexture&&t._irradianceTexture.dispose(),t._irradianceTexture=this._irradianceTexture);var e,r=this._engine.getLoadedTexturesCache();-1!==(e=r.indexOf(this))&&r.splice(e,1),-1===(e=r.indexOf(t))&&r.push(t)},t.prototype.dispose=function(){this._webGLTexture&&(this._references--,0===this._references&&(this._engine._releaseTexture(this),this._webGLTexture=null))},t._UpdateRGBDAsync=function(t,e,r,n,a){throw i.a.WarnImport("environmentTextureTools")},t}()},function(t,e,r){"use strict";(function(t){r.d(e,"a",(function(){return L})),r.d(e,"i",(function(){return A})),r.d(e,"c",(function(){return k})),r.d(e,"f",(function(){return C})),r.d(e,"e",(function(){return M})),r.d(e,"d",(function(){return U})),r.d(e,"k",(function(){return W})),r.d(e,"g",(function(){return Q})),r.d(e,"h",(function(){return Y})),r.d(e,"j",(function(){return G})),r.d(e,"b",(function(){return F}));var n=r(0),a=r(109),o=r(142),i=r(2),u=r(366),v=r(367),s=r(368),c=r(369),P=r(370),l=r(371),f=r(372),d=r(373),p=r(374),b=r(375),h=r(376),y=r(377),m=r(378),g=r(379),T=r(380),j=r(381),z=r(382);function w(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||D(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function D(t,e){if(t){if("string"==typeof t)return x(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?x(t,e):void 0}}function x(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function O(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var L=function(){function t(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var r=[u,v,s,c,P,l,f,h,b,d,y,m,g,T,j,z,p],n=(e=[]).concat.apply(e,function(t){return function(t){if(Array.isArray(t))return x(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||D(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(r.map((function(t){return t.json}))));this.opMappers=n.reduce((function(t,e){return t[e.tfOpName]=e,t}),{})}var e,r,n;return e=t,n=[{key:"Instance",get:function(){return this._instance||(this._instance=new this)}}],(r=[{key:"transformGraph",value:function(t){var e=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.node,a=[],o=[],u=[],v=n.reduce((function(t,r){return t[r.name]=e.mapNode(r),r.op.startsWith("Placeholder")?a.push(t[r.name]):"Const"===r.op?o.push(t[r.name]):null!=r.input&&0!==r.input.length||u.push(t[r.name]),t}),{}),s=[],c=[],P={},l={};null!=r&&(P=this.mapSignatureEntries(r.inputs),l=this.mapSignatureEntries(r.outputs));var f=Object.keys(v);f.forEach((function(t){var e=v[t];e.inputNames.forEach((function(t){var r=w(Object(i.b)(t),1)[0];e.inputs.push(v[r]),v[r].children.push(e)}))})),0===Object.keys(l).length?f.forEach((function(t){var e=v[t];0===e.children.length&&c.push(e)})):Object.keys(l).forEach((function(t){var e=w(Object(i.b)(t),1)[0],r=v[e];null!=r&&(r.signatureKey=l[t],c.push(r))})),Object.keys(P).length>0?Object.keys(P).forEach((function(t){var e=w(Object(i.b)(t),1)[0],r=v[e];r&&(r.signatureKey=P[t],s.push(r))})):s=a;var d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce((function(t,r){return t[r.signature.name]=e.mapFunction(r),t}),{}));var p={nodes:v,inputs:s,outputs:c,weights:o,placeholders:a,signature:r,functions:d};return u.length>0&&(p.initNodes=u),p}},{key:"mapSignatureEntries",value:function(t){return Object.keys(t||{}).reduce((function(e,r){return e[t[r].name]=r,e}),{})}},{key:"mapNode",value:function(t){var e=Object(o.b)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});var r={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((function(t){return t.startsWith("^")?t.substr(1):t})),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(r.inputParams=e.inputs.reduce((function(t,e){return t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t}),{})),null!=e.attrs&&(r.attrParams=e.attrs.reduce((function(e,r){var n=r.type,a=void 0;switch(r.type){case"string":void 0===(a=A(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=A(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":void 0===(a=Y(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=Y(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":void 0===(a=C(t.attr,r.tfName,r.defaultValue||0))&&r.tfDeprecatedName&&(a=C(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":void 0===(a=Q(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=Q(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":void 0===(a=k(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=k(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":void 0===(a=F(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=F(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":void 0===(a=W(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=W(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":void 0===(a=G(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=G(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":void 0===(a=M(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=M(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":void 0===(a=U(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=U(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":void 0===(a=E(t.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(a=E(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(r.type," for op: ").concat(t.op))}return e[r.name]={value:a,type:n},e}),{})),r}},{key:"mapFunction",value:function(t){var e=this,r=t.nodeDef,n=[],a={};null!=r&&(a=r.reduce((function(t,r){return t[r.name]=e.mapNode(r),"Const"===r.op&&n.push(t[r.name]),t}),{}));var o=[],u=[];t.signature.inputArg.forEach((function(t){var e=w(Object(i.b)(t.name),1)[0],r={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:I(t.type),type:"dtype"}},children:[]};r.signatureKey=t.name,o.push(r),a[e]=r})),Object.keys(a).forEach((function(t){var e=a[t];e.inputNames.forEach((function(t){var r=w(Object(i.b)(t),1)[0];e.inputs.push(a[r]),a[r].children.push(e)}))}));var v=t.ret;t.signature.outputArg.forEach((function(t){var e=w(Object(i.b)(v[t.name]),2),r=e[0],n=e[1],o=a[r];null!=o&&(o.defaultOutput=n,u.push(o))}));var s=this.mapArgsToSignature(t);return{nodes:a,inputs:o,outputs:u,weights:n,placeholders:[],signature:s}}},{key:"mapArgsToSignature",value:function(t){var e=this;return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((function(t,r){return t[r.name]=e.mapArgToTensorInfo(r),t}),{}),outputs:t.signature.outputArg.reduce((function(r,n){return r[n.name]=e.mapArgToTensorInfo(n,t.ret),r}),{})}}},{key:"mapArgToTensorInfo",value:function(t,e){var r=t.name;return null!=e&&(r=e[r]),{name:r,dtype:t.type}}}])&&O(e.prototype,r),n&&O(e,n),t}();function S(e,r){var a=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){var r=Object(n.env)().global;if(void 0!==r.atob)return r.atob(e);if(void 0!==t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return r?a:a.toLowerCase()}function A(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=t[e];return null!=a?S(a.s,n):r}function k(t,e,r){var n=t[e];return n?n.b:r}function C(t,e,r){var n=t[e]||{},a=null!=n.i?n.i:null!=n.f?n.f:r;return"number"==typeof a?a:parseInt(a,10)}function I(t){switch("string"==typeof t&&(t=a.a[t]),t){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function E(t,e,r){var n=t[e];return n&&n.func?n.func.name:r}function M(t,e,r){var n=t[e];return n&&n.type?I(n.type):r}function U(t,e,r){var n=t[e];return n&&n.list&&n.list.type?n.list.type.map((function(t){return I(t)})):r}function R(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((function(t){return"number"==typeof t.size?t.size:parseInt(t.size,10)})):[]}function W(t,e,r){var n=t[e];return n&&n.shape?R(n.shape):r}function Q(t,e,r){var n=t[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map((function(t){return"number"==typeof t?t:parseInt(t,10)})):r}function Y(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=t[e];return a&&a.list&&a.list.s?a.list.s.map((function(t){return S(t,n)})):r}function G(t,e,r){var n=t[e];return n&&n.list&&n.list.shape?n.list.shape.map((function(t){return R(t)})):r}function F(t,e,r){var n=t[e];return n&&n.list&&n.list.b?n.list.b:r}}).call(this,r(320).Buffer)},function(t,e,r){var n=r(43),a=r(131);t.exports=r(40)?function(t,e,r){return n.f(t,e,a(1,r))}:function(t,e,r){return t[e]=r,t}},function(t,e,r){var n=r(31),a=r(65),o=r(73),i=r(132)("src"),u=r(387),v=(""+u).split("toString");r(84).inspectSource=function(t){return u.call(t)},(t.exports=function(t,e,r,u){var s="function"==typeof r;s&&(o(r,"name")||a(r,"name",e)),t[e]!==r&&(s&&(o(r,i)||a(r,i,t[e]?""+t[e]:v.join(String(e)))),t===n?t[e]=r:u?t[e]?t[e]=r:a(t,e,r):(delete t[e],a(t,e,r)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[i]||u.call(this)}))},function(t,e,r){var n=r(11),a=r(32),o=r(94),i=/"/g,u=function(t,e,r,n){var a=String(o(t)),u="<"+e;return""!==r&&(u+=" "+r+'="'+String(n).replace(i,"&quot;")+'"'),u+">"+a+"</"+e+">"};t.exports=function(t,e){var r={};r[t]=e(u),n(n.P+n.F*a((function(){var e=""[t]('"');return e!==e.toLowerCase()||e.split('"').length>3})),"String",r)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({complex_:function(t,e){var r=Object(o.a)(t,"real","complex"),u=Object(o.a)(e,"imag","complex");i.e(r.shape,u.shape,"real and imag shapes, ".concat(r.shape," and ").concat(u.shape,", ")+"must match in call to tf.complex().");var v={real:r,imag:u};return n.a.runKernel(a.z,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(17),u=r(4),v=Object(u.b)({logicalAnd_:function(t,e){var r=Object(o.a)(t,"a","logicalAnd","bool"),u=Object(o.a)(e,"b","logicalAnd","bool");Object(i.a)(r.shape,u.shape);var v={a:r,b:u};return n.a.runKernel(a.Eb,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({stack_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=Object(o.b)(t,"tensors","stack","string_or_numeric");i.b(r.length>=1,(function(){return"Pass at least one tensor to tf.stack"})),r.length>0&&i.b(e<=r[0].rank,(function(){return"Axis must be <= rank of the tensor"}));var u=r,v={axis:e};return n.a.runKernel(a.cc,u,v)}})},function(t,e,r){"use strict";r.r(e),r.d(e,"EventState",(function(){return n})),r.d(e,"Observer",(function(){return a})),r.d(e,"MultiObserver",(function(){return o})),r.d(e,"Observable",(function(){return i}));var n=function(){function t(t,e,r,n){void 0===e&&(e=!1),this.initalize(t,e,r,n)}return t.prototype.initalize=function(t,e,r,n){return void 0===e&&(e=!1),this.mask=t,this.skipNextObservers=e,this.target=r,this.currentTarget=n,this},t}(),a=function(t,e,r){void 0===r&&(r=null),this.callback=t,this.mask=e,this.scope=r,this._willBeUnregistered=!1,this.unregisterOnNextCall=!1},o=function(){function t(){}return t.prototype.dispose=function(){if(this._observers&&this._observables)for(var t=0;t<this._observers.length;t++)this._observables[t].remove(this._observers[t]);this._observers=null,this._observables=null},t.Watch=function(e,r,n,a){void 0===n&&(n=-1),void 0===a&&(a=null);var o=new t;o._observers=new Array,o._observables=e;for(var i=0,u=e;i<u.length;i++){var v=u[i].add(r,n,!1,a);v&&o._observers.push(v)}return o},t}(),i=function(){function t(t){this._observers=new Array,this._eventState=new n(0),t&&(this._onObserverAdded=t)}return Object.defineProperty(t.prototype,"observers",{get:function(){return this._observers},enumerable:!1,configurable:!0}),t.prototype.add=function(t,e,r,n,o){if(void 0===e&&(e=-1),void 0===r&&(r=!1),void 0===n&&(n=null),void 0===o&&(o=!1),!t)return null;var i=new a(t,e,n);return i.unregisterOnNextCall=o,r?this._observers.unshift(i):this._observers.push(i),this._onObserverAdded&&this._onObserverAdded(i),i},t.prototype.addOnce=function(t){return this.add(t,void 0,void 0,void 0,!0)},t.prototype.remove=function(t){return!!t&&-1!==this._observers.indexOf(t)&&(this._deferUnregister(t),!0)},t.prototype.removeCallback=function(t,e){for(var r=0;r<this._observers.length;r++){var n=this._observers[r];if(!(n._willBeUnregistered||n.callback!==t||e&&e!==n.scope))return this._deferUnregister(n),!0}return!1},t.prototype._deferUnregister=function(t){var e=this;t.unregisterOnNextCall=!1,t._willBeUnregistered=!0,setTimeout((function(){e._remove(t)}),0)},t.prototype._remove=function(t){if(!t)return!1;var e=this._observers.indexOf(t);return-1!==e&&(this._observers.splice(e,1),!0)},t.prototype.makeObserverTopPriority=function(t){this._remove(t),this._observers.unshift(t)},t.prototype.makeObserverBottomPriority=function(t){this._remove(t),this._observers.push(t)},t.prototype.notifyObservers=function(t,e,r,n,a){if(void 0===e&&(e=-1),!this._observers.length)return!0;var o=this._eventState;o.mask=e,o.target=r,o.currentTarget=n,o.skipNextObservers=!1,o.lastReturnValue=t,o.userInfo=a;for(var i=0,u=this._observers;i<u.length;i++){var v=u[i];if(!v._willBeUnregistered&&(v.mask&e&&(v.scope?o.lastReturnValue=v.callback.apply(v.scope,[t,o]):o.lastReturnValue=v.callback(t,o),v.unregisterOnNextCall&&this._deferUnregister(v)),o.skipNextObservers))return!1}return!0},t.prototype.notifyObserversWithPromise=function(t,e,r,n,a){var o=this;void 0===e&&(e=-1);var i=Promise.resolve(t);if(!this._observers.length)return i;var u=this._eventState;return u.mask=e,u.target=r,u.currentTarget=n,u.skipNextObservers=!1,u.userInfo=a,this._observers.forEach((function(r){u.skipNextObservers||r._willBeUnregistered||r.mask&e&&(i=r.scope?i.then((function(e){return u.lastReturnValue=e,r.callback.apply(r.scope,[t,u])})):i.then((function(e){return u.lastReturnValue=e,r.callback(t,u)})),r.unregisterOnNextCall&&o._deferUnregister(r))})),i.then((function(){return t}))},t.prototype.notifyObserver=function(t,e,r){void 0===r&&(r=-1);var n=this._eventState;n.mask=r,n.skipNextObservers=!1,t.callback(e,n)},t.prototype.hasObservers=function(){return this._observers.length>0},t.prototype.clear=function(){this._observers=new Array,this._onObserverAdded=null},t.prototype.clone=function(){var e=new t;return e._observers=this._observers.slice(0),e},t.prototype.hasSpecificMask=function(t){void 0===t&&(t=-1);for(var e=0,r=this._observers;e<r.length;e++){var n=r[e];if(n.mask&t||n.mask===t)return!0}return!1},t}()},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({expandDims_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=Object(o.a)(t,"x","expandDims","string_or_numeric");i.b(e<=r.rank,(function(){return"Axis must be <= rank of the tensor"}));var u={input:r},v={dim:e};return n.a.runKernel(a.ab,u,v)}})},function(t,e){var r={}.hasOwnProperty;t.exports=function(t,e){return r.call(t,e)}},function(t,e,r){var n=r(180),a=r(94);t.exports=function(t){return n(a(t))}},function(t,e,r){var n=r(181),a=r(131),o=r(74),i=r(93),u=r(73),v=r(278),s=Object.getOwnPropertyDescriptor;e.f=r(40)?s:function(t,e){if(t=o(t),e=i(e,!0),v)try{return s(t,e)}catch(t){}if(u(t,e))return a(!n.f.call(t,e),t[e])}},function(t,e,r){var n=r(73),a=r(46),o=r(251)("IE_PROTO"),i=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=a(t),n(t,o)?t[o]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?i:null}},function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(29),v=r(4),s=r(8),c=Object(v.b)({conv2d_:function(t,e,r,v){var c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",P=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,f=Object(o.a)(t,"x","conv2d"),d=Object(o.a)(e,"filter","conv2d"),p=f,b=!1;3===f.rank&&(b=!0,p=Object(s.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),i.b(4===p.rank,(function(){return"Error in conv2d: input must be rank 4, but got rank ".concat(p.rank,".")})),i.b(4===d.rank,(function(){return"Error in conv2d: filter must be rank 4, but got rank "+"".concat(d.rank,".")})),null!=l&&i.b(i.v(v),(function(){return"Error in conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(v,".")}));var h="NHWC"===c?p.shape[3]:p.shape[1];i.b(h===d.shape[2],(function(){return"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(d.shape[2],".")})),i.b(u.h(r,P),(function(){return"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(P,"'")}));var y={x:p,filter:d},m={strides:r,pad:v,dataFormat:c,dilations:P,dimRoundingMode:l},g=n.a.runKernel(a.C,y,m);return b?Object(s.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));var n=r(5),a=r(7),o=r(68);function i(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){var r=i(t,"float32"),u=i(t,"float32");return Object(o.a)(r,u)}var v=Object(a.F)(Object(a.N)(t),e);return n.a.makeTensor(v,t,e)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({clone_:function(t){var e={x:Object(o.a)(t,"x","clone","string_or_numeric")};return n.a.runKernel(a.qb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({max_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","max"),u={x:i},v={reductionIndices:e,keepDims:r};return n.a.runKernel(a.Hb,u,v)}})},function(t,e,r){"use strict";r.d(e,"c",(function(){return s})),r.d(e,"b",(function(){return c})),r.d(e,"d",(function(){return P})),r.d(e,"f",(function(){return l})),r.d(e,"e",(function(){return f})),r.d(e,"h",(function(){return d})),r.d(e,"g",(function(){return p})),r.d(e,"a",(function(){return b}));var n=r(24),a=r(190);function o(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return i(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var u=Object(a.a)("kernelRegistry",(function(){return new Map})),v=Object(a.a)("gradRegistry",(function(){return new Map}));function s(t,e){var r=h(t,e);return u.get(r)}function c(t){return v.get(t)}function P(t){for(var e=u.entries(),r=[];;){var n=e.next(),a=n.done,i=n.value;if(a)break;var v=o(i,2),s=v[0],c=v[1];o(s.split("_"),1)[0]===t&&r.push(c)}return r}function l(t){var e=t.kernelName,r=t.backendName,n=h(e,r);u.has(n)&&console.warn("The kernel '".concat(e,"' for backend ")+"'".concat(r,"' is already registered")),u.set(n,t)}function f(t){var e=t.kernelName;v.has(e)&&Object(n.c)().getBool("DEBUG")&&console.warn("Overriding the gradient for '".concat(e,"'")),v.set(e,t)}function d(t,e){var r=h(t,e);if(!u.has(r))throw new Error("The kernel '".concat(t,"' for backend ")+"'".concat(e,"' is not registered"));u.delete(r)}function p(t){if(!v.has(t))throw new Error("The gradient '".concat(t,"' for backend is not registered"));v.delete(t)}function b(t,e){P(t).forEach((function(t){l(Object.assign({},t,{backendName:e}))}))}function h(t,e){return"".concat(e,"_").concat(t)}},function(t,e,r){"use strict";r.r(e),r.d(e,"ThinEngine",(function(){return T}));var n=function(){function t(){}return Object.defineProperty(t,"LastCreatedEngine",{get:function(){return 0===this.Instances.length?null:this.Instances[this.Instances.length-1]},enumerable:!1,configurable:!0}),Object.defineProperty(t,"LastCreatedScene",{get:function(){return this._LastCreatedScene},enumerable:!1,configurable:!0}),t.Instances=new Array,t._LastCreatedScene=null,t.UseFallbackTexture=!0,t.FallbackTexture="",t}(),a=r(108),o=r(92),i=r(71),u=function(){function t(){this._isDepthTestDirty=!1,this._isDepthMaskDirty=!1,this._isDepthFuncDirty=!1,this._isCullFaceDirty=!1,this._isCullDirty=!1,this._isZOffsetDirty=!1,this._isFrontFaceDirty=!1,this.reset()}return Object.defineProperty(t.prototype,"isDirty",{get:function(){return this._isDepthFuncDirty||this._isDepthTestDirty||this._isDepthMaskDirty||this._isCullFaceDirty||this._isCullDirty||this._isZOffsetDirty||this._isFrontFaceDirty},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"zOffset",{get:function(){return this._zOffset},set:function(t){this._zOffset!==t&&(this._zOffset=t,this._isZOffsetDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"cullFace",{get:function(){return this._cullFace},set:function(t){this._cullFace!==t&&(this._cullFace=t,this._isCullFaceDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"cull",{get:function(){return this._cull},set:function(t){this._cull!==t&&(this._cull=t,this._isCullDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"depthFunc",{get:function(){return this._depthFunc},set:function(t){this._depthFunc!==t&&(this._depthFunc=t,this._isDepthFuncDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"depthMask",{get:function(){return this._depthMask},set:function(t){this._depthMask!==t&&(this._depthMask=t,this._isDepthMaskDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"depthTest",{get:function(){return this._depthTest},set:function(t){this._depthTest!==t&&(this._depthTest=t,this._isDepthTestDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"frontFace",{get:function(){return this._frontFace},set:function(t){this._frontFace!==t&&(this._frontFace=t,this._isFrontFaceDirty=!0)},enumerable:!1,configurable:!0}),t.prototype.reset=function(){this._depthMask=!0,this._depthTest=!0,this._depthFunc=null,this._cullFace=null,this._cull=null,this._zOffset=0,this._frontFace=null,this._isDepthTestDirty=!0,this._isDepthMaskDirty=!0,this._isDepthFuncDirty=!1,this._isCullFaceDirty=!1,this._isCullDirty=!1,this._isZOffsetDirty=!1,this._isFrontFaceDirty=!1},t.prototype.apply=function(t){this.isDirty&&(this._isCullDirty&&(this.cull?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),this._isCullDirty=!1),this._isCullFaceDirty&&(t.cullFace(this.cullFace),this._isCullFaceDirty=!1),this._isDepthMaskDirty&&(t.depthMask(this.depthMask),this._isDepthMaskDirty=!1),this._isDepthTestDirty&&(this.depthTest?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),this._isDepthTestDirty=!1),this._isDepthFuncDirty&&(t.depthFunc(this.depthFunc),this._isDepthFuncDirty=!1),this._isZOffsetDirty&&(this.zOffset?(t.enable(t.POLYGON_OFFSET_FILL),t.polygonOffset(this.zOffset,0)):t.disable(t.POLYGON_OFFSET_FILL),this._isZOffsetDirty=!1),this._isFrontFaceDirty&&(t.frontFace(this.frontFace),this._isFrontFaceDirty=!1))},t}(),v=function(){function t(){this._isStencilTestDirty=!1,this._isStencilMaskDirty=!1,this._isStencilFuncDirty=!1,this._isStencilOpDirty=!1,this.reset()}return Object.defineProperty(t.prototype,"isDirty",{get:function(){return this._isStencilTestDirty||this._isStencilMaskDirty||this._isStencilFuncDirty||this._isStencilOpDirty},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilFunc",{get:function(){return this._stencilFunc},set:function(t){this._stencilFunc!==t&&(this._stencilFunc=t,this._isStencilFuncDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilFuncRef",{get:function(){return this._stencilFuncRef},set:function(t){this._stencilFuncRef!==t&&(this._stencilFuncRef=t,this._isStencilFuncDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilFuncMask",{get:function(){return this._stencilFuncMask},set:function(t){this._stencilFuncMask!==t&&(this._stencilFuncMask=t,this._isStencilFuncDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilOpStencilFail",{get:function(){return this._stencilOpStencilFail},set:function(t){this._stencilOpStencilFail!==t&&(this._stencilOpStencilFail=t,this._isStencilOpDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilOpDepthFail",{get:function(){return this._stencilOpDepthFail},set:function(t){this._stencilOpDepthFail!==t&&(this._stencilOpDepthFail=t,this._isStencilOpDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilOpStencilDepthPass",{get:function(){return this._stencilOpStencilDepthPass},set:function(t){this._stencilOpStencilDepthPass!==t&&(this._stencilOpStencilDepthPass=t,this._isStencilOpDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilMask",{get:function(){return this._stencilMask},set:function(t){this._stencilMask!==t&&(this._stencilMask=t,this._isStencilMaskDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilTest",{get:function(){return this._stencilTest},set:function(t){this._stencilTest!==t&&(this._stencilTest=t,this._isStencilTestDirty=!0)},enumerable:!1,configurable:!0}),t.prototype.reset=function(){this._stencilTest=!1,this._stencilMask=255,this._stencilFunc=t.ALWAYS,this._stencilFuncRef=1,this._stencilFuncMask=255,this._stencilOpStencilFail=t.KEEP,this._stencilOpDepthFail=t.KEEP,this._stencilOpStencilDepthPass=t.REPLACE,this._isStencilTestDirty=!0,this._isStencilMaskDirty=!0,this._isStencilFuncDirty=!0,this._isStencilOpDirty=!0},t.prototype.apply=function(t){this.isDirty&&(this._isStencilTestDirty&&(this.stencilTest?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),this._isStencilTestDirty=!1),this._isStencilMaskDirty&&(t.stencilMask(this.stencilMask),this._isStencilMaskDirty=!1),this._isStencilFuncDirty&&(t.stencilFunc(this.stencilFunc,this.stencilFuncRef,this.stencilFuncMask),this._isStencilFuncDirty=!1),this._isStencilOpDirty&&(t.stencilOp(this.stencilOpStencilFail,this.stencilOpDepthFail,this.stencilOpStencilDepthPass),this._isStencilOpDirty=!1))},t.ALWAYS=519,t.KEEP=7680,t.REPLACE=7681,t}(),s=function(){function t(){this._isAlphaBlendDirty=!1,this._isBlendFunctionParametersDirty=!1,this._isBlendEquationParametersDirty=!1,this._isBlendConstantsDirty=!1,this._alphaBlend=!1,this._blendFunctionParameters=new Array(4),this._blendEquationParameters=new Array(2),this._blendConstants=new Array(4),this.reset()}return Object.defineProperty(t.prototype,"isDirty",{get:function(){return this._isAlphaBlendDirty||this._isBlendFunctionParametersDirty},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"alphaBlend",{get:function(){return this._alphaBlend},set:function(t){this._alphaBlend!==t&&(this._alphaBlend=t,this._isAlphaBlendDirty=!0)},enumerable:!1,configurable:!0}),t.prototype.setAlphaBlendConstants=function(t,e,r,n){this._blendConstants[0]===t&&this._blendConstants[1]===e&&this._blendConstants[2]===r&&this._blendConstants[3]===n||(this._blendConstants[0]=t,this._blendConstants[1]=e,this._blendConstants[2]=r,this._blendConstants[3]=n,this._isBlendConstantsDirty=!0)},t.prototype.setAlphaBlendFunctionParameters=function(t,e,r,n){this._blendFunctionParameters[0]===t&&this._blendFunctionParameters[1]===e&&this._blendFunctionParameters[2]===r&&this._blendFunctionParameters[3]===n||(this._blendFunctionParameters[0]=t,this._blendFunctionParameters[1]=e,this._blendFunctionParameters[2]=r,this._blendFunctionParameters[3]=n,this._isBlendFunctionParametersDirty=!0)},t.prototype.setAlphaEquationParameters=function(t,e){this._blendEquationParameters[0]===t&&this._blendEquationParameters[1]===e||(this._blendEquationParameters[0]=t,this._blendEquationParameters[1]=e,this._isBlendEquationParametersDirty=!0)},t.prototype.reset=function(){this._alphaBlend=!1,this._blendFunctionParameters[0]=null,this._blendFunctionParameters[1]=null,this._blendFunctionParameters[2]=null,this._blendFunctionParameters[3]=null,this._blendEquationParameters[0]=null,this._blendEquationParameters[1]=null,this._blendConstants[0]=null,this._blendConstants[1]=null,this._blendConstants[2]=null,this._blendConstants[3]=null,this._isAlphaBlendDirty=!0,this._isBlendFunctionParametersDirty=!1,this._isBlendEquationParametersDirty=!1,this._isBlendConstantsDirty=!1},t.prototype.apply=function(t){this.isDirty&&(this._isAlphaBlendDirty&&(this._alphaBlend?t.enable(t.BLEND):t.disable(t.BLEND),this._isAlphaBlendDirty=!1),this._isBlendFunctionParametersDirty&&(t.blendFuncSeparate(this._blendFunctionParameters[0],this._blendFunctionParameters[1],this._blendFunctionParameters[2],this._blendFunctionParameters[3]),this._isBlendFunctionParametersDirty=!1),this._isBlendEquationParametersDirty&&(t.blendEquationSeparate(this._blendEquationParameters[0],this._blendEquationParameters[1]),this._isBlendEquationParametersDirty=!1),this._isBlendConstantsDirty&&(t.blendColor(this._blendConstants[0],this._blendConstants[1],this._blendConstants[2],this._blendConstants[3]),this._isBlendConstantsDirty=!1))},t}(),c=r(63),P=r(48),l=r(113),f=function(){function t(){}return t.prototype.postProcessor=function(t,e,r,n){return n.getCaps().drawBuffersExtension||(t=t.replace(/#extension.+GL_EXT_draw_buffers.+(enable|require)/g,"")),t},t}(),d=function(){function t(){}return t.prototype.attributeProcessor=function(t){return t.replace("attribute","in")},t.prototype.varyingProcessor=function(t,e){return t.replace("varying",e?"in":"out")},t.prototype.postProcessor=function(t,e,r){var n=-1!==t.search(/#extension.+GL_EXT_draw_buffers.+require/);if(t=(t=t.replace(/#extension.+(GL_OVR_multiview2|GL_OES_standard_derivatives|GL_EXT_shader_texture_lod|GL_EXT_frag_depth|GL_EXT_draw_buffers).+(enable|require)/g,"")).replace(/texture2D\s*\(/g,"texture("),r)t=(t=(t=(t=(t=(t=(t=t.replace(/texture2DLodEXT\s*\(/g,"textureLod(")).replace(/textureCubeLodEXT\s*\(/g,"textureLod(")).replace(/textureCube\s*\(/g,"texture(")).replace(/gl_FragDepthEXT/g,"gl_FragDepth")).replace(/gl_FragColor/g,"glFragColor")).replace(/gl_FragData/g,"glFragData")).replace(/void\s+?main\s*\(/g,(n?"":"out vec4 glFragColor;\n")+"void main(");else if(-1!==e.indexOf("#define MULTIVIEW"))return"#extension GL_OVR_multiview2 : require\nlayout (num_views = 2) in;\n"+t;return t},t}(),p=r(49),b=function(t){function e(e){var r=t.call(this)||this;return r._buffer=e,r}return Object(p.b)(e,t),Object.defineProperty(e.prototype,"underlyingResource",{get:function(){return this._buffer},enumerable:!1,configurable:!0}),e}(function(){function t(){this.references=0,this.capacity=0,this.is32Bits=!1}return Object.defineProperty(t.prototype,"underlyingResource",{get:function(){return null},enumerable:!1,configurable:!0}),t}()),h=function(){function t(){this.vertexCompilationError=null,this.fragmentCompilationError=null,this.programLinkError=null,this.programValidationError=null}return Object.defineProperty(t.prototype,"isAsync",{get:function(){return this.isParallelCompiled},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isReady",{get:function(){return!!this.program&&(!this.isParallelCompiled||this.engine._isRenderingStateCompiled(this))},enumerable:!1,configurable:!0}),t.prototype._handlesSpectorRebuildCallback=function(t){t&&this.program&&t(this.program)},t.prototype._getVertexShaderCode=function(){return this.vertexShader?this.engine._getShaderSource(this.vertexShader):null},t.prototype._getFragmentShaderCode=function(){return this.fragmentShader?this.engine._getShaderSource(this.fragmentShader):null},t}(),y=r(178),m=r(114),g=function(){},T=function(){function t(e,r,n,a){var o=this;void 0===a&&(a=!1),this.forcePOTTextures=!1,this.isFullscreen=!1,this.cullBackFaces=!0,this.renderEvenInBackground=!0,this.preventCacheWipeBetweenFrames=!1,this.validateShaderPrograms=!1,this.useReverseDepthBuffer=!1,this.disableUniformBuffers=!1,this._uniformBuffers=new Array,this._webGLVersion=1,this._windowIsBackground=!1,this._highPrecisionShadersAllowed=!0,this._badOS=!1,this._badDesktopOS=!1,this._renderingQueueLaunched=!1,this._activeRenderLoops=new Array,this.onContextLostObservable=new i.Observable,this.onContextRestoredObservable=new i.Observable,this._contextWasLost=!1,this._doNotHandleContextLost=!1,this.disableVertexArrayObjects=!1,this._colorWrite=!0,this._colorWriteChanged=!0,this._depthCullingState=new u,this._stencilState=new v,this._alphaState=new s,this._alphaMode=1,this._alphaEquation=0,this._internalTexturesCache=new Array,this._activeChannel=0,this._currentTextureChannel=-1,this._boundTexturesCache={},this._compiledEffects={},this._vertexAttribArraysEnabled=[],this._uintIndicesCurrentlySet=!1,this._currentBoundBuffer=new Array,this._currentFramebuffer=null,this._dummyFramebuffer=null,this._currentBufferPointers=new Array,this._currentInstanceLocations=new Array,this._currentInstanceBuffers=new Array,this._vaoRecordInProgress=!1,this._mustWipeVertexAttributes=!1,this._nextFreeTextureSlots=new Array,this._maxSimultaneousTextures=0,this._activeRequests=new Array,this._transformTextureUrl=null,this.hostInformation={isMobile:!1},this.premultipliedAlpha=!0,this.onBeforeTextureInitObservable=new i.Observable,this._viewportCached={x:0,y:0,z:0,w:0},this._unpackFlipYCached=null,this.enableUnpackFlipYCached=!0,this._getDepthStencilBuffer=function(t,e,r,n,a,i){var u=o._gl,v=u.createRenderbuffer();return u.bindRenderbuffer(u.RENDERBUFFER,v),r>1&&u.renderbufferStorageMultisample?u.renderbufferStorageMultisample(u.RENDERBUFFER,r,a,t,e):u.renderbufferStorage(u.RENDERBUFFER,n,t,e),u.framebufferRenderbuffer(u.FRAMEBUFFER,i,u.RENDERBUFFER,v),u.bindRenderbuffer(u.RENDERBUFFER,null),v},this._boundUniforms={};var c=null;if(e){if(n=n||{},m.a.SetMatrixPrecision(!!n.useHighPrecisionMatrix),e.getContext){if(c=e,this._renderingCanvas=c,null!=r&&(n.antialias=r),void 0===n.deterministicLockstep&&(n.deterministicLockstep=!1),void 0===n.lockstepMaxSteps&&(n.lockstepMaxSteps=4),void 0===n.timeStep&&(n.timeStep=1/60),void 0===n.preserveDrawingBuffer&&(n.preserveDrawingBuffer=!1),void 0===n.audioEngine&&(n.audioEngine=!0),void 0===n.stencil&&(n.stencil=!0),!1===n.premultipliedAlpha&&(this.premultipliedAlpha=!1),void 0===n.xrCompatible&&(n.xrCompatible=!0),this._doNotHandleContextLost=!!n.doNotHandleContextLost,navigator&&navigator.userAgent){var p=navigator.userAgent;this.hostInformation.isMobile=-1!==p.indexOf("Mobile");for(var b=0,h=t.ExceptionList;b<h.length;b++){var y=h[b],T=y.key,j=y.targets;if(new RegExp(T).test(p)){if(y.capture&&y.captureConstraint){var z=y.capture,w=y.captureConstraint,D=new RegExp(z).exec(p);if(D&&D.length>0&&parseInt(D[D.length-1])>=w)continue}for(var x=0,O=j;x<O.length;x++)switch(O[x]){case"uniformBuffer":this.disableUniformBuffers=!0;break;case"vao":this.disableVertexArrayObjects=!0}}}}if(this._doNotHandleContextLost||(this._onContextLost=function(t){t.preventDefault(),o._contextWasLost=!0,P.a.Warn("WebGL context lost."),o.onContextLostObservable.notifyObservers(o)},this._onContextRestored=function(){setTimeout((function(){o._initGLContext(),o._rebuildEffects(),o._rebuildInternalTextures(),o._rebuildBuffers(),o.wipeCaches(!0),P.a.Warn("WebGL context successfully restored."),o.onContextRestoredObservable.notifyObservers(o),o._contextWasLost=!1}),0)},c.addEventListener("webglcontextlost",this._onContextLost,!1),c.addEventListener("webglcontextrestored",this._onContextRestored,!1),n.powerPreference="high-performance"),!n.disableWebGL2Support)try{this._gl=c.getContext("webgl2",n)||c.getContext("experimental-webgl2",n),this._gl&&(this._webGLVersion=2,this._gl.deleteQuery||(this._webGLVersion=1))}catch(t){}if(!this._gl){if(!c)throw new Error("The provided canvas is null or undefined.");try{this._gl=c.getContext("webgl",n)||c.getContext("experimental-webgl",n)}catch(t){throw new Error("WebGL not supported")}}if(!this._gl)throw new Error("WebGL not supported")}else{this._gl=e,this._renderingCanvas=this._gl.canvas,this._gl.renderbufferStorageMultisample&&(this._webGLVersion=2);var L=this._gl.getContextAttributes();L&&(n.stencil=L.stencil)}this._gl.pixelStorei(this._gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,this._gl.NONE),void 0!==n.useHighPrecisionFloats&&(this._highPrecisionShadersAllowed=n.useHighPrecisionFloats);var S=l.a.IsWindowObjectExist()&&window.devicePixelRatio||1,A=n.limitDeviceRatio||S;this._hardwareScalingLevel=a?1/Math.min(A,S):1,this.resize(),this._isStencilEnable=!!n.stencil,this._initGLContext();for(var k=0;k<this._caps.maxVertexAttribs;k++)this._currentBufferPointers[k]=new g;this.webGLVersion>1?this._shaderProcessor=new d:this._shaderProcessor=new f,this._badOS=/iPad/i.test(navigator.userAgent)||/iPhone/i.test(navigator.userAgent),this._badDesktopOS=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),this._creationOptions=n,console.log("Babylon.js v"+t.Version+" - "+this.description)}}return Object.defineProperty(t,"NpmPackage",{get:function(){return"babylonjs@4.2.0-beta.17"},enumerable:!1,configurable:!0}),Object.defineProperty(t,"Version",{get:function(){return"4.2.0-beta.17"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"description",{get:function(){var t="WebGL"+this.webGLVersion;return this._caps.parallelShaderCompile&&(t+=" - Parallel shader compilation"),t},enumerable:!1,configurable:!0}),Object.defineProperty(t,"ShadersRepository",{get:function(){return a.a.ShadersRepository},set:function(t){a.a.ShadersRepository=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"supportsUniformBuffers",{get:function(){return this.webGLVersion>1&&!this.disableUniformBuffers},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_shouldUseHighPrecisionShader",{get:function(){return!(!this._caps.highPrecisionShaderSupported||!this._highPrecisionShadersAllowed)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"needPOTTextures",{get:function(){return this._webGLVersion<2||this.forcePOTTextures},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"doNotHandleContextLost",{get:function(){return this._doNotHandleContextLost},set:function(t){this._doNotHandleContextLost=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_supportsHardwareTextureRescaling",{get:function(){return!1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"framebufferDimensionsObject",{set:function(t){this._framebufferDimensionsObject=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"currentViewport",{get:function(){return this._cachedViewport},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"emptyTexture",{get:function(){return this._emptyTexture||(this._emptyTexture=this.createRawTexture(new Uint8Array(4),1,1,5,!1,!1,1)),this._emptyTexture},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"emptyTexture3D",{get:function(){return this._emptyTexture3D||(this._emptyTexture3D=this.createRawTexture3D(new Uint8Array(4),1,1,1,5,!1,!1,1)),this._emptyTexture3D},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"emptyTexture2DArray",{get:function(){return this._emptyTexture2DArray||(this._emptyTexture2DArray=this.createRawTexture2DArray(new Uint8Array(4),1,1,1,5,!1,!1,1)),this._emptyTexture2DArray},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"emptyCubeTexture",{get:function(){if(!this._emptyCubeTexture){var t=new Uint8Array(4),e=[t,t,t,t,t,t];this._emptyCubeTexture=this.createRawCubeTexture(e,1,5,0,!1,!1,1)}return this._emptyCubeTexture},enumerable:!1,configurable:!0}),t.prototype._rebuildInternalTextures=function(){for(var t=0,e=this._internalTexturesCache.slice();t<e.length;t++)e[t]._rebuild()},t.prototype._rebuildEffects=function(){for(var t in this._compiledEffects)this._compiledEffects[t]._prepareEffect();a.a.ResetCache()},t.prototype.areAllEffectsReady=function(){for(var t in this._compiledEffects)if(!this._compiledEffects[t].isReady())return!1;return!0},t.prototype._rebuildBuffers=function(){for(var t=0,e=this._uniformBuffers;t<e.length;t++)e[t]._rebuild()},t.prototype._initGLContext=function(){this._caps={maxTexturesImageUnits:this._gl.getParameter(this._gl.MAX_TEXTURE_IMAGE_UNITS),maxCombinedTexturesImageUnits:this._gl.getParameter(this._gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS),maxVertexTextureImageUnits:this._gl.getParameter(this._gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxTextureSize:this._gl.getParameter(this._gl.MAX_TEXTURE_SIZE),maxSamples:this._webGLVersion>1?this._gl.getParameter(this._gl.MAX_SAMPLES):1,maxCubemapTextureSize:this._gl.getParameter(this._gl.MAX_CUBE_MAP_TEXTURE_SIZE),maxRenderTextureSize:this._gl.getParameter(this._gl.MAX_RENDERBUFFER_SIZE),maxVertexAttribs:this._gl.getParameter(this._gl.MAX_VERTEX_ATTRIBS),maxVaryingVectors:this._gl.getParameter(this._gl.MAX_VARYING_VECTORS),maxFragmentUniformVectors:this._gl.getParameter(this._gl.MAX_FRAGMENT_UNIFORM_VECTORS),maxVertexUniformVectors:this._gl.getParameter(this._gl.MAX_VERTEX_UNIFORM_VECTORS),parallelShaderCompile:this._gl.getExtension("KHR_parallel_shader_compile"),standardDerivatives:this._webGLVersion>1||null!==this._gl.getExtension("OES_standard_derivatives"),maxAnisotropy:1,astc:this._gl.getExtension("WEBGL_compressed_texture_astc")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_astc"),bptc:this._gl.getExtension("EXT_texture_compression_bptc")||this._gl.getExtension("WEBKIT_EXT_texture_compression_bptc"),s3tc:this._gl.getExtension("WEBGL_compressed_texture_s3tc")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),pvrtc:this._gl.getExtension("WEBGL_compressed_texture_pvrtc")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"),etc1:this._gl.getExtension("WEBGL_compressed_texture_etc1")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_etc1"),etc2:this._gl.getExtension("WEBGL_compressed_texture_etc")||this._gl.getExtension("WEBKIT_WEBGL_compressed_texture_etc")||this._gl.getExtension("WEBGL_compressed_texture_es3_0"),textureAnisotropicFilterExtension:this._gl.getExtension("EXT_texture_filter_anisotropic")||this._gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")||this._gl.getExtension("MOZ_EXT_texture_filter_anisotropic"),uintIndices:this._webGLVersion>1||null!==this._gl.getExtension("OES_element_index_uint"),fragmentDepthSupported:this._webGLVersion>1||null!==this._gl.getExtension("EXT_frag_depth"),highPrecisionShaderSupported:!1,timerQuery:this._gl.getExtension("EXT_disjoint_timer_query_webgl2")||this._gl.getExtension("EXT_disjoint_timer_query"),canUseTimestampForTimerQuery:!1,drawBuffersExtension:!1,maxMSAASamples:1,colorBufferFloat:this._webGLVersion>1&&this._gl.getExtension("EXT_color_buffer_float"),textureFloat:!!(this._webGLVersion>1||this._gl.getExtension("OES_texture_float")),textureHalfFloat:!!(this._webGLVersion>1||this._gl.getExtension("OES_texture_half_float")),textureHalfFloatRender:!1,textureFloatLinearFiltering:!1,textureFloatRender:!1,textureHalfFloatLinearFiltering:!1,vertexArrayObject:!1,instancedArrays:!1,textureLOD:!!(this._webGLVersion>1||this._gl.getExtension("EXT_shader_texture_lod")),blendMinMax:!1,multiview:this._gl.getExtension("OVR_multiview2"),oculusMultiview:this._gl.getExtension("OCULUS_multiview"),depthTextureExtension:!1},this._glVersion=this._gl.getParameter(this._gl.VERSION);var t=this._gl.getExtension("WEBGL_debug_renderer_info");if(null!=t&&(this._glRenderer=this._gl.getParameter(t.UNMASKED_RENDERER_WEBGL),this._glVendor=this._gl.getParameter(t.UNMASKED_VENDOR_WEBGL)),this._glVendor||(this._glVendor="Unknown vendor"),this._glRenderer||(this._glRenderer="Unknown renderer"),36193!==this._gl.HALF_FLOAT_OES&&(this._gl.HALF_FLOAT_OES=36193),34842!==this._gl.RGBA16F&&(this._gl.RGBA16F=34842),34836!==this._gl.RGBA32F&&(this._gl.RGBA32F=34836),35056!==this._gl.DEPTH24_STENCIL8&&(this._gl.DEPTH24_STENCIL8=35056),this._caps.timerQuery&&(1===this._webGLVersion&&(this._gl.getQuery=this._caps.timerQuery.getQueryEXT.bind(this._caps.timerQuery)),this._caps.canUseTimestampForTimerQuery=this._gl.getQuery(this._caps.timerQuery.TIMESTAMP_EXT,this._caps.timerQuery.QUERY_COUNTER_BITS_EXT)>0),this._caps.maxAnisotropy=this._caps.textureAnisotropicFilterExtension?this._gl.getParameter(this._caps.textureAnisotropicFilterExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,this._caps.textureFloatLinearFiltering=!(!this._caps.textureFloat||!this._gl.getExtension("OES_texture_float_linear")),this._caps.textureFloatRender=!(!this._caps.textureFloat||!this._canRenderToFloatFramebuffer()),this._caps.textureHalfFloatLinearFiltering=!!(this._webGLVersion>1||this._caps.textureHalfFloat&&this._gl.getExtension("OES_texture_half_float_linear")),this._webGLVersion>1&&5131!==this._gl.HALF_FLOAT_OES&&(this._gl.HALF_FLOAT_OES=5131),this._caps.textureHalfFloatRender=this._caps.textureHalfFloat&&this._canRenderToHalfFloatFramebuffer(),this._webGLVersion>1)this._caps.drawBuffersExtension=!0,this._caps.maxMSAASamples=this._gl.getParameter(this._gl.MAX_SAMPLES);else{var e=this._gl.getExtension("WEBGL_draw_buffers");if(null!==e){this._caps.drawBuffersExtension=!0,this._gl.drawBuffers=e.drawBuffersWEBGL.bind(e),this._gl.DRAW_FRAMEBUFFER=this._gl.FRAMEBUFFER;for(var r=0;r<16;r++)this._gl["COLOR_ATTACHMENT"+r+"_WEBGL"]=e["COLOR_ATTACHMENT"+r+"_WEBGL"]}}if(this._webGLVersion>1)this._caps.depthTextureExtension=!0;else{var n=this._gl.getExtension("WEBGL_depth_texture");null!=n&&(this._caps.depthTextureExtension=!0,this._gl.UNSIGNED_INT_24_8=n.UNSIGNED_INT_24_8_WEBGL)}if(this.disableVertexArrayObjects)this._caps.vertexArrayObject=!1;else if(this._webGLVersion>1)this._caps.vertexArrayObject=!0;else{var a=this._gl.getExtension("OES_vertex_array_object");null!=a&&(this._caps.vertexArrayObject=!0,this._gl.createVertexArray=a.createVertexArrayOES.bind(a),this._gl.bindVertexArray=a.bindVertexArrayOES.bind(a),this._gl.deleteVertexArray=a.deleteVertexArrayOES.bind(a))}if(this._webGLVersion>1)this._caps.instancedArrays=!0;else{var o=this._gl.getExtension("ANGLE_instanced_arrays");null!=o?(this._caps.instancedArrays=!0,this._gl.drawArraysInstanced=o.drawArraysInstancedANGLE.bind(o),this._gl.drawElementsInstanced=o.drawElementsInstancedANGLE.bind(o),this._gl.vertexAttribDivisor=o.vertexAttribDivisorANGLE.bind(o)):this._caps.instancedArrays=!1}if(this._gl.getShaderPrecisionFormat){var i=this._gl.getShaderPrecisionFormat(this._gl.VERTEX_SHADER,this._gl.HIGH_FLOAT),u=this._gl.getShaderPrecisionFormat(this._gl.FRAGMENT_SHADER,this._gl.HIGH_FLOAT);i&&u&&(this._caps.highPrecisionShaderSupported=0!==i.precision&&0!==u.precision)}if(this._webGLVersion>1)this._caps.blendMinMax=!0;else{var v=this._gl.getExtension("EXT_blend_minmax");null!=v&&(this._caps.blendMinMax=!0,this._gl.MAX=v.MAX_EXT,this._gl.MIN=v.MIN_EXT)}this._depthCullingState.depthTest=!0,this._depthCullingState.depthFunc=this._gl.LEQUAL,this._depthCullingState.depthMask=!0,this._maxSimultaneousTextures=this._caps.maxCombinedTexturesImageUnits;for(var s=0;s<this._maxSimultaneousTextures;s++)this._nextFreeTextureSlots.push(s)},Object.defineProperty(t.prototype,"webGLVersion",{get:function(){return this._webGLVersion},enumerable:!1,configurable:!0}),t.prototype.getClassName=function(){return"ThinEngine"},Object.defineProperty(t.prototype,"isStencilEnable",{get:function(){return this._isStencilEnable},enumerable:!1,configurable:!0}),t.prototype._prepareWorkingCanvas=function(){if(!this._workingCanvas){this._workingCanvas=y.a.CreateCanvas(1,1);var t=this._workingCanvas.getContext("2d");t&&(this._workingContext=t)}},t.prototype.resetTextureCache=function(){for(var t in this._boundTexturesCache)this._boundTexturesCache.hasOwnProperty(t)&&(this._boundTexturesCache[t]=null);this._currentTextureChannel=-1},t.prototype.getGlInfo=function(){return{vendor:this._glVendor,renderer:this._glRenderer,version:this._glVersion}},t.prototype.setHardwareScalingLevel=function(t){this._hardwareScalingLevel=t,this.resize()},t.prototype.getHardwareScalingLevel=function(){return this._hardwareScalingLevel},t.prototype.getLoadedTexturesCache=function(){return this._internalTexturesCache},t.prototype.getCaps=function(){return this._caps},t.prototype.stopRenderLoop=function(t){if(t){var e=this._activeRenderLoops.indexOf(t);e>=0&&this._activeRenderLoops.splice(e,1)}else this._activeRenderLoops=[]},t.prototype._renderLoop=function(){if(!this._contextWasLost){var t=!0;if(!this.renderEvenInBackground&&this._windowIsBackground&&(t=!1),t){this.beginFrame();for(var e=0;e<this._activeRenderLoops.length;e++)(0,this._activeRenderLoops[e])();this.endFrame()}}this._activeRenderLoops.length>0?this._frameHandler=this._queueNewFrame(this._boundRenderFunction,this.getHostWindow()):this._renderingQueueLaunched=!1},t.prototype.getRenderingCanvas=function(){return this._renderingCanvas},t.prototype.getHostWindow=function(){return l.a.IsWindowObjectExist()?this._renderingCanvas&&this._renderingCanvas.ownerDocument&&this._renderingCanvas.ownerDocument.defaultView?this._renderingCanvas.ownerDocument.defaultView:window:null},t.prototype.getRenderWidth=function(t){return void 0===t&&(t=!1),!t&&this._currentRenderTarget?this._currentRenderTarget.width:this._framebufferDimensionsObject?this._framebufferDimensionsObject.framebufferWidth:this._gl.drawingBufferWidth},t.prototype.getRenderHeight=function(t){return void 0===t&&(t=!1),!t&&this._currentRenderTarget?this._currentRenderTarget.height:this._framebufferDimensionsObject?this._framebufferDimensionsObject.framebufferHeight:this._gl.drawingBufferHeight},t.prototype._queueNewFrame=function(e,r){return t.QueueNewFrame(e,r)},t.prototype.runRenderLoop=function(t){-1===this._activeRenderLoops.indexOf(t)&&(this._activeRenderLoops.push(t),this._renderingQueueLaunched||(this._renderingQueueLaunched=!0,this._boundRenderFunction=this._renderLoop.bind(this),this._frameHandler=this._queueNewFrame(this._boundRenderFunction,this.getHostWindow())))},t.prototype.clear=function(t,e,r,n){void 0===n&&(n=!1),this.applyStates();var a=0;e&&t&&(this._gl.clearColor(t.r,t.g,t.b,void 0!==t.a?t.a:1),a|=this._gl.COLOR_BUFFER_BIT),r&&(this.useReverseDepthBuffer?(this._depthCullingState.depthFunc=this._gl.GREATER,this._gl.clearDepth(0)):this._gl.clearDepth(1),a|=this._gl.DEPTH_BUFFER_BIT),n&&(this._gl.clearStencil(0),a|=this._gl.STENCIL_BUFFER_BIT),this._gl.clear(a)},t.prototype._viewport=function(t,e,r,n){t===this._viewportCached.x&&e===this._viewportCached.y&&r===this._viewportCached.z&&n===this._viewportCached.w||(this._viewportCached.x=t,this._viewportCached.y=e,this._viewportCached.z=r,this._viewportCached.w=n,this._gl.viewport(t,e,r,n))},t.prototype.setViewport=function(t,e,r){var n=e||this.getRenderWidth(),a=r||this.getRenderHeight(),o=t.x||0,i=t.y||0;this._cachedViewport=t,this._viewport(o*n,i*a,n*t.width,a*t.height)},t.prototype.beginFrame=function(){},t.prototype.endFrame=function(){this._badOS&&this.flushFramebuffer()},t.prototype.resize=function(){var t,e;l.a.IsWindowObjectExist()?(t=this._renderingCanvas?this._renderingCanvas.clientWidth||this._renderingCanvas.width:window.innerWidth,e=this._renderingCanvas?this._renderingCanvas.clientHeight||this._renderingCanvas.height:window.innerHeight):(t=this._renderingCanvas?this._renderingCanvas.width:100,e=this._renderingCanvas?this._renderingCanvas.height:100),this.setSize(t/this._hardwareScalingLevel,e/this._hardwareScalingLevel)},t.prototype.setSize=function(t,e){return!(!this._renderingCanvas||(t|=0,e|=0,this._renderingCanvas.width===t&&this._renderingCanvas.height===e||(this._renderingCanvas.width=t,this._renderingCanvas.height=e,0)))},t.prototype.bindFramebuffer=function(t,e,r,n,a,o,i){void 0===e&&(e=0),void 0===o&&(o=0),void 0===i&&(i=0),this._currentRenderTarget&&this.unBindFramebuffer(this._currentRenderTarget),this._currentRenderTarget=t,this._bindUnboundFramebuffer(t._MSAAFramebuffer?t._MSAAFramebuffer:t._framebuffer);var u=this._gl;t.is2DArray?u.framebufferTextureLayer(u.FRAMEBUFFER,u.COLOR_ATTACHMENT0,t._webGLTexture,o,i):t.isCube&&u.framebufferTexture2D(u.FRAMEBUFFER,u.COLOR_ATTACHMENT0,u.TEXTURE_CUBE_MAP_POSITIVE_X+e,t._webGLTexture,o);var v=t._depthStencilTexture;if(v){var s=v._generateStencilBuffer?u.DEPTH_STENCIL_ATTACHMENT:u.DEPTH_ATTACHMENT;t.is2DArray?u.framebufferTextureLayer(u.FRAMEBUFFER,s,v._webGLTexture,o,i):t.isCube?u.framebufferTexture2D(u.FRAMEBUFFER,s,u.TEXTURE_CUBE_MAP_POSITIVE_X+e,v._webGLTexture,o):u.framebufferTexture2D(u.FRAMEBUFFER,s,u.TEXTURE_2D,v._webGLTexture,o)}this._cachedViewport&&!a?this.setViewport(this._cachedViewport,r,n):(r||(r=t.width,o&&(r/=Math.pow(2,o))),n||(n=t.height,o&&(n/=Math.pow(2,o))),this._viewport(0,0,r,n)),this.wipeCaches()},t.prototype._bindUnboundFramebuffer=function(t){this._currentFramebuffer!==t&&(this._gl.bindFramebuffer(this._gl.FRAMEBUFFER,t),this._currentFramebuffer=t)},t.prototype.unBindFramebuffer=function(t,e,r){void 0===e&&(e=!1),this._currentRenderTarget=null;var n=this._gl;if(t._MSAAFramebuffer){if(t._textureArray)return void this.unBindMultiColorAttachmentFramebuffer(t._textureArray,e,r);n.bindFramebuffer(n.READ_FRAMEBUFFER,t._MSAAFramebuffer),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,t._framebuffer),n.blitFramebuffer(0,0,t.width,t.height,0,0,t.width,t.height,n.COLOR_BUFFER_BIT,n.NEAREST)}!t.generateMipMaps||e||t.isCube||(this._bindTextureDirectly(n.TEXTURE_2D,t,!0),n.generateMipmap(n.TEXTURE_2D),this._bindTextureDirectly(n.TEXTURE_2D,null)),r&&(t._MSAAFramebuffer&&this._bindUnboundFramebuffer(t._framebuffer),r()),this._bindUnboundFramebuffer(null)},t.prototype.flushFramebuffer=function(){this._gl.flush()},t.prototype.restoreDefaultFramebuffer=function(){this._currentRenderTarget?this.unBindFramebuffer(this._currentRenderTarget):this._bindUnboundFramebuffer(null),this._cachedViewport&&this.setViewport(this._cachedViewport),this.wipeCaches()},t.prototype._resetVertexBufferBinding=function(){this.bindArrayBuffer(null),this._cachedVertexBuffers=null},t.prototype.createVertexBuffer=function(t){return this._createVertexBuffer(t,this._gl.STATIC_DRAW)},t.prototype._createVertexBuffer=function(t,e){var r=this._gl.createBuffer();if(!r)throw new Error("Unable to create vertex buffer");var n=new b(r);return this.bindArrayBuffer(n),t instanceof Array?this._gl.bufferData(this._gl.ARRAY_BUFFER,new Float32Array(t),this._gl.STATIC_DRAW):this._gl.bufferData(this._gl.ARRAY_BUFFER,t,this._gl.STATIC_DRAW),this._resetVertexBufferBinding(),n.references=1,n},t.prototype.createDynamicVertexBuffer=function(t){return this._createVertexBuffer(t,this._gl.DYNAMIC_DRAW)},t.prototype._resetIndexBufferBinding=function(){this.bindIndexBuffer(null),this._cachedIndexBuffer=null},t.prototype.createIndexBuffer=function(t,e){var r=this._gl.createBuffer(),n=new b(r);if(!r)throw new Error("Unable to create index buffer");this.bindIndexBuffer(n);var a=this._normalizeIndexData(t);return this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER,a,e?this._gl.DYNAMIC_DRAW:this._gl.STATIC_DRAW),this._resetIndexBufferBinding(),n.references=1,n.is32Bits=4===a.BYTES_PER_ELEMENT,n},t.prototype._normalizeIndexData=function(t){if(t instanceof Uint16Array)return t;if(this._caps.uintIndices){if(t instanceof Uint32Array)return t;for(var e=0;e<t.length;e++)if(t[e]>=65535)return new Uint32Array(t);return new Uint16Array(t)}return new Uint16Array(t)},t.prototype.bindArrayBuffer=function(t){this._vaoRecordInProgress||this._unbindVertexArrayObject(),this.bindBuffer(t,this._gl.ARRAY_BUFFER)},t.prototype.bindUniformBlock=function(t,e,r){var n=t.program,a=this._gl.getUniformBlockIndex(n,e);this._gl.uniformBlockBinding(n,a,r)},t.prototype.bindIndexBuffer=function(t){this._vaoRecordInProgress||this._unbindVertexArrayObject(),this.bindBuffer(t,this._gl.ELEMENT_ARRAY_BUFFER)},t.prototype.bindBuffer=function(t,e){(this._vaoRecordInProgress||this._currentBoundBuffer[e]!==t)&&(this._gl.bindBuffer(e,t?t.underlyingResource:null),this._currentBoundBuffer[e]=t)},t.prototype.updateArrayBuffer=function(t){this._gl.bufferSubData(this._gl.ARRAY_BUFFER,0,t)},t.prototype._vertexAttribPointer=function(t,e,r,n,a,o,i){var u=this._currentBufferPointers[e];if(u){var v=!1;u.active?(u.buffer!==t&&(u.buffer=t,v=!0),u.size!==r&&(u.size=r,v=!0),u.type!==n&&(u.type=n,v=!0),u.normalized!==a&&(u.normalized=a,v=!0),u.stride!==o&&(u.stride=o,v=!0),u.offset!==i&&(u.offset=i,v=!0)):(v=!0,u.active=!0,u.index=e,u.size=r,u.type=n,u.normalized=a,u.stride=o,u.offset=i,u.buffer=t),(v||this._vaoRecordInProgress)&&(this.bindArrayBuffer(t),this._gl.vertexAttribPointer(e,r,n,a,o,i))}},t.prototype._bindIndexBufferWithCache=function(t){null!=t&&this._cachedIndexBuffer!==t&&(this._cachedIndexBuffer=t,this.bindIndexBuffer(t),this._uintIndicesCurrentlySet=t.is32Bits)},t.prototype._bindVertexBuffersAttributes=function(t,e){var r=e.getAttributesNames();this._vaoRecordInProgress||this._unbindVertexArrayObject(),this.unbindAllAttributes();for(var n=0;n<r.length;n++){var a=e.getAttributeLocation(n);if(a>=0){var o=t[r[n]];if(!o)continue;this._gl.enableVertexAttribArray(a),this._vaoRecordInProgress||(this._vertexAttribArraysEnabled[a]=!0);var i=o.getBuffer();i&&(this._vertexAttribPointer(i,a,o.getSize(),o.type,o.normalized,o.byteStride,o.byteOffset),o.getIsInstanced()&&(this._gl.vertexAttribDivisor(a,o.getInstanceDivisor()),this._vaoRecordInProgress||(this._currentInstanceLocations.push(a),this._currentInstanceBuffers.push(i))))}}},t.prototype.recordVertexArrayObject=function(t,e,r){var n=this._gl.createVertexArray();return this._vaoRecordInProgress=!0,this._gl.bindVertexArray(n),this._mustWipeVertexAttributes=!0,this._bindVertexBuffersAttributes(t,r),this.bindIndexBuffer(e),this._vaoRecordInProgress=!1,this._gl.bindVertexArray(null),n},t.prototype.bindVertexArrayObject=function(t,e){this._cachedVertexArrayObject!==t&&(this._cachedVertexArrayObject=t,this._gl.bindVertexArray(t),this._cachedVertexBuffers=null,this._cachedIndexBuffer=null,this._uintIndicesCurrentlySet=null!=e&&e.is32Bits,this._mustWipeVertexAttributes=!0)},t.prototype.bindBuffersDirectly=function(t,e,r,n,a){if(this._cachedVertexBuffers!==t||this._cachedEffectForVertexBuffers!==a){this._cachedVertexBuffers=t,this._cachedEffectForVertexBuffers=a;var o=a.getAttributesCount();this._unbindVertexArrayObject(),this.unbindAllAttributes();for(var i=0,u=0;u<o;u++)if(u<r.length){var v=a.getAttributeLocation(u);v>=0&&(this._gl.enableVertexAttribArray(v),this._vertexAttribArraysEnabled[v]=!0,this._vertexAttribPointer(t,v,r[u],this._gl.FLOAT,!1,n,i)),i+=4*r[u]}}this._bindIndexBufferWithCache(e)},t.prototype._unbindVertexArrayObject=function(){this._cachedVertexArrayObject&&(this._cachedVertexArrayObject=null,this._gl.bindVertexArray(null))},t.prototype.bindBuffers=function(t,e,r){this._cachedVertexBuffers===t&&this._cachedEffectForVertexBuffers===r||(this._cachedVertexBuffers=t,this._cachedEffectForVertexBuffers=r,this._bindVertexBuffersAttributes(t,r)),this._bindIndexBufferWithCache(e)},t.prototype.unbindInstanceAttributes=function(){for(var t,e=0,r=this._currentInstanceLocations.length;e<r;e++){var n=this._currentInstanceBuffers[e];t!=n&&n.references&&(t=n,this.bindArrayBuffer(n));var a=this._currentInstanceLocations[e];this._gl.vertexAttribDivisor(a,0)}this._currentInstanceBuffers.length=0,this._currentInstanceLocations.length=0},t.prototype.releaseVertexArrayObject=function(t){this._gl.deleteVertexArray(t)},t.prototype._releaseBuffer=function(t){return t.references--,0===t.references&&(this._deleteBuffer(t),!0)},t.prototype._deleteBuffer=function(t){this._gl.deleteBuffer(t.underlyingResource)},t.prototype.updateAndBindInstancesBuffer=function(t,e,r){if(this.bindArrayBuffer(t),e&&this._gl.bufferSubData(this._gl.ARRAY_BUFFER,0,e),void 0!==r[0].index)this.bindInstancesBuffer(t,r,!0);else for(var n=0;n<4;n++){var a=r[n];this._vertexAttribArraysEnabled[a]||(this._gl.enableVertexAttribArray(a),this._vertexAttribArraysEnabled[a]=!0),this._vertexAttribPointer(t,a,4,this._gl.FLOAT,!1,64,16*n),this._gl.vertexAttribDivisor(a,1),this._currentInstanceLocations.push(a),this._currentInstanceBuffers.push(t)}},t.prototype.bindInstancesBuffer=function(t,e,r){void 0===r&&(r=!0),this.bindArrayBuffer(t);var n=0;if(r)for(var a=0;a<e.length;a++)n+=4*(o=e[a]).attributeSize;for(a=0;a<e.length;a++){var o;void 0===(o=e[a]).index&&(o.index=this._currentEffect.getAttributeLocationByName(o.attributeName)),o.index<0||(this._vertexAttribArraysEnabled[o.index]||(this._gl.enableVertexAttribArray(o.index),this._vertexAttribArraysEnabled[o.index]=!0),this._vertexAttribPointer(t,o.index,o.attributeSize,o.attributeType||this._gl.FLOAT,o.normalized||!1,n,o.offset),this._gl.vertexAttribDivisor(o.index,void 0===o.divisor?1:o.divisor),this._currentInstanceLocations.push(o.index),this._currentInstanceBuffers.push(t))}},t.prototype.disableInstanceAttributeByName=function(t){if(this._currentEffect){var e=this._currentEffect.getAttributeLocationByName(t);this.disableInstanceAttribute(e)}},t.prototype.disableInstanceAttribute=function(t){for(var e,r=!1;-1!==(e=this._currentInstanceLocations.indexOf(t));)this._currentInstanceLocations.splice(e,1),this._currentInstanceBuffers.splice(e,1),r=!0,e=this._currentInstanceLocations.indexOf(t);r&&(this._gl.vertexAttribDivisor(t,0),this.disableAttributeByIndex(t))},t.prototype.disableAttributeByIndex=function(t){this._gl.disableVertexAttribArray(t),this._vertexAttribArraysEnabled[t]=!1,this._currentBufferPointers[t].active=!1},t.prototype.draw=function(t,e,r,n){this.drawElementsType(t?0:1,e,r,n)},t.prototype.drawPointClouds=function(t,e,r){this.drawArraysType(2,t,e,r)},t.prototype.drawUnIndexed=function(t,e,r,n){this.drawArraysType(t?0:1,e,r,n)},t.prototype.drawElementsType=function(t,e,r,n){this.applyStates(),this._reportDrawCall();var a=this._drawMode(t),o=this._uintIndicesCurrentlySet?this._gl.UNSIGNED_INT:this._gl.UNSIGNED_SHORT,i=this._uintIndicesCurrentlySet?4:2;n?this._gl.drawElementsInstanced(a,r,o,e*i,n):this._gl.drawElements(a,r,o,e*i)},t.prototype.drawArraysType=function(t,e,r,n){this.applyStates(),this._reportDrawCall();var a=this._drawMode(t);n?this._gl.drawArraysInstanced(a,e,r,n):this._gl.drawArrays(a,e,r)},t.prototype._drawMode=function(t){switch(t){case 0:return this._gl.TRIANGLES;case 2:return this._gl.POINTS;case 1:return this._gl.LINES;case 3:return this._gl.POINTS;case 4:return this._gl.LINES;case 5:return this._gl.LINE_LOOP;case 6:return this._gl.LINE_STRIP;case 7:return this._gl.TRIANGLE_STRIP;case 8:return this._gl.TRIANGLE_FAN;default:return this._gl.TRIANGLES}},t.prototype._reportDrawCall=function(){},t.prototype._releaseEffect=function(t){this._compiledEffects[t._key]&&(delete this._compiledEffects[t._key],this._deletePipelineContext(t.getPipelineContext()))},t.prototype._deletePipelineContext=function(t){var e=t;e&&e.program&&(e.program.__SPECTOR_rebuildProgram=null,this._gl.deleteProgram(e.program))},t.prototype.createEffect=function(t,e,r,n,o,i,u,v,s){var c=(t.vertexElement||t.vertex||t.vertexToken||t.vertexSource||t)+"+"+(t.fragmentElement||t.fragment||t.fragmentToken||t.fragmentSource||t)+"@"+(o||e.defines);if(this._compiledEffects[c]){var P=this._compiledEffects[c];return u&&P.isReady()&&u(P),P}var l=new a.a(t,e,r,n,this,o,i,u,v,s);return l._key=c,this._compiledEffects[c]=l,l},t._ConcatenateShader=function(t,e,r){return void 0===r&&(r=""),r+(e?e+"\n":"")+t},t.prototype._compileShader=function(e,r,n,a){return this._compileRawShader(t._ConcatenateShader(e,n,a),r)},t.prototype._compileRawShader=function(t,e){var r=this._gl,n=r.createShader("vertex"===e?r.VERTEX_SHADER:r.FRAGMENT_SHADER);if(!n)throw new Error("Something went wrong while compile the shader.");return r.shaderSource(n,t),r.compileShader(n),n},t.prototype._getShaderSource=function(t){return this._gl.getShaderSource(t)},t.prototype.createRawShaderProgram=function(t,e,r,n,a){void 0===a&&(a=null),n=n||this._gl;var o=this._compileRawShader(e,"vertex"),i=this._compileRawShader(r,"fragment");return this._createShaderProgram(t,o,i,n,a)},t.prototype.createShaderProgram=function(t,e,r,n,a,o){void 0===o&&(o=null),a=a||this._gl;var i=this._webGLVersion>1?"#version 300 es\n#define WEBGL2 \n":"",u=this._compileShader(e,"vertex",n,i),v=this._compileShader(r,"fragment",n,i);return this._createShaderProgram(t,u,v,a,o)},t.prototype.createPipelineContext=function(){var t=new h;return t.engine=this,this._caps.parallelShaderCompile&&(t.isParallelCompiled=!0),t},t.prototype._createShaderProgram=function(t,e,r,n,a){void 0===a&&(a=null);var o=n.createProgram();if(t.program=o,!o)throw new Error("Unable to create program");return n.attachShader(o,e),n.attachShader(o,r),n.linkProgram(o),t.context=n,t.vertexShader=e,t.fragmentShader=r,t.isParallelCompiled||this._finalizePipelineContext(t),o},t.prototype._finalizePipelineContext=function(t){var e=t.context,r=t.vertexShader,n=t.fragmentShader,a=t.program;if(!e.getProgramParameter(a,e.LINK_STATUS)){var o,i;if(!this._gl.getShaderParameter(r,this._gl.COMPILE_STATUS)&&(o=this._gl.getShaderInfoLog(r)))throw t.vertexCompilationError=o,new Error("VERTEX SHADER "+o);if(!this._gl.getShaderParameter(n,this._gl.COMPILE_STATUS)&&(o=this._gl.getShaderInfoLog(n)))throw t.fragmentCompilationError=o,new Error("FRAGMENT SHADER "+o);if(i=e.getProgramInfoLog(a))throw t.programLinkError=i,new Error(i)}if(this.validateShaderPrograms&&(e.validateProgram(a),!e.getProgramParameter(a,e.VALIDATE_STATUS)&&(i=e.getProgramInfoLog(a))))throw t.programValidationError=i,new Error(i);e.deleteShader(r),e.deleteShader(n),t.vertexShader=void 0,t.fragmentShader=void 0,t.onCompiled&&(t.onCompiled(),t.onCompiled=void 0)},t.prototype._preparePipelineContext=function(t,e,r,n,a,o,i){var u=t;u.program=n?this.createRawShaderProgram(u,e,r,void 0,i):this.createShaderProgram(u,e,r,o,void 0,i),u.program.__SPECTOR_rebuildProgram=a},t.prototype._isRenderingStateCompiled=function(t){var e=t;return!!this._gl.getProgramParameter(e.program,this._caps.parallelShaderCompile.COMPLETION_STATUS_KHR)&&(this._finalizePipelineContext(e),!0)},t.prototype._executeWhenRenderingStateIsCompiled=function(t,e){var r=t;if(r.isParallelCompiled){var n=r.onCompiled;r.onCompiled=n?function(){n(),e()}:e}else e()},t.prototype.getUniforms=function(t,e){for(var r=new Array,n=t,a=0;a<e.length;a++)r.push(this._gl.getUniformLocation(n.program,e[a]));return r},t.prototype.getAttributes=function(t,e){for(var r=[],n=t,a=0;a<e.length;a++)try{r.push(this._gl.getAttribLocation(n.program,e[a]))}catch(t){r.push(-1)}return r},t.prototype.enableEffect=function(t){t&&t!==this._currentEffect&&(this.bindSamplers(t),this._currentEffect=t,t.onBind&&t.onBind(t),t._onBindObservable&&t._onBindObservable.notifyObservers(t))},t.prototype.setInt=function(t,e){return!!t&&(this._gl.uniform1i(t,e),!0)},t.prototype.setIntArray=function(t,e){return!!t&&(this._gl.uniform1iv(t,e),!0)},t.prototype.setIntArray2=function(t,e){return!(!t||e.length%2!=0||(this._gl.uniform2iv(t,e),0))},t.prototype.setIntArray3=function(t,e){return!(!t||e.length%3!=0||(this._gl.uniform3iv(t,e),0))},t.prototype.setIntArray4=function(t,e){return!(!t||e.length%4!=0||(this._gl.uniform4iv(t,e),0))},t.prototype.setArray=function(t,e){return!!t&&(this._gl.uniform1fv(t,e),!0)},t.prototype.setArray2=function(t,e){return!(!t||e.length%2!=0||(this._gl.uniform2fv(t,e),0))},t.prototype.setArray3=function(t,e){return!(!t||e.length%3!=0||(this._gl.uniform3fv(t,e),0))},t.prototype.setArray4=function(t,e){return!(!t||e.length%4!=0||(this._gl.uniform4fv(t,e),0))},t.prototype.setMatrices=function(t,e){return!!t&&(this._gl.uniformMatrix4fv(t,!1,e),!0)},t.prototype.setMatrix3x3=function(t,e){return!!t&&(this._gl.uniformMatrix3fv(t,!1,e),!0)},t.prototype.setMatrix2x2=function(t,e){return!!t&&(this._gl.uniformMatrix2fv(t,!1,e),!0)},t.prototype.setFloat=function(t,e){return!!t&&(this._gl.uniform1f(t,e),!0)},t.prototype.setFloat2=function(t,e,r){return!!t&&(this._gl.uniform2f(t,e,r),!0)},t.prototype.setFloat3=function(t,e,r,n){return!!t&&(this._gl.uniform3f(t,e,r,n),!0)},t.prototype.setFloat4=function(t,e,r,n,a){return!!t&&(this._gl.uniform4f(t,e,r,n,a),!0)},t.prototype.applyStates=function(){if(this._depthCullingState.apply(this._gl),this._stencilState.apply(this._gl),this._alphaState.apply(this._gl),this._colorWriteChanged){this._colorWriteChanged=!1;var t=this._colorWrite;this._gl.colorMask(t,t,t,t)}},t.prototype.setColorWrite=function(t){t!==this._colorWrite&&(this._colorWriteChanged=!0,this._colorWrite=t)},t.prototype.getColorWrite=function(){return this._colorWrite},Object.defineProperty(t.prototype,"depthCullingState",{get:function(){return this._depthCullingState},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"alphaState",{get:function(){return this._alphaState},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stencilState",{get:function(){return this._stencilState},enumerable:!1,configurable:!0}),t.prototype.clearInternalTexturesCache=function(){this._internalTexturesCache=[]},t.prototype.wipeCaches=function(t){this.preventCacheWipeBetweenFrames&&!t||(this._currentEffect=null,this._viewportCached.x=0,this._viewportCached.y=0,this._viewportCached.z=0,this._viewportCached.w=0,this._unbindVertexArrayObject(),t&&(this._currentProgram=null,this.resetTextureCache(),this._stencilState.reset(),this._depthCullingState.reset(),this._depthCullingState.depthFunc=this._gl.LEQUAL,this._alphaState.reset(),this._alphaMode=1,this._alphaEquation=0,this._colorWrite=!0,this._colorWriteChanged=!0,this._unpackFlipYCached=null,this._gl.pixelStorei(this._gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,this._gl.NONE),this._gl.pixelStorei(this._gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,0),this._mustWipeVertexAttributes=!0,this.unbindAllAttributes()),this._resetVertexBufferBinding(),this._cachedIndexBuffer=null,this._cachedEffectForVertexBuffers=null,this.bindIndexBuffer(null))},t.prototype._getSamplingParameters=function(t,e){var r=this._gl,n=r.NEAREST,a=r.NEAREST;switch(t){case 11:n=r.LINEAR,a=e?r.LINEAR_MIPMAP_NEAREST:r.LINEAR;break;case 3:n=r.LINEAR,a=e?r.LINEAR_MIPMAP_LINEAR:r.LINEAR;break;case 8:n=r.NEAREST,a=e?r.NEAREST_MIPMAP_LINEAR:r.NEAREST;break;case 4:n=r.NEAREST,a=e?r.NEAREST_MIPMAP_NEAREST:r.NEAREST;break;case 5:n=r.NEAREST,a=e?r.LINEAR_MIPMAP_NEAREST:r.LINEAR;break;case 6:n=r.NEAREST,a=e?r.LINEAR_MIPMAP_LINEAR:r.LINEAR;break;case 7:n=r.NEAREST,a=r.LINEAR;break;case 1:n=r.NEAREST,a=r.NEAREST;break;case 9:n=r.LINEAR,a=e?r.NEAREST_MIPMAP_NEAREST:r.NEAREST;break;case 10:n=r.LINEAR,a=e?r.NEAREST_MIPMAP_LINEAR:r.NEAREST;break;case 2:n=r.LINEAR,a=r.LINEAR;break;case 12:n=r.LINEAR,a=r.NEAREST}return{min:a,mag:n}},t.prototype._createTexture=function(){var t=this._gl.createTexture();if(!t)throw new Error("Unable to create texture");return t},t.prototype.createTexture=function(e,r,a,o,i,u,v,s,l,f,d,p,b){var h=this;void 0===i&&(i=3),void 0===u&&(u=null),void 0===v&&(v=null),void 0===s&&(s=null),void 0===l&&(l=null),void 0===f&&(f=null),void 0===d&&(d=null);var y="data:"===(e=e||"").substr(0,5),m="blob:"===e.substr(0,5),g=y&&-1!==e.indexOf(";base64,"),T=l||new c.InternalTexture(this,c.InternalTextureSource.Url),j=e;!this._transformTextureUrl||g||l||s||(e=this._transformTextureUrl(e)),j!==e&&(T._originalUrl=j);var z=e.lastIndexOf("."),w=d||(z>-1?e.substring(z).toLowerCase():""),D=null;w.indexOf("?")>-1&&(w=w.split("?")[0]);for(var x=0,O=t._TextureLoaders;x<O.length;x++){var L=O[x];if(L.canLoad(w,p)){D=L;break}}o&&o._addPendingData(T),T.url=e,T.generateMipMaps=!r,T.samplingMode=i,T.invertY=a,this._doNotHandleContextLost||(T._buffer=s);var S=null;u&&!l&&(S=T.onLoadedObservable.add(u)),l||this._internalTexturesCache.push(T);var A=function(t,a){o&&o._removePendingData(T),e===j?(S&&T.onLoadedObservable.remove(S),n.UseFallbackTexture&&h.createTexture(n.FallbackTexture,r,T.invertY,o,i,null,v,s,T),v&&v((t||"Unknown error")+(n.UseFallbackTexture?" - Fallback texture was used":""),a)):(P.a.Warn("Failed to load "+e+", falling back to "+j),h.createTexture(j,r,T.invertY,o,i,u,v,s,T,f,d,p,b))};if(D){var k=function(t){D.loadData(t,T,(function(t,e,r,n,a,u){u?A("TextureLoader failed to load data"):h._prepareWebGLTexture(T,o,t,e,T.invertY,!r,n,(function(){return a(),!1}),i)}),b)};s?s instanceof ArrayBuffer?k(new Uint8Array(s)):ArrayBuffer.isView(s)?k(s):v&&v("Unable to load: only ArrayBuffer or ArrayBufferView is supported",null):this._loadFile(e,(function(t){return k(new Uint8Array(t))}),void 0,o?o.offlineProvider:void 0,!0,(function(t,e){A("Unable to load "+(t&&t.responseURL,e))}))}else{var C=function(t){m&&!h._doNotHandleContextLost&&(T._buffer=t),h._prepareWebGLTexture(T,o,t.width,t.height,T.invertY,r,!1,(function(e,r,n){var a=h._gl,i=t.width===e&&t.height===r,u=f?h._getInternalFormat(f):".jpg"===w?a.RGB:a.RGBA;if(i)return a.texImage2D(a.TEXTURE_2D,0,u,u,a.UNSIGNED_BYTE,t),!1;var v=h._caps.maxTextureSize;if(t.width>v||t.height>v||!h._supportsHardwareTextureRescaling)return h._prepareWorkingCanvas(),!(!h._workingCanvas||!h._workingContext||(h._workingCanvas.width=e,h._workingCanvas.height=r,h._workingContext.drawImage(t,0,0,t.width,t.height,0,0,e,r),a.texImage2D(a.TEXTURE_2D,0,u,u,a.UNSIGNED_BYTE,h._workingCanvas),T.width=e,T.height=r,1));var s=new c.InternalTexture(h,c.InternalTextureSource.Temp);return h._bindTextureDirectly(a.TEXTURE_2D,s,!0),a.texImage2D(a.TEXTURE_2D,0,u,u,a.UNSIGNED_BYTE,t),h._rescaleTexture(s,T,o,u,(function(){h._releaseTexture(s),h._bindTextureDirectly(a.TEXTURE_2D,T,!0),n()})),!0}),i)};!y||g?s&&(s.decoding||s.close)?C(s):t._FileToolsLoadImage(e,C,A,o?o.offlineProvider:null,p):"string"==typeof s||s instanceof ArrayBuffer||ArrayBuffer.isView(s)||s instanceof Blob?t._FileToolsLoadImage(s,C,A,o?o.offlineProvider:null,p):s&&C(s)}return T},t._FileToolsLoadImage=function(t,e,r,n,a){throw o.a.WarnImport("FileTools")},t.prototype._rescaleTexture=function(t,e,r,n,a){},t.prototype.createRawTexture=function(t,e,r,n,a,i,u,v,s){throw void 0===v&&(v=null),void 0===s&&(s=0),o.a.WarnImport("Engine.RawTexture")},t.prototype.createRawCubeTexture=function(t,e,r,n,a,i,u,v){throw void 0===v&&(v=null),o.a.WarnImport("Engine.RawTexture")},t.prototype.createRawTexture3D=function(t,e,r,n,a,i,u,v,s,c){throw void 0===s&&(s=null),void 0===c&&(c=0),o.a.WarnImport("Engine.RawTexture")},t.prototype.createRawTexture2DArray=function(t,e,r,n,a,i,u,v,s,c){throw void 0===s&&(s=null),void 0===c&&(c=0),o.a.WarnImport("Engine.RawTexture")},t.prototype._unpackFlipY=function(t){this._unpackFlipYCached!==t&&(this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL,t?1:0),this.enableUnpackFlipYCached&&(this._unpackFlipYCached=t))},t.prototype._getUnpackAlignement=function(){return this._gl.getParameter(this._gl.UNPACK_ALIGNMENT)},t.prototype._getTextureTarget=function(t){return t.isCube?this._gl.TEXTURE_CUBE_MAP:t.is3D?this._gl.TEXTURE_3D:t.is2DArray||t.isMultiview?this._gl.TEXTURE_2D_ARRAY:this._gl.TEXTURE_2D},t.prototype.updateTextureSamplingMode=function(t,e,r){void 0===r&&(r=!1);var n=this._getTextureTarget(e),a=this._getSamplingParameters(t,e.generateMipMaps||r);this._setTextureParameterInteger(n,this._gl.TEXTURE_MAG_FILTER,a.mag,e),this._setTextureParameterInteger(n,this._gl.TEXTURE_MIN_FILTER,a.min),r&&(e.generateMipMaps=!0,this._gl.generateMipmap(n)),this._bindTextureDirectly(n,null),e.samplingMode=t},t.prototype.updateTextureWrappingMode=function(t,e,r,n){void 0===r&&(r=null),void 0===n&&(n=null);var a=this._getTextureTarget(t);null!==e&&(this._setTextureParameterInteger(a,this._gl.TEXTURE_WRAP_S,this._getTextureWrapMode(e),t),t._cachedWrapU=e),null!==r&&(this._setTextureParameterInteger(a,this._gl.TEXTURE_WRAP_T,this._getTextureWrapMode(r),t),t._cachedWrapV=r),(t.is2DArray||t.is3D)&&null!==n&&(this._setTextureParameterInteger(a,this._gl.TEXTURE_WRAP_R,this._getTextureWrapMode(n),t),t._cachedWrapR=n),this._bindTextureDirectly(a,null)},t.prototype._setupDepthStencilTexture=function(t,e,r,n,a){var o=e.width||e,i=e.height||e,u=e.layers||0;t.baseWidth=o,t.baseHeight=i,t.width=o,t.height=i,t.is2DArray=u>0,t.depth=u,t.isReady=!0,t.samples=1,t.generateMipMaps=!1,t._generateDepthBuffer=!0,t._generateStencilBuffer=r,t.samplingMode=n?2:1,t.type=0,t._comparisonFunction=a;var v=this._gl,s=this._getTextureTarget(t),c=this._getSamplingParameters(t.samplingMode,!1);v.texParameteri(s,v.TEXTURE_MAG_FILTER,c.mag),v.texParameteri(s,v.TEXTURE_MIN_FILTER,c.min),v.texParameteri(s,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(s,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),0===a?(v.texParameteri(s,v.TEXTURE_COMPARE_FUNC,515),v.texParameteri(s,v.TEXTURE_COMPARE_MODE,v.NONE)):(v.texParameteri(s,v.TEXTURE_COMPARE_FUNC,a),v.texParameteri(s,v.TEXTURE_COMPARE_MODE,v.COMPARE_REF_TO_TEXTURE))},t.prototype._uploadCompressedDataToTextureDirectly=function(t,e,r,n,a,o,i){void 0===o&&(o=0),void 0===i&&(i=0);var u=this._gl,v=u.TEXTURE_2D;t.isCube&&(v=u.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._gl.compressedTexImage2D(v,i,e,r,n,0,a)},t.prototype._uploadDataToTextureDirectly=function(t,e,r,n,a,o){void 0===r&&(r=0),void 0===n&&(n=0),void 0===o&&(o=!1);var i=this._gl,u=this._getWebGLTextureType(t.type),v=this._getInternalFormat(t.format),s=void 0===a?this._getRGBABufferInternalSizedFormat(t.type,t.format):this._getInternalFormat(a);this._unpackFlipY(t.invertY);var c=i.TEXTURE_2D;t.isCube&&(c=i.TEXTURE_CUBE_MAP_POSITIVE_X+r);var P=Math.round(Math.log(t.width)*Math.LOG2E),l=Math.round(Math.log(t.height)*Math.LOG2E),f=o?t.width:Math.pow(2,Math.max(P-n,0)),d=o?t.height:Math.pow(2,Math.max(l-n,0));i.texImage2D(c,n,s,f,d,0,v,u,e)},t.prototype.updateTextureData=function(t,e,r,n,a,o,i,u){void 0===i&&(i=0),void 0===u&&(u=0);var v=this._gl,s=this._getWebGLTextureType(t.type),c=this._getInternalFormat(t.format);this._unpackFlipY(t.invertY);var P=v.TEXTURE_2D;t.isCube&&(P=v.TEXTURE_CUBE_MAP_POSITIVE_X+i),v.texSubImage2D(P,u,r,n,a,o,c,s,e)},t.prototype._uploadArrayBufferViewToTexture=function(t,e,r,n){void 0===r&&(r=0),void 0===n&&(n=0);var a=this._gl,o=t.isCube?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D;this._bindTextureDirectly(o,t,!0),this._uploadDataToTextureDirectly(t,e,r,n),this._bindTextureDirectly(o,null,!0)},t.prototype._prepareWebGLTextureContinuation=function(t,e,r,n,a){var o=this._gl;if(o){var i=this._getSamplingParameters(a,!r);o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,i.mag),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,i.min),r||n||o.generateMipmap(o.TEXTURE_2D),this._bindTextureDirectly(o.TEXTURE_2D,null),e&&e._removePendingData(t),t.onLoadedObservable.notifyObservers(t),t.onLoadedObservable.clear()}},t.prototype._prepareWebGLTexture=function(e,r,n,a,o,i,u,v,s){var c=this;void 0===s&&(s=3);var P=this.getCaps().maxTextureSize,l=Math.min(P,this.needPOTTextures?t.GetExponentOfTwo(n,P):n),f=Math.min(P,this.needPOTTextures?t.GetExponentOfTwo(a,P):a),d=this._gl;d&&(e._webGLTexture?(this._bindTextureDirectly(d.TEXTURE_2D,e,!0),this._unpackFlipY(void 0===o||!!o),e.baseWidth=n,e.baseHeight=a,e.width=l,e.height=f,e.isReady=!0,v(l,f,(function(){c._prepareWebGLTextureContinuation(e,r,i,u,s)}))||this._prepareWebGLTextureContinuation(e,r,i,u,s)):r&&r._removePendingData(e))},t.prototype._setupFramebufferDepthAttachments=function(t,e,r,n,a){void 0===a&&(a=1);var o=this._gl;if(t&&e)return this._getDepthStencilBuffer(r,n,a,o.DEPTH_STENCIL,o.DEPTH24_STENCIL8,o.DEPTH_STENCIL_ATTACHMENT);if(e){var i=o.DEPTH_COMPONENT16;return this._webGLVersion>1&&(i=o.DEPTH_COMPONENT32F),this._getDepthStencilBuffer(r,n,a,i,i,o.DEPTH_ATTACHMENT)}return t?this._getDepthStencilBuffer(r,n,a,o.STENCIL_INDEX8,o.STENCIL_INDEX8,o.STENCIL_ATTACHMENT):null},t.prototype._releaseFramebufferObjects=function(t){var e=this._gl;t._framebuffer&&(e.deleteFramebuffer(t._framebuffer),t._framebuffer=null),t._depthStencilBuffer&&(e.deleteRenderbuffer(t._depthStencilBuffer),t._depthStencilBuffer=null),t._MSAAFramebuffer&&(e.deleteFramebuffer(t._MSAAFramebuffer),t._MSAAFramebuffer=null),t._MSAARenderBuffer&&(e.deleteRenderbuffer(t._MSAARenderBuffer),t._MSAARenderBuffer=null)},t.prototype._releaseTexture=function(t){this._releaseFramebufferObjects(t),this._deleteTexture(t._webGLTexture),this.unbindAllTextures();var e=this._internalTexturesCache.indexOf(t);-1!==e&&this._internalTexturesCache.splice(e,1),t._lodTextureHigh&&t._lodTextureHigh.dispose(),t._lodTextureMid&&t._lodTextureMid.dispose(),t._lodTextureLow&&t._lodTextureLow.dispose(),t._irradianceTexture&&t._irradianceTexture.dispose()},t.prototype._deleteTexture=function(t){this._gl.deleteTexture(t)},t.prototype._setProgram=function(t){this._currentProgram!==t&&(this._gl.useProgram(t),this._currentProgram=t)},t.prototype.bindSamplers=function(t){var e=t.getPipelineContext();this._setProgram(e.program);for(var r=t.getSamplers(),n=0;n<r.length;n++){var a=t.getUniform(r[n]);a&&(this._boundUniforms[n]=a)}this._currentEffect=null},t.prototype._activateCurrentTexture=function(){this._currentTextureChannel!==this._activeChannel&&(this._gl.activeTexture(this._gl.TEXTURE0+this._activeChannel),this._currentTextureChannel=this._activeChannel)},t.prototype._bindTextureDirectly=function(t,e,r,n){void 0===r&&(r=!1),void 0===n&&(n=!1);var a=!1,o=e&&e._associatedChannel>-1;return r&&o&&(this._activeChannel=e._associatedChannel),this._boundTexturesCache[this._activeChannel]!==e||n?(this._activateCurrentTexture(),e&&e.isMultiview?this._gl.bindTexture(t,e?e._colorTextureArray:null):this._gl.bindTexture(t,e?e._webGLTexture:null),this._boundTexturesCache[this._activeChannel]=e,e&&(e._associatedChannel=this._activeChannel)):r&&(a=!0,this._activateCurrentTexture()),o&&!r&&this._bindSamplerUniformToChannel(e._associatedChannel,this._activeChannel),a},t.prototype._bindTexture=function(t,e){if(void 0!==t){e&&(e._associatedChannel=t),this._activeChannel=t;var r=e?this._getTextureTarget(e):this._gl.TEXTURE_2D;this._bindTextureDirectly(r,e)}},t.prototype.unbindAllTextures=function(){for(var t=0;t<this._maxSimultaneousTextures;t++)this._activeChannel=t,this._bindTextureDirectly(this._gl.TEXTURE_2D,null),this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP,null),this.webGLVersion>1&&(this._bindTextureDirectly(this._gl.TEXTURE_3D,null),this._bindTextureDirectly(this._gl.TEXTURE_2D_ARRAY,null))},t.prototype.setTexture=function(t,e,r){void 0!==t&&(e&&(this._boundUniforms[t]=e),this._setTexture(t,r))},t.prototype._bindSamplerUniformToChannel=function(t,e){var r=this._boundUniforms[t];r&&r._currentState!==e&&(this._gl.uniform1i(r,e),r._currentState=e)},t.prototype._getTextureWrapMode=function(t){switch(t){case 1:return this._gl.REPEAT;case 0:return this._gl.CLAMP_TO_EDGE;case 2:return this._gl.MIRRORED_REPEAT}return this._gl.REPEAT},t.prototype._setTexture=function(t,e,r,n){if(void 0===r&&(r=!1),void 0===n&&(n=!1),!e)return null!=this._boundTexturesCache[t]&&(this._activeChannel=t,this._bindTextureDirectly(this._gl.TEXTURE_2D,null),this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP,null),this.webGLVersion>1&&(this._bindTextureDirectly(this._gl.TEXTURE_3D,null),this._bindTextureDirectly(this._gl.TEXTURE_2D_ARRAY,null))),!1;if(e.video)this._activeChannel=t,e.update();else if(4===e.delayLoadState)return e.delayLoad(),!1;var a;a=n?e.depthStencilTexture:e.isReady()?e.getInternalTexture():e.isCube?this.emptyCubeTexture:e.is3D?this.emptyTexture3D:e.is2DArray?this.emptyTexture2DArray:this.emptyTexture,!r&&a&&(a._associatedChannel=t);var o=!0;this._boundTexturesCache[t]===a&&(r||this._bindSamplerUniformToChannel(a._associatedChannel,t),o=!1),this._activeChannel=t;var i=this._getTextureTarget(a);if(o&&this._bindTextureDirectly(i,a,r),a&&!a.isMultiview){if(a.isCube&&a._cachedCoordinatesMode!==e.coordinatesMode){a._cachedCoordinatesMode=e.coordinatesMode;var u=3!==e.coordinatesMode&&5!==e.coordinatesMode?1:0;e.wrapU=u,e.wrapV=u}a._cachedWrapU!==e.wrapU&&(a._cachedWrapU=e.wrapU,this._setTextureParameterInteger(i,this._gl.TEXTURE_WRAP_S,this._getTextureWrapMode(e.wrapU),a)),a._cachedWrapV!==e.wrapV&&(a._cachedWrapV=e.wrapV,this._setTextureParameterInteger(i,this._gl.TEXTURE_WRAP_T,this._getTextureWrapMode(e.wrapV),a)),a.is3D&&a._cachedWrapR!==e.wrapR&&(a._cachedWrapR=e.wrapR,this._setTextureParameterInteger(i,this._gl.TEXTURE_WRAP_R,this._getTextureWrapMode(e.wrapR),a)),this._setAnisotropicLevel(i,a,e.anisotropicFilteringLevel)}return!0},t.prototype.setTextureArray=function(t,e,r){if(void 0!==t&&e){this._textureUnits&&this._textureUnits.length===r.length||(this._textureUnits=new Int32Array(r.length));for(var n=0;n<r.length;n++){var a=r[n].getInternalTexture();a?(this._textureUnits[n]=t+n,a._associatedChannel=t+n):this._textureUnits[n]=-1}this._gl.uniform1iv(e,this._textureUnits);for(var o=0;o<r.length;o++)this._setTexture(this._textureUnits[o],r[o],!0)}},t.prototype._setAnisotropicLevel=function(t,e,r){var n=this._caps.textureAnisotropicFilterExtension;11!==e.samplingMode&&3!==e.samplingMode&&2!==e.samplingMode&&(r=1),n&&e._cachedAnisotropicFilteringLevel!==r&&(this._setTextureParameterFloat(t,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r,this._caps.maxAnisotropy),e),e._cachedAnisotropicFilteringLevel=r)},t.prototype._setTextureParameterFloat=function(t,e,r,n){this._bindTextureDirectly(t,n,!0,!0),this._gl.texParameterf(t,e,r)},t.prototype._setTextureParameterInteger=function(t,e,r,n){n&&this._bindTextureDirectly(t,n,!0,!0),this._gl.texParameteri(t,e,r)},t.prototype.unbindAllAttributes=function(){if(this._mustWipeVertexAttributes){this._mustWipeVertexAttributes=!1;for(var t=0;t<this._caps.maxVertexAttribs;t++)this.disableAttributeByIndex(t)}else{t=0;for(var e=this._vertexAttribArraysEnabled.length;t<e;t++)t>=this._caps.maxVertexAttribs||!this._vertexAttribArraysEnabled[t]||this.disableAttributeByIndex(t)}},t.prototype.releaseEffects=function(){for(var t in this._compiledEffects){var e=this._compiledEffects[t].getPipelineContext();this._deletePipelineContext(e)}this._compiledEffects={}},t.prototype.dispose=function(){this.stopRenderLoop(),this.onBeforeTextureInitObservable&&this.onBeforeTextureInitObservable.clear(),this._emptyTexture&&(this._releaseTexture(this._emptyTexture),this._emptyTexture=null),this._emptyCubeTexture&&(this._releaseTexture(this._emptyCubeTexture),this._emptyCubeTexture=null),this._dummyFramebuffer&&this._gl.deleteFramebuffer(this._dummyFramebuffer),this.releaseEffects(),this.unbindAllAttributes(),this._boundUniforms=[],l.a.IsWindowObjectExist()&&this._renderingCanvas&&(this._doNotHandleContextLost||(this._renderingCanvas.removeEventListener("webglcontextlost",this._onContextLost),this._renderingCanvas.removeEventListener("webglcontextrestored",this._onContextRestored))),this._workingCanvas=null,this._workingContext=null,this._currentBufferPointers=[],this._renderingCanvas=null,this._currentProgram=null,this._boundRenderFunction=null,a.a.ResetCache();for(var t=0,e=this._activeRequests;t<e.length;t++)e[t].abort()},t.prototype.attachContextLostEvent=function(t){this._renderingCanvas&&this._renderingCanvas.addEventListener("webglcontextlost",t,!1)},t.prototype.attachContextRestoredEvent=function(t){this._renderingCanvas&&this._renderingCanvas.addEventListener("webglcontextrestored",t,!1)},t.prototype.getError=function(){return this._gl.getError()},t.prototype._canRenderToFloatFramebuffer=function(){return this._webGLVersion>1?this._caps.colorBufferFloat:this._canRenderToFramebuffer(1)},t.prototype._canRenderToHalfFloatFramebuffer=function(){return this._webGLVersion>1?this._caps.colorBufferFloat:this._canRenderToFramebuffer(2)},t.prototype._canRenderToFramebuffer=function(t){for(var e=this._gl;e.getError()!==e.NO_ERROR;);var r=!0,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,this._getRGBABufferInternalSizedFormat(t),1,1,0,e.RGBA,this._getWebGLTextureType(t),null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST);var a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);var o=e.checkFramebufferStatus(e.FRAMEBUFFER);if((r=(r=r&&o===e.FRAMEBUFFER_COMPLETE)&&e.getError()===e.NO_ERROR)&&(e.clear(e.COLOR_BUFFER_BIT),r=r&&e.getError()===e.NO_ERROR),r){e.bindFramebuffer(e.FRAMEBUFFER,null);var i=e.RGBA,u=e.UNSIGNED_BYTE,v=new Uint8Array(4);e.readPixels(0,0,1,1,i,u,v),r=r&&e.getError()===e.NO_ERROR}for(e.deleteTexture(n),e.deleteFramebuffer(a),e.bindFramebuffer(e.FRAMEBUFFER,null);!r&&e.getError()!==e.NO_ERROR;);return r},t.prototype._getWebGLTextureType=function(t){if(1===this._webGLVersion){switch(t){case 1:return this._gl.FLOAT;case 2:return this._gl.HALF_FLOAT_OES;case 0:return this._gl.UNSIGNED_BYTE;case 8:return this._gl.UNSIGNED_SHORT_4_4_4_4;case 9:return this._gl.UNSIGNED_SHORT_5_5_5_1;case 10:return this._gl.UNSIGNED_SHORT_5_6_5}return this._gl.UNSIGNED_BYTE}switch(t){case 3:return this._gl.BYTE;case 0:return this._gl.UNSIGNED_BYTE;case 4:return this._gl.SHORT;case 5:return this._gl.UNSIGNED_SHORT;case 6:return this._gl.INT;case 7:return this._gl.UNSIGNED_INT;case 1:return this._gl.FLOAT;case 2:return this._gl.HALF_FLOAT;case 8:return this._gl.UNSIGNED_SHORT_4_4_4_4;case 9:return this._gl.UNSIGNED_SHORT_5_5_5_1;case 10:return this._gl.UNSIGNED_SHORT_5_6_5;case 11:return this._gl.UNSIGNED_INT_2_10_10_10_REV;case 12:return this._gl.UNSIGNED_INT_24_8;case 13:return this._gl.UNSIGNED_INT_10F_11F_11F_REV;case 14:return this._gl.UNSIGNED_INT_5_9_9_9_REV;case 15:return this._gl.FLOAT_32_UNSIGNED_INT_24_8_REV}return this._gl.UNSIGNED_BYTE},t.prototype._getInternalFormat=function(t){var e=this._gl.RGBA;switch(t){case 0:e=this._gl.ALPHA;break;case 1:e=this._gl.LUMINANCE;break;case 2:e=this._gl.LUMINANCE_ALPHA;break;case 6:e=this._gl.RED;break;case 7:e=this._gl.RG;break;case 4:e=this._gl.RGB;break;case 5:e=this._gl.RGBA}if(this._webGLVersion>1)switch(t){case 8:e=this._gl.RED_INTEGER;break;case 9:e=this._gl.RG_INTEGER;break;case 10:e=this._gl.RGB_INTEGER;break;case 11:e=this._gl.RGBA_INTEGER}return e},t.prototype._getRGBABufferInternalSizedFormat=function(t,e){if(1===this._webGLVersion){if(void 0!==e)switch(e){case 0:return this._gl.ALPHA;case 1:return this._gl.LUMINANCE;case 2:return this._gl.LUMINANCE_ALPHA;case 4:return this._gl.RGB}return this._gl.RGBA}switch(t){case 3:switch(e){case 6:return this._gl.R8_SNORM;case 7:return this._gl.RG8_SNORM;case 4:return this._gl.RGB8_SNORM;case 8:return this._gl.R8I;case 9:return this._gl.RG8I;case 10:return this._gl.RGB8I;case 11:return this._gl.RGBA8I;default:return this._gl.RGBA8_SNORM}case 0:switch(e){case 6:return this._gl.R8;case 7:return this._gl.RG8;case 4:return this._gl.RGB8;case 5:return this._gl.RGBA8;case 8:return this._gl.R8UI;case 9:return this._gl.RG8UI;case 10:return this._gl.RGB8UI;case 11:return this._gl.RGBA8UI;case 0:return this._gl.ALPHA;case 1:return this._gl.LUMINANCE;case 2:return this._gl.LUMINANCE_ALPHA;default:return this._gl.RGBA8}case 4:switch(e){case 8:return this._gl.R16I;case 9:return this._gl.RG16I;case 10:return this._gl.RGB16I;case 11:default:return this._gl.RGBA16I}case 5:switch(e){case 8:return this._gl.R16UI;case 9:return this._gl.RG16UI;case 10:return this._gl.RGB16UI;case 11:default:return this._gl.RGBA16UI}case 6:switch(e){case 8:return this._gl.R32I;case 9:return this._gl.RG32I;case 10:return this._gl.RGB32I;case 11:default:return this._gl.RGBA32I}case 7:switch(e){case 8:return this._gl.R32UI;case 9:return this._gl.RG32UI;case 10:return this._gl.RGB32UI;case 11:default:return this._gl.RGBA32UI}case 1:switch(e){case 6:return this._gl.R32F;case 7:return this._gl.RG32F;case 4:return this._gl.RGB32F;case 5:default:return this._gl.RGBA32F}case 2:switch(e){case 6:return this._gl.R16F;case 7:return this._gl.RG16F;case 4:return this._gl.RGB16F;case 5:default:return this._gl.RGBA16F}case 10:return this._gl.RGB565;case 13:return this._gl.R11F_G11F_B10F;case 14:return this._gl.RGB9_E5;case 8:return this._gl.RGBA4;case 9:return this._gl.RGB5_A1;case 11:switch(e){case 5:return this._gl.RGB10_A2;case 11:return this._gl.RGB10_A2UI;default:return this._gl.RGB10_A2}}return this._gl.RGBA8},t.prototype._getRGBAMultiSampleBufferFormat=function(t){return 1===t?this._gl.RGBA32F:2===t?this._gl.RGBA16F:this._gl.RGBA8},t.prototype._loadFile=function(e,r,n,a,o,i){var u=this,v=t._FileToolsLoadFile(e,r,n,a,o,i);return this._activeRequests.push(v),v.onCompleteObservable.add((function(t){u._activeRequests.splice(u._activeRequests.indexOf(t),1)})),v},t._FileToolsLoadFile=function(t,e,r,n,a,i){throw o.a.WarnImport("FileTools")},t.prototype.readPixels=function(t,e,r,n,a){void 0===a&&(a=!0);var o=a?4:3,i=a?this._gl.RGBA:this._gl.RGB,u=new Uint8Array(n*r*o);return this._gl.readPixels(t,e,r,n,i,this._gl.UNSIGNED_BYTE,u),u},Object.defineProperty(t,"IsSupported",{get:function(){return this.isSupported()},enumerable:!1,configurable:!0}),t.isSupported=function(){if(null!==this._HasMajorPerformanceCaveat)return!this._HasMajorPerformanceCaveat;if(null===this._IsSupported)try{var t=y.a.CreateCanvas(1,1),e=t.getContext("webgl")||t.getContext("experimental-webgl");this._IsSupported=null!=e&&!!window.WebGLRenderingContext}catch(t){this._IsSupported=!1}return this._IsSupported},Object.defineProperty(t,"HasMajorPerformanceCaveat",{get:function(){if(null===this._HasMajorPerformanceCaveat)try{var t=y.a.CreateCanvas(1,1),e=t.getContext("webgl",{failIfMajorPerformanceCaveat:!0})||t.getContext("experimental-webgl",{failIfMajorPerformanceCaveat:!0});this._HasMajorPerformanceCaveat=!e}catch(t){this._HasMajorPerformanceCaveat=!1}return this._HasMajorPerformanceCaveat},enumerable:!1,configurable:!0}),t.CeilingPOT=function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t},t.FloorPOT=function(t){return t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,(t|=t>>16)-(t>>1)},t.NearestPOT=function(e){var r=t.CeilingPOT(e),n=t.FloorPOT(e);return r-e>e-n?n:r},t.GetExponentOfTwo=function(e,r,n){var a;switch(void 0===n&&(n=2),n){case 1:a=t.FloorPOT(e);break;case 2:a=t.NearestPOT(e);break;case 3:default:a=t.CeilingPOT(e)}return Math.min(a,r)},t.QueueNewFrame=function(t,e){return l.a.IsWindowObjectExist()?(e||(e=window),e.requestPostAnimationFrame?e.requestPostAnimationFrame(t):e.requestAnimationFrame?e.requestAnimationFrame(t):e.msRequestAnimationFrame?e.msRequestAnimationFrame(t):e.webkitRequestAnimationFrame?e.webkitRequestAnimationFrame(t):e.mozRequestAnimationFrame?e.mozRequestAnimationFrame(t):e.oRequestAnimationFrame?e.oRequestAnimationFrame(t):window.setTimeout(t,16)):"undefined"!=typeof requestAnimationFrame?requestAnimationFrame(t):setTimeout(t,16)},t.prototype.getHostDocument=function(){return this._renderingCanvas&&this._renderingCanvas.ownerDocument?this._renderingCanvas.ownerDocument:document},t.ExceptionList=[{key:"Chrome/63.0",capture:"63\\.0\\.3239\\.(\\d+)",captureConstraint:108,targets:["uniformBuffer"]},{key:"Firefox/58",capture:null,captureConstraint:null,targets:["uniformBuffer"]},{key:"Firefox/59",capture:null,captureConstraint:null,targets:["uniformBuffer"]},{key:"Chrome/72.+?Mobile",capture:null,captureConstraint:null,targets:["vao"]},{key:"Chrome/73.+?Mobile",capture:null,captureConstraint:null,targets:["vao"]},{key:"Chrome/74.+?Mobile",capture:null,captureConstraint:null,targets:["vao"]},{key:"Mac OS.+Chrome/71",capture:null,captureConstraint:null,targets:["vao"]},{key:"Mac OS.+Chrome/72",capture:null,captureConstraint:null,targets:["vao"]}],t._TextureLoaders=[],t.CollisionsEpsilon=.001,t._IsSupported=null,t._HasMajorPerformanceCaveat=null,t}()},function(t,e){var r=t.exports={version:"2.6.12"};"number"==typeof __e&&(__e=r)},function(t,e,r){var n=r(58);t.exports=function(t,e,r){if(n(t),void 0===e)return t;switch(r){case 1:return function(r){return t.call(e,r)};case 2:return function(r,n){return t.call(e,r,n)};case 3:return function(r,n,a){return t.call(e,r,n,a)}}return function(){return t.apply(e,arguments)}}},function(t,e){var r={}.toString;t.exports=function(t){return r.call(t).slice(8,-1)}},function(t,e){var r=Math.ceil,n=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?n:r)(t)}},function(t,e,r){"use strict";var n=r(32);t.exports=function(t,e){return!!t&&n((function(){e?t.call(null,(function(){}),1):t.call(null)}))}},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({log_:function(t){var e={x:Object(o.a)(t,"x","log")};return n.a.runKernel(a.Bb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({split_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=Object(o.a)(t,"x","split"),u={x:i},v={numOrSizeSplits:e,axis:r};return n.a.runKernel(a.Jc,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));var n=r(1),a=r(7),o=r(56);function i(t,e){Object(a.d)(t);var r=Object(n.c)(t,e);if(1!==r.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(o.a)(t,null,r,e)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var n=function(){function t(){}return t.WarnImport=function(t){return t+" needs to be imported before as it contains a side-effect required by your code."},t}()},function(t,e,r){var n=r(33);t.exports=function(t,e){if(!n(t))return t;var r,a;if(e&&"function"==typeof(r=t.toString)&&!n(a=r.call(t)))return a;if("function"==typeof(r=t.valueOf)&&!n(a=r.call(t)))return a;if(!e&&"function"==typeof(r=t.toString)&&!n(a=r.call(t)))return a;throw TypeError("Can't convert object to primitive value")}},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e,r){var n=r(11),a=r(84),o=r(32);t.exports=function(t,e){var r=(a.Object||{})[t]||Object[t],i={};i[t]=e(r),n(n.S+n.F*o((function(){r(1)})),"Object",i)}},function(t,e,r){var n=r(85),a=r(180),o=r(46),i=r(37),u=r(267);t.exports=function(t,e){var r=1==t,v=2==t,s=3==t,c=4==t,P=6==t,l=5==t||P,f=e||u;return function(e,u,d){for(var p,b,h=o(e),y=a(h),m=n(u,d,3),g=i(y.length),T=0,j=r?f(e,g):v?f(e,0):void 0;g>T;T++)if((l||T in y)&&(b=m(p=y[T],T,h),t))if(r)j[T]=b;else if(b)switch(t){case 3:return!0;case 5:return p;case 6:return T;case 2:j.push(p)}else if(c)return!1;return P?-1:s||c?c:j}}},function(t,e,r){"use strict";function n(t,e,r){var n=function(t,e,r){return function(t,e,r){for(var n=0,a=t.length,o=0,i=!1;n<a;){var u=r(e,t[o=n+(a-n>>>1)]);u>0?n=o+1:(a=o,i=!u)}return i?n:-n-1}(t,e,r||a)}(t,e,r),o=n<0?-(n+1):n;t.splice(o,0,e)}function a(t,e){return t>e?1:t<e?-1:0}function o(t){return function(t){if(Array.isArray(t))return i(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return i(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function u(t,e,r,n,a){return c(t,e,r,n,a,0)}function v(t,e,r,n,a,o){return c(t,e,r,n,a,0,!1,o,!0)}function s(t,e,r,n,a,o){return c(t,e,r,n,a,o,!0)}function c(t,e,r,a,i,u){for(var v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8],d=[],p=0;p<e.length;p++)e[p]>i&&d.push({score:e[p],boxIndex:p,suppressBeginIndex:0});d.sort(f);for(var b=u>0?-.5/u:0,h=[],y=[];h.length<r&&d.length>0;){var m=d.pop(),g=m.score,T=m.boxIndex,j=m.suppressBeginIndex;if(g<i)break;for(var z=!1,w=h.length-1;w>=j;--w){var D=P(t,T,h[w]);if(D>=a){z=!0;break}if(m.score=m.score*l(a,b,D),m.score<=i)break}m.suppressBeginIndex=h.length,z||(m.score===g?(h.push(T),y.push(m.score)):m.score>i&&n(d,m,f))}var x=h.length,O=r-x;s&&O>0&&(h.push.apply(h,o(new Array(O).fill(0))),y.push.apply(y,o(new Array(O).fill(0))));var L={selectedIndices:h};return v&&(L.selectedScores=y),c&&(L.validOutputs=x),L}function P(t,e,r){var n=t.subarray(4*e,4*e+4),a=t.subarray(4*r,4*r+4),o=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),u=Math.max(n[0],n[2]),v=Math.max(n[1],n[3]),s=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),P=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),f=(u-o)*(v-i),d=(P-s)*(l-c);if(f<=0||d<=0)return 0;var p=Math.max(o,s),b=Math.max(i,c),h=Math.min(u,P),y=Math.min(v,l),m=Math.max(h-p,0)*Math.max(y-b,0);return m/(f+d-m)}function l(t,e,r){var n=Math.exp(e*r*r);return r<=t?n:0}function f(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}r.d(e,"a",(function(){return u})),r.d(e,"b",(function(){return v})),r.d(e,"c",(function(){return s}))},function(t,e,r){"use strict";r.d(e,"a",(function(){return l}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(12),s=r(4);function c(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return P(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?P(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var l=Object(s.b)({maximum_:function(t,e){var r=Object(i.a)(t,"a","maximum"),s=Object(i.a)(e,"b","maximum"),P=c(Object(o.makeTypesMatch)(r,s),2);r=P[0],s=P[1],"bool"===r.dtype&&(r=Object(v.a)(r,"int32"),s=Object(v.a)(s,"int32")),Object(u.a)(r.shape,s.shape);var l={a:r,b:s};return n.a.runKernel(a.Nb,l)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=r(8),s=Object(u.b)({depthwiseConv2d_:function(t,e,r,u){var s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],P=arguments.length>6?arguments[6]:void 0,l=Object(o.a)(t,"x","depthwiseConv2d"),f=Object(o.a)(e,"filter","depthwiseConv2d"),d=l,p=!1;3===l.rank&&(p=!0,d=Object(v.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),i.b(4===d.rank,(function(){return"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(d.rank,".")})),i.b(4===f.rank,(function(){return"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")})),i.b(d.shape[3]===f.shape[2],(function(){return"Error in depthwiseConv2d: number of input channels "+"(".concat(d.shape[3],") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],".")})),null!=P&&i.b(i.v(u),(function(){return"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(P," but got pad ").concat(u,".")}));var b={x:d,filter:f},h={strides:r,pad:u,dataFormat:s,dilations:c,dimRoundingMode:P},y=n.a.runKernel(a.O,b,h);return p?Object(v.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(4);function s(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(v.b)({equal_:function(t,e){var r=Object(i.a)(t,"a","equal"),v=Object(i.a)(e,"b","equal"),c=s(Object(o.makeTypesMatch)(r,v),2);r=c[0],v=c[1],Object(u.a)(r.shape,v.shape);var P={a:r,b:v};return n.a.runKernel(a.X,P)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(7),o=r(68),i=r(79);function u(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){var r=u(t,"float32"),v=Object(i.a)(t,"float32");return Object(o.a)(r,v)}var s=Object(a.D)(Object(a.N)(t),e);return n.a.makeTensor(s,t,e)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({relu_:function(t){var e={x:Object(o.a)(t,"x","relu")};return n.a.runKernel(a.mc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({step_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=Object(o.a)(t,"x","step"),i={x:r},u={alpha:e};return n.a.runKernel(a.Nc,i,u)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({unstack_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=Object(o.a)(t,"x","unstack","string_or_numeric");i.b(e>=-r.shape.length&&e<r.shape.length,(function(){return"Axis = ".concat(e," is not in [-").concat(r.shape.length,", ").concat(r.shape.length,")")}));var u={value:r},v={axis:e};return n.a.runKernel(a.Xc,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(8),v=r(4),s=Object(v.b)({batchNorm_:function(t,e,r,v,s,c){null==c&&(c=.001);var P,l,f=Object(o.a)(t,"x","batchNorm"),d=Object(o.a)(e,"mean","batchNorm"),p=Object(o.a)(r,"variance","batchNorm");null!=s&&(P=Object(o.a)(s,"scale","batchNorm")),null!=v&&(l=Object(o.a)(v,"offset","batchNorm")),i.b(d.rank===p.rank,(function(){return"Batch normalization gradient requires mean and variance to have equal ranks."})),i.b(null==l||d.rank===l.rank,(function(){return"Batch normalization gradient requires mean and offset to have equal ranks."})),i.b(null==P||d.rank===P.rank,(function(){return"Batch normalization gradient requires mean and scale to have equal ranks."}));var b={x:function(t){return 0===t.rank||1===t.rank?Object(u.a)(t,[1,1,1,t.size]):2===t.rank?Object(u.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}(f),scale:P,offset:l,mean:d,variance:p},h={varianceEpsilon:c},y=n.a.runKernel(a.ib,b,h);return Object(u.a)(y,f.shape)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({sigmoid_:function(t){var e={x:Object(o.a)(t,"x","sigmoid")};return n.a.runKernel(a.Ac,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({tile_:function(t,e){var r=Object(o.a)(t,"x","tile","string_or_numeric");i.b(r.rank===e.length,(function(){return"Error in transpose: rank of input ".concat(r.rank," ")+"must match length of reps ".concat(e,".")}));var u={x:r},v={reps:e};return n.a.runKernel(a.Tc,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return T}));var n=r(71),a=r(113),o=r(48),i=function(){function t(){}return t.EndsWith=function(t,e){return-1!==t.indexOf(e,t.length-e.length)},t.StartsWith=function(t,e){return!!t&&0===t.indexOf(e)},t.Decode=function(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);for(var e="",r=0;r<t.byteLength;r++)e+=String.fromCharCode(t[r]);return e},t.EncodeArrayBufferToBase64=function(t){for(var e,r,n,a,o,i,u,v="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",s="",c=0,P=ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(t);c<P.length;)a=(e=P[c++])>>2,o=(3&e)<<4|(r=c<P.length?P[c++]:Number.NaN)>>4,i=(15&r)<<2|(n=c<P.length?P[c++]:Number.NaN)>>6,u=63&n,isNaN(r)?i=u=64:isNaN(n)&&(u=64),s+=v.charAt(a)+v.charAt(o)+v.charAt(i)+v.charAt(u);return s},t.PadNumber=function(t,e){for(var r=String(t);r.length<e;)r="0"+r;return r},t}(),u=function(){function t(){this.children=[]}return t.prototype.isValid=function(t){return!0},t.prototype.process=function(t,e){var r="";if(this.line){var n=this.line,a=e.processor;a&&(a.lineProcessor&&(n=a.lineProcessor(n,e.isFragment)),a.attributeProcessor&&i.StartsWith(this.line,"attribute")?n=a.attributeProcessor(this.line):a.varyingProcessor&&i.StartsWith(this.line,"varying")?n=a.varyingProcessor(this.line,e.isFragment):(a.uniformProcessor||a.uniformBufferProcessor)&&i.StartsWith(this.line,"uniform")&&(/uniform (.+) (.+)/.test(this.line)?a.uniformProcessor&&(n=a.uniformProcessor(this.line,e.isFragment)):a.uniformBufferProcessor&&(n=a.uniformBufferProcessor(this.line,e.isFragment),e.lookForClosingBracketForUniformBuffer=!0)),a.endOfUniformBufferProcessor&&e.lookForClosingBracketForUniformBuffer&&-1!==this.line.indexOf("}")&&(e.lookForClosingBracketForUniformBuffer=!1,n=a.endOfUniformBufferProcessor(this.line,e.isFragment))),r+=n+"\r\n"}return this.children.forEach((function(n){r+=n.process(t,e)})),this.additionalDefineKey&&(t[this.additionalDefineKey]=this.additionalDefineValue||"true"),r},t}(),v=function(){function t(){}return Object.defineProperty(t.prototype,"currentLine",{get:function(){return this._lines[this.lineIndex]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"canRead",{get:function(){return this.lineIndex<this._lines.length-1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lines",{set:function(t){this._lines=[];for(var e=0,r=t;e<r.length;e++){var n=r[e];if("#"!==n[0])for(var a=n.split(";"),o=0;o<a.length;o++){var i=a[o];(i=i.trim())&&this._lines.push(i+(o!==a.length-1?";":""))}else this._lines.push(n)}},enumerable:!1,configurable:!0}),t}(),s=r(49),c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(s.b)(e,t),e.prototype.process=function(t,e){for(var r=0;r<this.children.length;r++){var n=this.children[r];if(n.isValid(t))return n.process(t,e)}return""},e}(u),P=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(s.b)(e,t),e.prototype.isValid=function(t){return this.testExpression.isTrue(t)},e}(u),l=function(){function t(){}return t.prototype.isTrue=function(t){return!0},t.postfixToInfix=function(e){for(var r=[],n=0,a=e;n<a.length;n++){var o=a[n];if(void 0===t._OperatorPriority[o])r.push(o);else{var i=r[r.length-1],u=r[r.length-2];r.length-=2,r.push("("+u+o+i+")")}}return r[r.length-1]},t.infixToPostfix=function(e){for(var r=[],n=-1,a=function(){""!==(s=s.trim())&&(r.push(s),s="")},o=function(e){n<t._Stack.length-1&&(t._Stack[++n]=e)},i=function(){return t._Stack[n]},u=function(){return-1===n?"!!INVALID EXPRESSION!!":t._Stack[n--]},v=0,s="";v<e.length;){var c=e.charAt(v),P=v<e.length-1?e.substr(v,2):"";if("("===c)s="",o(c);else if(")"===c){for(a();-1!==n&&"("!==i();)r.push(u());u()}else if(t._OperatorPriority[P]>1){for(a();-1!==n&&t._OperatorPriority[i()]>=t._OperatorPriority[P];)r.push(u());o(P),v++}else s+=c;v++}for(a();-1!==n;)"("===i()?u():r.push(u());return r},t._OperatorPriority={")":0,"(":1,"||":2,"&&":3},t._Stack=["","","","","","","","","","","","","","","","","","","",""],t}(),f=function(t){function e(e,r){void 0===r&&(r=!1);var n=t.call(this)||this;return n.define=e,n.not=r,n}return Object(s.b)(e,t),e.prototype.isTrue=function(t){var e=void 0!==t[this.define];return this.not&&(e=!e),e},e}(l),d=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(s.b)(e,t),e.prototype.isTrue=function(t){return this.leftOperand.isTrue(t)||this.rightOperand.isTrue(t)},e}(l),p=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(s.b)(e,t),e.prototype.isTrue=function(t){return this.leftOperand.isTrue(t)&&this.rightOperand.isTrue(t)},e}(l),b=function(t){function e(e,r,n){var a=t.call(this)||this;return a.define=e,a.operand=r,a.testValue=n,a}return Object(s.b)(e,t),e.prototype.isTrue=function(t){var e=t[this.define];void 0===e&&(e=this.define);var r=!1,n=parseInt(e),a=parseInt(this.testValue);switch(this.operand){case">":r=n>a;break;case"<":r=n<a;break;case"<=":r=n<=a;break;case">=":r=n>=a;break;case"==":r=n===a}return r},e}(l),h=r(92),y=/defined\s*?\((.+?)\)/g,m=/defined\s*?\[(.+?)\]/g,g=function(){function t(){}return t.Process=function(t,e,r,n){var a=this;this._ProcessIncludes(t,e,(function(t){var o=a._ProcessShaderConversion(t,e,n);r(o)}))},t._ProcessPrecision=function(t,e){var r=e.shouldUseHighPrecisionShader;return-1===t.indexOf("precision highp float")?t=r?"precision highp float;\n"+t:"precision mediump float;\n"+t:r||(t=t.replace("precision highp float","precision mediump float")),t},t._ExtractOperation=function(t){var e=/defined\((.+)\)/.exec(t);if(e&&e.length)return new f(e[1].trim(),"!"===t[0]);for(var r="",n=0,a=0,o=["==",">=","<=","<",">"];a<o.length&&(r=o[a],!((n=t.indexOf(r))>-1));a++);if(-1===n)return new f(t);var i=t.substring(0,n).trim(),u=t.substring(n+r.length).trim();return new b(i,r,u)},t._BuildSubExpression=function(t){t=t.replace(y,"defined[$1]");for(var e=[],r=0,n=l.infixToPostfix(t);r<n.length;r++){var a=n[r];if("||"!==a&&"&&"!==a)e.push(a);else if(e.length>=2){var o=e[e.length-1],i=e[e.length-2];e.length-=2;var u="&&"==a?new p:new d;"string"==typeof o&&(o=o.replace(m,"defined($1)")),"string"==typeof i&&(i=i.replace(m,"defined($1)")),u.leftOperand="string"==typeof i?this._ExtractOperation(i):i,u.rightOperand="string"==typeof o?this._ExtractOperation(o):o,e.push(u)}}var v=e[e.length-1];return"string"==typeof v&&(v=v.replace(m,"defined($1)")),"string"==typeof v?this._ExtractOperation(v):v},t._BuildExpression=function(t,e){var r=new P,n=t.substring(0,e),a=t.substring(e);return a=a.substring(0,(a.indexOf("//")+1||a.length+1)-1).trim(),r.testExpression="#ifdef"===n?new f(a):"#ifndef"===n?new f(a,!0):this._BuildSubExpression(a),r},t._MoveCursorWithinIf=function(t,e,r){for(var n=t.currentLine;this._MoveCursor(t,r);){var a=(n=t.currentLine).substring(0,5).toLowerCase();if("#else"===a){var o=new u;return e.children.push(o),void this._MoveCursor(t,o)}if("#elif"===a){var i=this._BuildExpression(n,5);e.children.push(i),r=i}}},t._MoveCursor=function(t,e){for(;t.canRead;){t.lineIndex++;var r=t.currentLine,n=/(#ifdef)|(#else)|(#elif)|(#endif)|(#ifndef)|(#if)/.exec(r);if(n&&n.length)switch(n[0]){case"#ifdef":var a=new c;e.children.push(a);var o=this._BuildExpression(r,6);a.children.push(o),this._MoveCursorWithinIf(t,a,o);break;case"#else":case"#elif":return!0;case"#endif":return!1;case"#ifndef":a=new c,e.children.push(a),o=this._BuildExpression(r,7),a.children.push(o),this._MoveCursorWithinIf(t,a,o);break;case"#if":a=new c,o=this._BuildExpression(r,3),e.children.push(a),a.children.push(o),this._MoveCursorWithinIf(t,a,o)}else{var i=new u;if(i.line=r,e.children.push(i),"#"===r[0]&&"d"===r[1]){var v=r.replace(";","").split(" ");i.additionalDefineKey=v[1],3===v.length&&(i.additionalDefineValue=v[2])}}}return!1},t._EvaluatePreProcessors=function(t,e,r){var n=new u,a=new v;return a.lineIndex=-1,a.lines=t.split("\n"),this._MoveCursor(a,n),n.process(e,r)},t._PreparePreProcessors=function(t){for(var e={},r=0,n=t.defines;r<n.length;r++){var a=n[r].replace("#define","").replace(";","").trim().split(" ");e[a[0]]=a.length>1?a[1]:""}return e.GL_ES="true",e.__VERSION__=t.version,e[t.platformName]="true",e},t._ProcessShaderConversion=function(t,e,r){var n=this._ProcessPrecision(t,e);if(!e.processor)return n;if(-1!==n.indexOf("#version 3"))return n.replace("#version 300 es","");var a=e.defines,o=this._PreparePreProcessors(e);return e.processor.preProcessor&&(n=e.processor.preProcessor(n,a,e.isFragment)),n=this._EvaluatePreProcessors(n,o,e),e.processor.postProcessor&&(n=e.processor.postProcessor(n,a,e.isFragment,r)),n},t._ProcessIncludes=function(e,r,n){for(var a=this,o=/#include<(.+)>(\((.*)\))*(\[(.*)\])*/g,i=o.exec(e),u=new String(e),v=!1;null!=i;){var s=i[1];if(-1!==s.indexOf("__decl__")&&(s=s.replace(/__decl__/,""),r.supportsUniformBuffers&&(s=(s=s.replace(/Vertex/,"Ubo")).replace(/Fragment/,"Ubo")),s+="Declaration"),!r.includesShadersStore[s]){var c=r.shadersRepository+"ShadersInclude/"+s+".fx";return void t._FileToolsLoadFile(c,(function(t){r.includesShadersStore[s]=t,a._ProcessIncludes(u,r,n)}))}var P=r.includesShadersStore[s];if(i[2])for(var l=i[3].split(","),f=0;f<l.length;f+=2){var d=new RegExp(l[f],"g"),p=l[f+1];P=P.replace(d,p)}if(i[4]){var b=i[5];if(-1!==b.indexOf("..")){var h=b.split(".."),y=parseInt(h[0]),m=parseInt(h[1]),g=P.slice(0);P="",isNaN(m)&&(m=r.indexParameters[h[1]]);for(var T=y;T<m;T++)r.supportsUniformBuffers||(g=g.replace(/light\{X\}.(\w*)/g,(function(t,e){return e+"{X}"}))),P+=g.replace(/\{X\}/g,T.toString())+"\n"}else r.supportsUniformBuffers||(P=P.replace(/light\{X\}.(\w*)/g,(function(t,e){return e+"{X}"}))),P=P.replace(/\{X\}/g,b)}u=u.replace(i[0],P),v=v||P.indexOf("#include<")>=0,i=o.exec(e)}v?this._ProcessIncludes(u.toString(),r,n):n(u)},t._FileToolsLoadFile=function(t,e,r,n,a,o){throw h.a.WarnImport("FileTools")},t}(),T=function(){function t(e,r,o,i,u,v,s,c,P,l){var f,d=this;void 0===i&&(i=null),void 0===v&&(v=null),void 0===s&&(s=null),void 0===c&&(c=null),void 0===P&&(P=null),this.name=null,this.defines="",this.onCompiled=null,this.onError=null,this.onBind=null,this.uniqueId=0,this.onCompileObservable=new n.Observable,this.onErrorObservable=new n.Observable,this._onBindObservable=null,this._wasPreviouslyReady=!1,this._bonesComputationForcedToCPU=!1,this._multiTarget=!1,this._uniformBuffersNames={},this._samplers={},this._isReady=!1,this._compilationError="",this._allFallbacksProcessed=!1,this._uniforms={},this._key="",this._fallbacks=null,this._vertexSourceCode="",this._fragmentSourceCode="",this._vertexSourceCodeOverride="",this._fragmentSourceCodeOverride="",this._transformFeedbackVaryings=null,this._rawVertexSourceCode="",this._rawFragmentSourceCode="",this._pipelineContext=null,this._valueCache={},this.name=e;var p,b,h=null;if(r.attributes){var y=r;if(this._engine=o,this._attributesNames=y.attributes,this._uniformsNames=y.uniformsNames.concat(y.samplers),this._samplerList=y.samplers.slice(),this.defines=y.defines,this.onError=y.onError,this.onCompiled=y.onCompiled,this._fallbacks=y.fallbacks,this._indexParameters=y.indexParameters,this._transformFeedbackVaryings=y.transformFeedbackVaryings||null,this._multiTarget=!!y.multiTarget,y.uniformBuffersNames){this._uniformBuffersNamesList=y.uniformBuffersNames.slice();for(var m=0;m<y.uniformBuffersNames.length;m++)this._uniformBuffersNames[y.uniformBuffersNames[m]]=m}h=null!==(f=y.processFinalCode)&&void 0!==f?f:null}else this._engine=u,this.defines=null==v?"":v,this._uniformsNames=o.concat(i),this._samplerList=i?i.slice():[],this._attributesNames=r,this._uniformBuffersNamesList=[],this.onError=P,this.onCompiled=c,this._indexParameters=l,this._fallbacks=s;this._attributeLocationByName={},this.uniqueId=t._uniqueIdSeed++;var T=a.a.IsWindowObjectExist()?this._engine.getHostDocument():null;e.vertexSource?p="source:"+e.vertexSource:e.vertexElement?(p=T?T.getElementById(e.vertexElement):null)||(p=e.vertexElement):p=e.vertex||e,e.fragmentSource?b="source:"+e.fragmentSource:e.fragmentElement?(b=T?T.getElementById(e.fragmentElement):null)||(b=e.fragmentElement):b=e.fragment||e;var j={defines:this.defines.split("\n"),indexParameters:this._indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:this._engine._shaderProcessor,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:t.ShadersRepository,includesShadersStore:t.IncludesShadersStore,version:(100*this._engine.webGLVersion).toString(),platformName:this._engine.webGLVersion>=2?"WEBGL2":"WEBGL1"};this._loadShader(p,"Vertex","",(function(t){d._rawVertexSourceCode=t,d._loadShader(b,"Fragment","Pixel",(function(r){d._rawFragmentSourceCode=r,g.Process(t,j,(function(t){h&&(t=h("vertex",t)),j.isFragment=!0,g.Process(r,j,(function(r){h&&(r=h("fragment",r)),d._useFinalCode(t,r,e)}),d._engine)}),d._engine)}))}))}return Object.defineProperty(t.prototype,"onBindObservable",{get:function(){return this._onBindObservable||(this._onBindObservable=new n.Observable),this._onBindObservable},enumerable:!1,configurable:!0}),t.prototype._useFinalCode=function(t,e,r){if(r){var n=r.vertexElement||r.vertex||r.spectorName||r,a=r.fragmentElement||r.fragment||r.spectorName||r;this._vertexSourceCode="#define SHADER_NAME vertex:"+n+"\n"+t,this._fragmentSourceCode="#define SHADER_NAME fragment:"+a+"\n"+e}else this._vertexSourceCode=t,this._fragmentSourceCode=e;this._prepareEffect()},Object.defineProperty(t.prototype,"key",{get:function(){return this._key},enumerable:!1,configurable:!0}),t.prototype.isReady=function(){try{return this._isReadyInternal()}catch(t){return!1}},t.prototype._isReadyInternal=function(){return!!this._isReady||!!this._pipelineContext&&this._pipelineContext.isReady},t.prototype.getEngine=function(){return this._engine},t.prototype.getPipelineContext=function(){return this._pipelineContext},t.prototype.getAttributesNames=function(){return this._attributesNames},t.prototype.getAttributeLocation=function(t){return this._attributes[t]},t.prototype.getAttributeLocationByName=function(t){return this._attributeLocationByName[t]},t.prototype.getAttributesCount=function(){return this._attributes.length},t.prototype.getUniformIndex=function(t){return this._uniformsNames.indexOf(t)},t.prototype.getUniform=function(t){return this._uniforms[t]},t.prototype.getSamplers=function(){return this._samplerList},t.prototype.getUniformNames=function(){return this._uniformsNames},t.prototype.getUniformBuffersNames=function(){return this._uniformBuffersNamesList},t.prototype.getIndexParameters=function(){return this._indexParameters},t.prototype.getCompilationError=function(){return this._compilationError},t.prototype.allFallbacksProcessed=function(){return this._allFallbacksProcessed},t.prototype.executeWhenCompiled=function(t){var e=this;this.isReady()?t(this):(this.onCompileObservable.add((function(e){t(e)})),this._pipelineContext&&!this._pipelineContext.isAsync||setTimeout((function(){e._checkIsReady(null)}),16))},t.prototype._checkIsReady=function(t){var e=this;try{if(this._isReadyInternal())return}catch(e){return void this._processCompilationErrors(e,t)}setTimeout((function(){e._checkIsReady(t)}),16)},t.prototype._loadShader=function(e,r,n,o){var i;"undefined"!=typeof HTMLElement&&e instanceof HTMLElement?o(a.a.GetDOMTextContent(e)):"source:"!==e.substr(0,7)?"base64:"!==e.substr(0,7)?t.ShadersStore[e+r+"Shader"]?o(t.ShadersStore[e+r+"Shader"]):n&&t.ShadersStore[e+n+"Shader"]?o(t.ShadersStore[e+n+"Shader"]):(i="."===e[0]||"/"===e[0]||e.indexOf("http")>-1?e:t.ShadersRepository+e,this._engine._loadFile(i+"."+r.toLowerCase()+".fx",o)):o(window.atob(e.substr(7))):o(e.substr(7))},Object.defineProperty(t.prototype,"vertexSourceCode",{get:function(){return this._vertexSourceCodeOverride&&this._fragmentSourceCodeOverride?this._vertexSourceCodeOverride:this._vertexSourceCode},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fragmentSourceCode",{get:function(){return this._vertexSourceCodeOverride&&this._fragmentSourceCodeOverride?this._fragmentSourceCodeOverride:this._fragmentSourceCode},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rawVertexSourceCode",{get:function(){return this._rawVertexSourceCode},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rawFragmentSourceCode",{get:function(){return this._rawFragmentSourceCode},enumerable:!1,configurable:!0}),t.prototype._rebuildProgram=function(t,e,r,n){var a=this;this._isReady=!1,this._vertexSourceCodeOverride=t,this._fragmentSourceCodeOverride=e,this.onError=function(t,e){n&&n(e)},this.onCompiled=function(){var t=a.getEngine().scenes;if(t)for(var e=0;e<t.length;e++)t[e].markAllMaterialsAsDirty(63);a._pipelineContext._handlesSpectorRebuildCallback(r)},this._fallbacks=null,this._prepareEffect()},t.prototype._prepareEffect=function(){var t=this,e=this._attributesNames,r=this.defines;this._valueCache={};var n=this._pipelineContext;try{var a=this._engine;this._pipelineContext=a.createPipelineContext();var o=this._rebuildProgram.bind(this);this._vertexSourceCodeOverride&&this._fragmentSourceCodeOverride?a._preparePipelineContext(this._pipelineContext,this._vertexSourceCodeOverride,this._fragmentSourceCodeOverride,!0,o,null,this._transformFeedbackVaryings):a._preparePipelineContext(this._pipelineContext,this._vertexSourceCode,this._fragmentSourceCode,!1,o,r,this._transformFeedbackVaryings),a._executeWhenRenderingStateIsCompiled(this._pipelineContext,(function(){if(a.supportsUniformBuffers)for(var r in t._uniformBuffersNames)t.bindUniformBlock(r,t._uniformBuffersNames[r]);var o;if(a.getUniforms(t._pipelineContext,t._uniformsNames).forEach((function(e,r){t._uniforms[t._uniformsNames[r]]=e})),t._attributes=a.getAttributes(t._pipelineContext,e),e)for(var i=0;i<e.length;i++){var u=e[i];t._attributeLocationByName[u]=t._attributes[i]}for(o=0;o<t._samplerList.length;o++)null==t.getUniform(t._samplerList[o])&&(t._samplerList.splice(o,1),o--);t._samplerList.forEach((function(e,r){t._samplers[e]=r})),a.bindSamplers(t),t._compilationError="",t._isReady=!0,t.onCompiled&&t.onCompiled(t),t.onCompileObservable.notifyObservers(t),t.onCompileObservable.clear(),t._fallbacks&&t._fallbacks.unBindMesh(),n&&t.getEngine()._deletePipelineContext(n)})),this._pipelineContext.isAsync&&this._checkIsReady(n)}catch(t){this._processCompilationErrors(t,n)}},t.prototype._getShaderCodeAndErrorLine=function(t,e,r){var n=r?/FRAGMENT SHADER ERROR: 0:(\d+?):/:/VERTEX SHADER ERROR: 0:(\d+?):/,a=null;if(e&&t){var o=e.match(n);if(o&&2===o.length){var i=parseInt(o[1]),u=t.split("\n",-1);u.length>=i&&(a="Offending line ["+i+"] in "+(r?"fragment":"vertex")+" code: "+u[i-1])}}return[t,a]},t.prototype._processCompilationErrors=function(e,r){var n,a,i,u,v;void 0===r&&(r=null),this._compilationError=e.message;var s=this._attributesNames,c=this._fallbacks;if(o.a.Error("Unable to compile effect:"),o.a.Error("Uniforms: "+this._uniformsNames.map((function(t){return" "+t}))),o.a.Error("Attributes: "+s.map((function(t){return" "+t}))),o.a.Error("Defines:\r\n"+this.defines),t.LogShaderCodeOnCompilationError){var P=null,l=null,f=null;(null===(i=this._pipelineContext)||void 0===i?void 0:i._getVertexShaderCode())&&(f=(n=this._getShaderCodeAndErrorLine(this._pipelineContext._getVertexShaderCode(),this._compilationError,!1))[0],P=n[1],f&&(o.a.Error("Vertex code:"),o.a.Error(f))),(null===(u=this._pipelineContext)||void 0===u?void 0:u._getFragmentShaderCode())&&(f=(a=this._getShaderCodeAndErrorLine(null===(v=this._pipelineContext)||void 0===v?void 0:v._getFragmentShaderCode(),this._compilationError,!0))[0],l=a[1],f&&(o.a.Error("Fragment code:"),o.a.Error(f))),P&&o.a.Error(P),l&&o.a.Error(l)}o.a.Error("Error: "+this._compilationError),r&&(this._pipelineContext=r,this._isReady=!0,this.onError&&this.onError(this,this._compilationError),this.onErrorObservable.notifyObservers(this)),c?(this._pipelineContext=null,c.hasMoreFallbacks?(this._allFallbacksProcessed=!1,o.a.Error("Trying next fallback."),this.defines=c.reduce(this.defines,this),this._prepareEffect()):(this._allFallbacksProcessed=!0,this.onError&&this.onError(this,this._compilationError),this.onErrorObservable.notifyObservers(this),this.onErrorObservable.clear(),this._fallbacks&&this._fallbacks.unBindMesh())):this._allFallbacksProcessed=!0},Object.defineProperty(t.prototype,"isSupported",{get:function(){return""===this._compilationError},enumerable:!1,configurable:!0}),t.prototype._bindTexture=function(t,e){this._engine._bindTexture(this._samplers[t],e)},t.prototype.setTexture=function(t,e){this._engine.setTexture(this._samplers[t],this._uniforms[t],e)},t.prototype.setDepthStencilTexture=function(t,e){this._engine.setDepthStencilTexture(this._samplers[t],this._uniforms[t],e)},t.prototype.setTextureArray=function(t,e){var r=t+"Ex";if(-1===this._samplerList.indexOf(r+"0")){for(var n=this._samplerList.indexOf(t),a=1;a<e.length;a++){var o=r+(a-1).toString();this._samplerList.splice(n+a,0,o)}for(var i=0,u=0,v=this._samplerList;u<v.length;u++){var s=v[u];this._samplers[s]=i,i+=1}}this._engine.setTextureArray(this._samplers[t],this._uniforms[t],e)},t.prototype.setTextureFromPostProcess=function(t,e){this._engine.setTextureFromPostProcess(this._samplers[t],e)},t.prototype.setTextureFromPostProcessOutput=function(t,e){this._engine.setTextureFromPostProcessOutput(this._samplers[t],e)},t.prototype._cacheMatrix=function(t,e){var r=this._valueCache[t],n=e.updateFlag;return(void 0===r||r!==n)&&(this._valueCache[t]=n,!0)},t.prototype._cacheFloat2=function(t,e,r){var n=this._valueCache[t];if(!n||2!==n.length)return n=[e,r],this._valueCache[t]=n,!0;var a=!1;return n[0]!==e&&(n[0]=e,a=!0),n[1]!==r&&(n[1]=r,a=!0),a},t.prototype._cacheFloat3=function(t,e,r,n){var a=this._valueCache[t];if(!a||3!==a.length)return a=[e,r,n],this._valueCache[t]=a,!0;var o=!1;return a[0]!==e&&(a[0]=e,o=!0),a[1]!==r&&(a[1]=r,o=!0),a[2]!==n&&(a[2]=n,o=!0),o},t.prototype._cacheFloat4=function(t,e,r,n,a){var o=this._valueCache[t];if(!o||4!==o.length)return o=[e,r,n,a],this._valueCache[t]=o,!0;var i=!1;return o[0]!==e&&(o[0]=e,i=!0),o[1]!==r&&(o[1]=r,i=!0),o[2]!==n&&(o[2]=n,i=!0),o[3]!==a&&(o[3]=a,i=!0),i},t.prototype.bindUniformBuffer=function(e,r){var n=this._uniformBuffersNames[r];void 0!==n&&t._baseCache[n]!==e&&(t._baseCache[n]=e,this._engine.bindUniformBufferBase(e,n))},t.prototype.bindUniformBlock=function(t,e){this._engine.bindUniformBlock(this._pipelineContext,t,e)},t.prototype.setInt=function(t,e){var r=this._valueCache[t];return void 0!==r&&r===e||this._engine.setInt(this._uniforms[t],e)&&(this._valueCache[t]=e),this},t.prototype.setIntArray=function(t,e){return this._valueCache[t]=null,this._engine.setIntArray(this._uniforms[t],e),this},t.prototype.setIntArray2=function(t,e){return this._valueCache[t]=null,this._engine.setIntArray2(this._uniforms[t],e),this},t.prototype.setIntArray3=function(t,e){return this._valueCache[t]=null,this._engine.setIntArray3(this._uniforms[t],e),this},t.prototype.setIntArray4=function(t,e){return this._valueCache[t]=null,this._engine.setIntArray4(this._uniforms[t],e),this},t.prototype.setFloatArray=function(t,e){return this._valueCache[t]=null,this._engine.setArray(this._uniforms[t],e),this},t.prototype.setFloatArray2=function(t,e){return this._valueCache[t]=null,this._engine.setArray2(this._uniforms[t],e),this},t.prototype.setFloatArray3=function(t,e){return this._valueCache[t]=null,this._engine.setArray3(this._uniforms[t],e),this},t.prototype.setFloatArray4=function(t,e){return this._valueCache[t]=null,this._engine.setArray4(this._uniforms[t],e),this},t.prototype.setArray=function(t,e){return this._valueCache[t]=null,this._engine.setArray(this._uniforms[t],e),this},t.prototype.setArray2=function(t,e){return this._valueCache[t]=null,this._engine.setArray2(this._uniforms[t],e),this},t.prototype.setArray3=function(t,e){return this._valueCache[t]=null,this._engine.setArray3(this._uniforms[t],e),this},t.prototype.setArray4=function(t,e){return this._valueCache[t]=null,this._engine.setArray4(this._uniforms[t],e),this},t.prototype.setMatrices=function(t,e){return e?(this._valueCache[t]=null,this._engine.setMatrices(this._uniforms[t],e),this):this},t.prototype.setMatrix=function(t,e){return this._cacheMatrix(t,e)&&(this._engine.setMatrices(this._uniforms[t],e.toArray())||(this._valueCache[t]=null)),this},t.prototype.setMatrix3x3=function(t,e){return this._valueCache[t]=null,this._engine.setMatrix3x3(this._uniforms[t],e),this},t.prototype.setMatrix2x2=function(t,e){return this._valueCache[t]=null,this._engine.setMatrix2x2(this._uniforms[t],e),this},t.prototype.setFloat=function(t,e){var r=this._valueCache[t];return void 0!==r&&r===e||this._engine.setFloat(this._uniforms[t],e)&&(this._valueCache[t]=e),this},t.prototype.setBool=function(t,e){var r=this._valueCache[t];return void 0!==r&&r===e||this._engine.setInt(this._uniforms[t],e?1:0)&&(this._valueCache[t]=e),this},t.prototype.setVector2=function(t,e){return this._cacheFloat2(t,e.x,e.y)&&(this._engine.setFloat2(this._uniforms[t],e.x,e.y)||(this._valueCache[t]=null)),this},t.prototype.setFloat2=function(t,e,r){return this._cacheFloat2(t,e,r)&&(this._engine.setFloat2(this._uniforms[t],e,r)||(this._valueCache[t]=null)),this},t.prototype.setVector3=function(t,e){return this._cacheFloat3(t,e.x,e.y,e.z)&&(this._engine.setFloat3(this._uniforms[t],e.x,e.y,e.z)||(this._valueCache[t]=null)),this},t.prototype.setFloat3=function(t,e,r,n){return this._cacheFloat3(t,e,r,n)&&(this._engine.setFloat3(this._uniforms[t],e,r,n)||(this._valueCache[t]=null)),this},t.prototype.setVector4=function(t,e){return this._cacheFloat4(t,e.x,e.y,e.z,e.w)&&(this._engine.setFloat4(this._uniforms[t],e.x,e.y,e.z,e.w)||(this._valueCache[t]=null)),this},t.prototype.setFloat4=function(t,e,r,n,a){return this._cacheFloat4(t,e,r,n,a)&&(this._engine.setFloat4(this._uniforms[t],e,r,n,a)||(this._valueCache[t]=null)),this},t.prototype.setColor3=function(t,e){return this._cacheFloat3(t,e.r,e.g,e.b)&&(this._engine.setFloat3(this._uniforms[t],e.r,e.g,e.b)||(this._valueCache[t]=null)),this},t.prototype.setColor4=function(t,e,r){return this._cacheFloat4(t,e.r,e.g,e.b,r)&&(this._engine.setFloat4(this._uniforms[t],e.r,e.g,e.b,r)||(this._valueCache[t]=null)),this},t.prototype.setDirectColor4=function(t,e){return this._cacheFloat4(t,e.r,e.g,e.b,e.a)&&(this._engine.setFloat4(this._uniforms[t],e.r,e.g,e.b,e.a)||(this._valueCache[t]=null)),this},t.prototype.dispose=function(){this._engine._releaseEffect(this)},t.RegisterShader=function(e,r,n){r&&(t.ShadersStore[e+"PixelShader"]=r),n&&(t.ShadersStore[e+"VertexShader"]=n)},t.ResetCache=function(){t._baseCache={}},t.ShadersRepository="src/Shaders/",t.LogShaderCodeOnCompilationError=!0,t._uniqueIdSeed=0,t._baseCache={},t.ShadersStore={},t.IncludesShadersStore={},t}()},function(t,e,r){"use strict";var n,a;r.d(e,"a",(function(){return n})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(n||(n={})),function(t){!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},function(t,e,r){"use strict";function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}if(r(40)){var a=r(115),o=r(31),i=r(32),u=r(11),v=r(202),s=r(275),c=r(85),P=r(138),l=r(131),f=r(65),d=r(140),p=r(87),b=r(37),h=r(306),y=r(134),m=r(93),g=r(73),T=r(150),j=r(33),z=r(46),w=r(264),D=r(135),x=r(76),O=r(136).f,L=r(266),S=r(132),A=r(36),k=r(96),C=r(192),I=r(183),E=r(269),M=r(152),U=r(197),R=r(137),W=r(268),Q=r(295),Y=r(43),G=r(75),F=Y.f,N=G.f,q=o.RangeError,K=o.TypeError,B=o.Uint8Array,V=Array.prototype,X=s.ArrayBuffer,Z=s.DataView,H=k(0),J=k(2),_=k(3),$=k(4),tt=k(5),et=k(6),rt=C(!0),nt=C(!1),at=E.values,ot=E.keys,it=E.entries,ut=V.lastIndexOf,vt=V.reduce,st=V.reduceRight,ct=V.join,Pt=V.sort,lt=V.slice,ft=V.toString,dt=V.toLocaleString,pt=A("iterator"),bt=A("toStringTag"),ht=S("typed_constructor"),yt=S("def_constructor"),mt=v.CONSTR,gt=v.TYPED,Tt=v.VIEW,jt=k(1,(function(t,e){return Ot(I(t,t[yt]),e)})),zt=i((function(){return 1===new B(new Uint16Array([1]).buffer)[0]})),wt=!!B&&!!B.prototype.set&&i((function(){new B(1).set({})})),Dt=function(t,e){var r=p(t);if(r<0||r%e)throw q("Wrong offset!");return r},xt=function(t){if(j(t)&&gt in t)return t;throw K(t+" is not a typed array!")},Ot=function(t,e){if(!j(t)||!(ht in t))throw K("It is not a typed array constructor!");return new t(e)},Lt=function(t,e){return St(I(t,t[yt]),e)},St=function(t,e){for(var r=0,n=e.length,a=Ot(t,n);n>r;)a[r]=e[r++];return a},At=function(t,e,r){F(t,e,{get:function(){return this._d[r]}})},kt=function(t){var e,r,n,a,o,i,u=z(t),v=arguments.length,s=v>1?arguments[1]:void 0,P=void 0!==s,l=L(u);if(null!=l&&!w(l)){for(i=l.call(u),n=[],e=0;!(o=i.next()).done;e++)n.push(o.value);u=n}for(P&&v>2&&(s=c(s,arguments[2],2)),e=0,r=b(u.length),a=Ot(this,r);r>e;e++)a[e]=P?s(u[e],e):u[e];return a},Ct=function(){for(var t=0,e=arguments.length,r=Ot(this,e);e>t;)r[t]=arguments[t++];return r},It=!!B&&i((function(){dt.call(new B(1))})),Et=function(){return dt.apply(It?lt.call(xt(this)):xt(this),arguments)},Mt={copyWithin:function(t,e){return Q.call(xt(this),t,e,arguments.length>2?arguments[2]:void 0)},every:function(t){return $(xt(this),t,arguments.length>1?arguments[1]:void 0)},fill:function(t){return W.apply(xt(this),arguments)},filter:function(t){return Lt(this,J(xt(this),t,arguments.length>1?arguments[1]:void 0))},find:function(t){return tt(xt(this),t,arguments.length>1?arguments[1]:void 0)},findIndex:function(t){return et(xt(this),t,arguments.length>1?arguments[1]:void 0)},forEach:function(t){H(xt(this),t,arguments.length>1?arguments[1]:void 0)},indexOf:function(t){return nt(xt(this),t,arguments.length>1?arguments[1]:void 0)},includes:function(t){return rt(xt(this),t,arguments.length>1?arguments[1]:void 0)},join:function(t){return ct.apply(xt(this),arguments)},lastIndexOf:function(t){return ut.apply(xt(this),arguments)},map:function(t){return jt(xt(this),t,arguments.length>1?arguments[1]:void 0)},reduce:function(t){return vt.apply(xt(this),arguments)},reduceRight:function(t){return st.apply(xt(this),arguments)},reverse:function(){for(var t,e=xt(this).length,r=Math.floor(e/2),n=0;n<r;)t=this[n],this[n++]=this[--e],this[e]=t;return this},some:function(t){return _(xt(this),t,arguments.length>1?arguments[1]:void 0)},sort:function(t){return Pt.call(xt(this),t)},subarray:function(t,e){var r=xt(this),n=r.length,a=y(t,n);return new(I(r,r[yt]))(r.buffer,r.byteOffset+a*r.BYTES_PER_ELEMENT,b((void 0===e?n:y(e,n))-a))}},Ut=function(t,e){return Lt(this,lt.call(xt(this),t,e))},Rt=function(t){xt(this);var e=Dt(arguments[1],1),r=this.length,n=z(t),a=b(n.length),o=0;if(a+e>r)throw q("Wrong length!");for(;o<a;)this[e+o]=n[o++]},Wt={entries:function(){return it.call(xt(this))},keys:function(){return ot.call(xt(this))},values:function(){return at.call(xt(this))}},Qt=function(t,e){return j(t)&&t[gt]&&"symbol"!=n(e)&&e in t&&String(+e)==String(e)},Yt=function(t,e){return Qt(t,e=m(e,!0))?l(2,t[e]):N(t,e)},Gt=function(t,e,r){return!(Qt(t,e=m(e,!0))&&j(r)&&g(r,"value"))||g(r,"get")||g(r,"set")||r.configurable||g(r,"writable")&&!r.writable||g(r,"enumerable")&&!r.enumerable?F(t,e,r):(t[e]=r.value,t)};mt||(G.f=Yt,Y.f=Gt),u(u.S+u.F*!mt,"Object",{getOwnPropertyDescriptor:Yt,defineProperty:Gt}),i((function(){ft.call({})}))&&(ft=dt=function(){return ct.call(this)});var Ft=d({},Mt);d(Ft,Wt),f(Ft,pt,Wt.values),d(Ft,{slice:Ut,set:Rt,constructor:function(){},toString:ft,toLocaleString:Et}),At(Ft,"buffer","b"),At(Ft,"byteOffset","o"),At(Ft,"byteLength","l"),At(Ft,"length","e"),F(Ft,bt,{get:function(){return this[gt]}}),t.exports=function(t,e,r,n){var s=t+((n=!!n)?"Clamped":"")+"Array",c="get"+t,l="set"+t,d=o[s],p=d||{},y=d&&x(d),m=!d||!v.ABV,g={},z=d&&d.prototype,w=function(t,r){F(t,r,{get:function(){return function(t,r){var n=t._d;return n.v[c](r*e+n.o,zt)}(this,r)},set:function(t){return function(t,r,a){var o=t._d;n&&(a=(a=Math.round(a))<0?0:a>255?255:255&a),o.v[l](r*e+o.o,a,zt)}(this,r,t)},enumerable:!0})};m?(d=r((function(t,r,n,a){P(t,d,s,"_d");var o,i,u,v,c=0,l=0;if(j(r)){if(!(r instanceof X||"ArrayBuffer"==(v=T(r))||"SharedArrayBuffer"==v))return gt in r?St(d,r):kt.call(d,r);o=r,l=Dt(n,e);var p=r.byteLength;if(void 0===a){if(p%e)throw q("Wrong length!");if((i=p-l)<0)throw q("Wrong length!")}else if((i=b(a)*e)+l>p)throw q("Wrong length!");u=i/e}else u=h(r),o=new X(i=u*e);for(f(t,"_d",{b:o,o:l,l:i,e:u,v:new Z(o)});c<u;)w(t,c++)})),z=d.prototype=D(Ft),f(z,"constructor",d)):i((function(){d(1)}))&&i((function(){new d(-1)}))&&U((function(t){new d,new d(null),new d(1.5),new d(t)}),!0)||(d=r((function(t,r,n,a){var o;return P(t,d,s),j(r)?r instanceof X||"ArrayBuffer"==(o=T(r))||"SharedArrayBuffer"==o?void 0!==a?new p(r,Dt(n,e),a):void 0!==n?new p(r,Dt(n,e)):new p(r):gt in r?St(d,r):kt.call(d,r):new p(h(r))})),H(y!==Function.prototype?O(p).concat(O(y)):O(p),(function(t){t in d||f(d,t,p[t])})),d.prototype=z,a||(z.constructor=d));var L=z[pt],S=!!L&&("values"==L.name||null==L.name),A=Wt.values;f(d,ht,!0),f(z,gt,s),f(z,Tt,!0),f(z,yt,d),(n?new d(1)[bt]==s:bt in z)||F(z,bt,{get:function(){return s}}),g[s]=d,u(u.G+u.W+u.F*(d!=p),g),u(u.S,s,{BYTES_PER_ELEMENT:e}),u(u.S+u.F*i((function(){p.of.call(d,1)})),s,{from:kt,of:Ct}),"BYTES_PER_ELEMENT"in z||f(z,"BYTES_PER_ELEMENT",e),u(u.P,s,Mt),R(s),u(u.P+u.F*wt,s,{set:Rt}),u(u.P+u.F*!S,s,Wt),a||z.toString==ft||(z.toString=ft),u(u.P+u.F*i((function(){new d(1).slice()})),s,{slice:Ut}),u(u.P+u.F*(i((function(){return[1,2].toLocaleString()!=new d([1,2]).toLocaleString()}))||!i((function(){z.toLocaleString.call([1,2])}))),s,{toLocaleString:Et}),M[s]=S?L:A,a||S||f(z,pt,A)}}else t.exports=function(){}},function(t,e,r){function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var a=r(301),o=r(11),i=r(179)("metadata"),u=i.store||(i.store=new(r(304))),v=function(t,e,r){var n=u.get(t);if(!n){if(!r)return;u.set(t,n=new a)}var o=n.get(e);if(!o){if(!r)return;n.set(e,o=new a)}return o};t.exports={store:u,map:v,has:function(t,e,r){var n=v(e,r,!1);return void 0!==n&&n.has(t)},get:function(t,e,r){var n=v(e,r,!1);return void 0===n?void 0:n.get(t)},set:function(t,e,r,n){v(r,n,!0).set(t,e)},keys:function(t,e){var r=v(t,e,!1),n=[];return r&&r.forEach((function(t,e){n.push(e)})),n},key:function(t){return void 0===t||"symbol"==n(t)?t:String(t)},exp:function(t){o(o.S,"Reflect",t)}}},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({mean_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","mean"),u={x:i},v={axis:e,keepDims:r};return n.a.runKernel(a.Ob,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var n=function(){function t(){}return t.IsWindowObjectExist=function(){return"undefined"!=typeof window},t.IsNavigatorAvailable=function(){return"undefined"!=typeof navigator},t.IsDocumentAvailable=function(){return"undefined"!=typeof document},t.GetDOMTextContent=function(t){for(var e="",r=t.firstChild;r;)3===r.nodeType&&(e+=r.textContent),r=r.nextSibling;return e},t}()},function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var n=function(){function t(){}return t.SetMatrixPrecision=function(e){if(t.MatrixTrackPrecisionChange=!1,e&&!t.MatrixUse64Bits&&t.MatrixTrackedMatrices)for(var r=0;r<t.MatrixTrackedMatrices.length;++r){var n=t.MatrixTrackedMatrices[r],a=n._m;n._m=new Array(16);for(var o=0;o<16;++o)n._m[o]=a[o]}t.MatrixUse64Bits=e,t.MatrixCurrentType=t.MatrixUse64Bits?Array:Float32Array,t.MatrixTrackedMatrices=null},t.MatrixUse64Bits=!1,t.MatrixTrackPrecisionChange=!0,t.MatrixCurrentType=Float32Array,t.MatrixTrackedMatrices=[],t}()},function(t,e){t.exports=!1},function(t,e,r){function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var a=r(132)("meta"),o=r(33),i=r(73),u=r(43).f,v=0,s=Object.isExtensible||function(){return!0},c=!r(32)((function(){return s(Object.preventExtensions({}))})),P=function(t){u(t,a,{value:{i:"O"+ ++v,w:{}}})},l=t.exports={KEY:a,NEED:!1,fastKey:function(t,e){if(!o(t))return"symbol"==n(t)?t:("string"==typeof t?"S":"P")+t;if(!i(t,a)){if(!s(t))return"F";if(!e)return"E";P(t)}return t[a].i},getWeak:function(t,e){if(!i(t,a)){if(!s(t))return!0;if(!e)return!1;P(t)}return t[a].w},onFreeze:function(t){return c&&l.NEED&&s(t)&&!i(t,a)&&P(t),t}}},function(t,e,r){var n=r(36)("unscopables"),a=Array.prototype;null==a[n]&&r(65)(a,n,{}),t.exports=function(t){a[n][t]=!0}},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,r){"use strict";var n,a,o,i,u;r.d(e,"a",(function(){return n})),r.d(e,"c",(function(){return s})),r.d(e,"b",(function(){return c})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(n||(n={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(o||(o={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(i||(i={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(u||(u={}));var v={float32:i,int32:a,bool:o,complex64:u};function s(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return v[t][e]}function c(t){return s(t,"int32")}},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({batchToSpaceND_:function(t,e,r){var u=Object(o.a)(t,"x","batchToSpaceND"),v=e.reduce((function(t,e){return t*e}));i.b(u.rank>=1+e.length,(function(){return"input rank is ".concat(u.rank," but should be > than blockShape.length ").concat(e.length)})),i.b(r.length===e.length,(function(){return"crops.length is ".concat(r.length," but should be equal to blockShape.length  ").concat(e.length)})),i.b(u.shape[0]%v==0,(function(){return"input tensor batch is ".concat(u.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(v)}));var s={x:u},c={blockShape:e,crops:r};return n.a.runKernel(a.t,s,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({gather_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,u=Object(o.a)(t,"x","gather"),v=Object(o.a)(e,"indices","gather","int32"),s={x:u,indices:v},c={axis:r,batchDims:i};return n.a.runKernel(a.mb,s,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(4);function s(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(v.b)({less_:function(t,e){var r=Object(i.a)(t,"a","less"),v=Object(i.a)(e,"b","less"),c=s(Object(o.makeTypesMatch)(r,v),2);r=c[0],v=c[1],Object(u.a)(r.shape,v.shape);var P={a:r,b:v};return n.a.runKernel(a.yb,P)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({logicalNot_:function(t){var e={x:Object(o.a)(t,"x","logicalNot","bool")};return n.a.runKernel(a.Fb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return l}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(12),s=r(4);function c(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return P(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?P(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var l=Object(s.b)({minimum_:function(t,e){var r=Object(i.a)(t,"a","minimum"),s=Object(i.a)(e,"b","minimum"),P=c(Object(o.makeTypesMatch)(r,s),2);r=P[0],s=P[1],"bool"===r.dtype&&(r=Object(v.a)(r,"int32"),s=Object(v.a)(s,"int32")),Object(u.a)(r.shape,s.shape);var l={a:r,b:s};return n.a.runKernel(a.Qb,l)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(4);function s(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(v.b)({notEqual_:function(t,e){var r=Object(i.a)(t,"a","notEqual"),v=Object(i.a)(e,"b","notEqual"),c=s(Object(o.makeTypesMatch)(r,v),2);r=c[0],v=c[1],Object(u.a)(r.shape,v.shape);var P={a:r,b:v};return n.a.runKernel(a.Zb,P)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({spaceToBatchND_:function(t,e,r){var u=Object(o.a)(t,"x","spaceToBatchND");i.b(u.rank>=1+e.length,(function(){return"input rank ".concat(u.rank," should be > than [blockShape] ").concat(e.length)})),i.b(r.length===e.length,(function(){return"paddings.shape[0] ".concat(r.length," must be equal to [blockShape] ").concat(e.length)})),i.b(u.shape.reduce((function(t,n,a){return a>0&&a<=e.length?t&&(n+r[a-1][0]+r[a-1][1])%e[a-1]==0:t}),!0),(function(){return"input spatial dimensions ".concat(u.shape.slice(1)," with paddings ").concat(r.toString()," must be divisible by blockShapes ").concat(e.toString())}));var v={x:u},s={blockShape:e,paddings:r};return n.a.runKernel(a.Hc,v,s)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(17),v=r(4);function s(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(v.b)({squaredDifference_:function(t,e){var r=Object(i.a)(t,"a","squaredDifference"),v=Object(i.a)(e,"b","squaredDifference"),c=s(Object(o.makeTypesMatch)(r,v),2);r=c[0],v=c[1],Object(u.a)(r.shape,v.shape);var P={a:r,b:v};return n.a.runKernel(a.Mc,P,{})}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(1),a=r(7),o=r(4),i=r(8),u=Object(o.b)({squeeze_:function(t,e){var r=Object(n.a)(t,"x","squeeze");return Object(i.a)(r,Object(a.P)(r.shape,e).newShape)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var n=r(1),a=r(56);function o(t,e,r){var o=Object(n.c)(t,r);return Object(a.a)(t,e,o,r)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return u})),r.d(e,"b",(function(){return v})),r.d(e,"c",(function(){return s}));var n=r(248);function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function i(t,e,r){return e&&o(t.prototype,e),r&&o(t,r),t}r(176);var u=function(){function t(e,r,o,i,u){a(this,t),this.mean=e,this.stdDev=r,this.dtype=o,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var v=u||Math.random();this.random=n.alea(v.toString())}return i(t,[{key:"nextValue",value:function(){if(!isNaN(this.nextVal)){var t=this.nextVal;return this.nextVal=NaN,t}for(var e,r,n=!1;!n;){var a=void 0,o=void 0,i=void 0;do{i=(a=2*this.random()-1)*a+(o=2*this.random()-1)*o}while(i>=1||0===i);var u=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*a*u,r=this.mean+this.stdDev*o*u,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(r)||(this.nextVal=this.convertValue(r)),this.convertValue(e)}},{key:"convertValue",value:function(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}},{key:"isValidTruncated",value:function(t){return t<=this.upper&&t>=this.lower}}]),t}(),v=function(){function t(e,r,o,i){a(this,t),this.alpha=e,this.beta=1/r,this.dtype=o;var v=i||Math.random();this.randu=n.alea(v.toString()),this.randn=new u(0,1,o,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}return i(t,[{key:"nextValue",value:function(){for(var t,e,r,n,a,o;;){do{n=this.randn.nextValue(),o=1+this.c*n}while(o<=0);if(o*=o*o,e=1-.331*(t=n*n)*t,r=.5*t+this.d*(1-o+Math.log(o)),(a=this.randu())<e||Math.log(a)<r)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}},{key:"convertValue",value:function(t){return"float32"===this.dtype?t:Math.round(t)}}]),t}(),s=function(){function t(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2?arguments[2]:void 0,u=arguments.length>3?arguments[3]:void 0;if(a(this,t),this.canReturnFloat=function(){return null==e.dtype||"float32"===e.dtype},this.min=r,this.range=o-r,this.dtype=i,null==u&&(u=Math.random()),"number"==typeof u&&(u=u.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(r," - ").concat(o," <= 1 and dtype is not float"));this.random=n.alea(u)}return i(t,[{key:"convertValue",value:function(t){return this.canReturnFloat()?t:Math.round(t)}},{key:"nextValue",value:function(){return this.convertValue(this.min+this.range*this.random())}}]),t}()},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e){var r=0,n=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++r+n).toString(36))}},function(t,e,r){var n=r(280),a=r(252);t.exports=Object.keys||function(t){return n(t,a)}},function(t,e,r){var n=r(87),a=Math.max,o=Math.min;t.exports=function(t,e){return(t=n(t))<0?a(t+e,0):o(t,e)}},function(t,e,r){var n=r(28),a=r(281),o=r(252),i=r(251)("IE_PROTO"),u=function(){},v=function(){var t,e=r(249)("iframe"),n=o.length;for(e.style.display="none",r(253).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),v=t.F;n--;)delete v.prototype[o[n]];return v()};t.exports=Object.create||function(t,e){var r;return null!==t?(u.prototype=n(t),r=new u,u.prototype=null,r[i]=t):r=v(),void 0===e?r:a(r,e)}},function(t,e,r){var n=r(280),a=r(252).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return n(t,a)}},function(t,e,r){"use strict";var n=r(31),a=r(43),o=r(40),i=r(36)("species");t.exports=function(t){var e=n[t];o&&e&&!e[i]&&a.f(e,i,{configurable:!0,get:function(){return this}})}},function(t,e){t.exports=function(t,e,r,n){if(!(t instanceof e)||void 0!==n&&n in t)throw TypeError(r+": incorrect invocation!");return t}},function(t,e,r){var n=r(85),a=r(293),o=r(264),i=r(28),u=r(37),v=r(266),s={},c={};(e=t.exports=function(t,e,r,P,l){var f,d,p,b,h=l?function(){return t}:v(t),y=n(r,P,e?2:1),m=0;if("function"!=typeof h)throw TypeError(t+" is not iterable!");if(o(h)){for(f=u(t.length);f>m;m++)if((b=e?y(i(d=t[m])[0],d[1]):y(t[m]))===s||b===c)return b}else for(p=h.call(t);!(d=p.next()).done;)if((b=a(p,y,d.value,e))===s||b===c)return b}).BREAK=s,e.RETURN=c},function(t,e,r){var n=r(66);t.exports=function(t,e,r){for(var a in e)n(t,a,e[a],r);return t}},function(t,e,r){var n=r(33);t.exports=function(t,e){if(!n(t)||t._t!==e)throw TypeError("Incompatible receiver, "+e+" required!");return t}},function(t,e,r){"use strict";r.d(e,"c",(function(){return a})),r.d(e,"b",(function(){return o})),r.d(e,"a",(function(){return i}));var n={};function a(t,e){var r={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};n[t]=r}function o(t){return n[t]}function i(t){delete n[t]}},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(5),a=r(3),o=r(1),i=r(80),u=r(4),v=r(8),s=Object(u.b)({broadcastTo_:function(t,e){var r=Object(o.a)(t,"broadcastTo","x"),u=r.shape;if(e.some((function(t){return!(t>0)||t%1!=0})))throw new Error("broadcastTo(): Invalid broadcast shape [".concat(e,"]."));if(e.length<r.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(r.rank,"."));if(e.length>r.rank){for(var s=r.shape.slice();s.length<e.length;)s.unshift(1);r=Object(v.a)(r,s)}for(var c=r.shape,P=Array.from(e),l=e.length-1;l>=0;l--)if(c[l]===e[l])P[l]=1;else if(1!==r.shape[l])throw new Error("broadcastTo(): [".concat(u,"] cannot be broadcast to [").concat(e,"]."));if(0===P.map((function(t,e){return t>1?e:-1})).filter((function(t){return t>=0})).length)return Object(i.a)(r);var f={x:r},d={reps:P};return n.a.runKernel(a.Tc,f,d)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({min_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","min"),u={x:i},v={axis:e,keepDims:r};return n.a.runKernel(a.Pb,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({oneHot_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));var u=Object(o.a)(t,"indices","oneHot","int32"),v={indices:u},s={depth:e,onValue:r,offValue:i};return n.a.runKernel(a.ac,v,s)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({real_:function(t){var e={input:Object(o.a)(t,"input","real")};return n.a.runKernel(a.jc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(7),i=r(4),u=Object(i.b)({ifft_:function(t){Object(o.b)("complex64"===t.dtype,(function(){return"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,".")}));var e={input:t};return n.a.runKernel(a.pb,e)}})},function(t,e){function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"===("undefined"==typeof window?"undefined":r(window))&&(n=window)}t.exports=n},function(t,e,r){var n=r(43).f,a=r(73),o=r(36)("toStringTag");t.exports=function(t,e,r){t&&!a(t=r?t:t.prototype,o)&&n(t,o,{configurable:!0,value:e})}},function(t,e,r){var n=r(86),a=r(36)("toStringTag"),o="Arguments"==n(function(){return arguments}());t.exports=function(t){var e,r,i;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(r=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),a))?r:o?n(e):"Object"==(i=n(e))&&"function"==typeof e.callee?"Arguments":i}},function(t,e,r){var n=r(11),a=r(94),o=r(32),i=r(255),u="["+i+"]",v=RegExp("^"+u+u+"*"),s=RegExp(u+u+"*$"),c=function(t,e,r){var a={},u=o((function(){return!!i[t]()||"​"!="​"[t]()})),v=a[t]=u?e(P):i[t];r&&(a[r]=v),n(n.P+n.F*u,"String",a)},P=c.trim=function(t,e){return t=String(a(t)),1&e&&(t=t.replace(v,"")),2&e&&(t=t.replace(s,"")),t};t.exports=c},function(t,e){t.exports={}},function(t,e){(function(e){t.exports=e}).call(this,{})},function(t,e,r){"use strict";r.r(e),r.d(e,"EffectRenderer",(function(){return s})),r.d(e,"EffectWrapper",(function(){return c}));var n=r(49),a=function(){function t(t,e,r,n,a,o,i,u){void 0===n&&(n=0),void 0===a&&(a=!1),void 0===o&&(o=!1),void 0===i&&(i=!1),t.getScene?this._engine=t.getScene().getEngine():this._engine=t,this._updatable=r,this._instanced=o,this._divisor=u||1,this._data=e,this.byteStride=i?n:n*Float32Array.BYTES_PER_ELEMENT,a||this.create()}return t.prototype.createVertexBuffer=function(t,e,r,n,a,i,u){void 0===i&&(i=!1);var v=i?e:e*Float32Array.BYTES_PER_ELEMENT,s=n?i?n:n*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new o(this._engine,this,t,this._updatable,!0,s,void 0===a?this._instanced:a,v,r,void 0,void 0,!0,this._divisor||u)},t.prototype.isUpdatable=function(){return this._updatable},t.prototype.getData=function(){return this._data},t.prototype.getBuffer=function(){return this._buffer},t.prototype.getStrideSize=function(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT},t.prototype.create=function(t){void 0===t&&(t=null),!t&&this._buffer||(t=t||this._data)&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,t),this._data=t):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(t),this._data=t):this._buffer=this._engine.createVertexBuffer(t))},t.prototype._rebuild=function(){this._buffer=null,this.create(this._data)},t.prototype.update=function(t){this.create(t)},t.prototype.updateDirectly=function(t,e,r,n){void 0===n&&(n=!1),this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,t,n?e:e*Float32Array.BYTES_PER_ELEMENT,r?r*this.byteStride:void 0),this._data=null)},t.prototype.dispose=function(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._buffer=null)},t}(),o=function(){function t(e,r,n,o,i,u,v,s,c,P,l,f,d){if(void 0===l&&(l=!1),void 0===f&&(f=!1),void 0===d&&(d=1),r instanceof a?(this._buffer=r,this._ownsBuffer=!1):(this._buffer=new a(e,r,o,u,i,v,f),this._ownsBuffer=!0),this._kind=n,null==P){var p=this.getData();this.type=t.FLOAT,p instanceof Int8Array?this.type=t.BYTE:p instanceof Uint8Array?this.type=t.UNSIGNED_BYTE:p instanceof Int16Array?this.type=t.SHORT:p instanceof Uint16Array?this.type=t.UNSIGNED_SHORT:p instanceof Int32Array?this.type=t.INT:p instanceof Uint32Array&&(this.type=t.UNSIGNED_INT)}else this.type=P;var b=t.GetTypeByteLength(this.type);f?(this._size=c||(u?u/b:t.DeduceStride(n)),this.byteStride=u||this._buffer.byteStride||this._size*b,this.byteOffset=s||0):(this._size=c||u||t.DeduceStride(n),this.byteStride=u?u*b:this._buffer.byteStride||this._size*b,this.byteOffset=(s||0)*b),this.normalized=l,this._instanced=void 0!==v&&v,this._instanceDivisor=v?d:0}return Object.defineProperty(t.prototype,"instanceDivisor",{get:function(){return this._instanceDivisor},set:function(t){this._instanceDivisor=t,this._instanced=0!=t},enumerable:!1,configurable:!0}),t.prototype._rebuild=function(){this._buffer&&this._buffer._rebuild()},t.prototype.getKind=function(){return this._kind},t.prototype.isUpdatable=function(){return this._buffer.isUpdatable()},t.prototype.getData=function(){return this._buffer.getData()},t.prototype.getBuffer=function(){return this._buffer.getBuffer()},t.prototype.getStrideSize=function(){return this.byteStride/t.GetTypeByteLength(this.type)},t.prototype.getOffset=function(){return this.byteOffset/t.GetTypeByteLength(this.type)},t.prototype.getSize=function(){return this._size},t.prototype.getIsInstanced=function(){return this._instanced},t.prototype.getInstanceDivisor=function(){return this._instanceDivisor},t.prototype.create=function(t){this._buffer.create(t)},t.prototype.update=function(t){this._buffer.update(t)},t.prototype.updateDirectly=function(t,e,r){void 0===r&&(r=!1),this._buffer.updateDirectly(t,e,void 0,r)},t.prototype.dispose=function(){this._ownsBuffer&&this._buffer.dispose()},t.prototype.forEach=function(e,r){t.ForEach(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,e,this.normalized,r)},t.DeduceStride=function(e){switch(e){case t.UVKind:case t.UV2Kind:case t.UV3Kind:case t.UV4Kind:case t.UV5Kind:case t.UV6Kind:return 2;case t.NormalKind:case t.PositionKind:return 3;case t.ColorKind:case t.MatricesIndicesKind:case t.MatricesIndicesExtraKind:case t.MatricesWeightsKind:case t.MatricesWeightsExtraKind:case t.TangentKind:return 4;default:throw new Error("Invalid kind '"+e+"'")}},t.GetTypeByteLength=function(e){switch(e){case t.BYTE:case t.UNSIGNED_BYTE:return 1;case t.SHORT:case t.UNSIGNED_SHORT:return 2;case t.INT:case t.UNSIGNED_INT:case t.FLOAT:return 4;default:throw new Error("Invalid type '"+e+"'")}},t.ForEach=function(e,r,n,a,o,i,u,v){if(e instanceof Array)for(var s=r/4,c=n/4,P=0;P<i;P+=a){for(var l=0;l<a;l++)v(e[s+l],P+l);s+=c}else{var f=e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength),d=t.GetTypeByteLength(o);for(P=0;P<i;P+=a){var p=r;for(l=0;l<a;l++)v(t._GetFloatValue(f,o,p,u),P+l),p+=d;r+=n}}},t._GetFloatValue=function(e,r,n,a){switch(r){case t.BYTE:var o=e.getInt8(n);return a&&(o=Math.max(o/127,-1)),o;case t.UNSIGNED_BYTE:return o=e.getUint8(n),a&&(o/=255),o;case t.SHORT:return o=e.getInt16(n,!0),a&&(o=Math.max(o/32767,-1)),o;case t.UNSIGNED_SHORT:return o=e.getUint16(n,!0),a&&(o/=65535),o;case t.INT:return e.getInt32(n,!0);case t.UNSIGNED_INT:return e.getUint32(n,!0);case t.FLOAT:return e.getFloat32(n,!0);default:throw new Error("Invalid component type "+r)}},t.BYTE=5120,t.UNSIGNED_BYTE=5121,t.SHORT=5122,t.UNSIGNED_SHORT=5123,t.INT=5124,t.UNSIGNED_INT=5125,t.FLOAT=5126,t.PositionKind="position",t.NormalKind="normal",t.TangentKind="tangent",t.UVKind="uv",t.UV2Kind="uv2",t.UV3Kind="uv3",t.UV4Kind="uv4",t.UV5Kind="uv5",t.UV6Kind="uv6",t.ColorKind="color",t.MatricesIndicesKind="matricesIndices",t.MatricesWeightsKind="matricesWeights",t.MatricesIndicesExtraKind="matricesIndicesExtra",t.MatricesWeightsExtraKind="matricesWeightsExtra",t}(),i=function(){function t(t,e,r,n){this.x=t,this.y=e,this.width=r,this.height=n}return t.prototype.toGlobal=function(e,r){return new t(this.x*e,this.y*r,this.width*e,this.height*r)},t.prototype.toGlobalToRef=function(t,e,r){return r.x=this.x*t,r.y=this.y*e,r.width=this.width*t,r.height=this.height*e,this},t.prototype.clone=function(){return new t(this.x,this.y,this.width,this.height)},t}(),u=r(71),v=r(108);v.a.ShadersStore.postprocessVertexShader="\nattribute vec2 position;\nuniform vec2 scale;\n\nvarying vec2 vUV;\nconst vec2 madd=vec2(0.5,0.5);\nvoid main(void) {\nvUV=(position*madd+madd)*scale;\ngl_Position=vec4(position,0.0,1.0);\n}";var s=function(){function t(e,r){var a;void 0===r&&(r=t._DefaultOptions),this.engine=e,this._fullscreenViewport=new i(0,0,1,1),r=Object(n.a)(Object(n.a)({},t._DefaultOptions),r),this._vertexBuffers=((a={})[o.PositionKind]=new o(e,r.positions,o.PositionKind,!1,!1,2),a),this._indexBuffer=e.createIndexBuffer(r.indices)}return t.prototype.setViewport=function(t){void 0===t&&(t=this._fullscreenViewport),this.engine.setViewport(t)},t.prototype.bindBuffers=function(t){this.engine.bindBuffers(this._vertexBuffers,this._indexBuffer,t)},t.prototype.applyEffectWrapper=function(t){this.engine.depthCullingState.depthTest=!1,this.engine.stencilState.stencilTest=!1,this.engine.enableEffect(t.effect),this.bindBuffers(t.effect),t.onApplyObservable.notifyObservers({})},t.prototype.restoreStates=function(){this.engine.depthCullingState.depthTest=!0,this.engine.stencilState.stencilTest=!0},t.prototype.draw=function(){this.engine.drawElementsType(0,0,6)},t.prototype.isRenderTargetTexture=function(t){return void 0!==t.renderList},t.prototype.render=function(t,e){if(void 0===e&&(e=null),t.effect.isReady()){this.setViewport();var r=null===e?null:this.isRenderTargetTexture(e)?e.getInternalTexture():e;r&&this.engine.bindFramebuffer(r),this.applyEffectWrapper(t),this.draw(),r&&this.engine.unBindFramebuffer(r),this.restoreStates()}},t.prototype.dispose=function(){var t=this._vertexBuffers[o.PositionKind];t&&(t.dispose(),delete this._vertexBuffers[o.PositionKind]),this._indexBuffer&&this.engine._releaseBuffer(this._indexBuffer)},t._DefaultOptions={positions:[1,1,-1,1,-1,-1,1,-1],indices:[0,1,2,0,2,3]},t}(),c=function(){function t(t){var e,r=this;this.onApplyObservable=new u.Observable;var n=t.uniformNames||[];t.vertexShader?e={fragmentSource:t.fragmentShader,vertexSource:t.vertexShader,spectorName:t.name||"effectWrapper"}:(n.push("scale"),e={fragmentSource:t.fragmentShader,vertex:"postprocess",spectorName:t.name||"effectWrapper"},this.onApplyObservable.add((function(){r.effect.setFloat2("scale",1,1)})));var a=t.defines?t.defines.join("\n"):"";t.useShaderStore?(e.fragment=e.fragmentSource,e.vertex||(e.vertex=e.vertexSource),delete e.fragmentSource,delete e.vertexSource,this.effect=t.engine.createEffect(e.spectorName,t.attributeNames||["position"],n,t.samplerNames,a,void 0,t.onCompiled)):this.effect=new v.a(e,t.attributeNames||["position"],n,t.samplerNames,t.engine,a,void 0,t.onCompiled)}return t.prototype.dispose=function(){this.effect.dispose()},t}()},function(t,e,r){"use strict";r.r(e),r.d(e,"validateUpdateShape",(function(){return i})),r.d(e,"validateInput",(function(){return u})),r.d(e,"calculateShapes",(function(){return v}));var n=r(7);function a(t){return function(t){if(Array.isArray(t))return o(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return o(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t,e,r){var n=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(r.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(n,", and batchDim: ").concat(a,".");if(r.rank<a)throw new Error(o+" update.rank < ".concat(a,". "));if(t.length<n+(r.rank-a))throw new Error(o+" Output shape length < ".concat(n+(r.rank-a)));if(r.rank!==a+t.length-n)throw new Error(o+" update.rank != ".concat(a+t.length-n));for(var i=0;i<a;++i)if(r.shape[i]!==e.shape[i])throw new Error(o+" updates.shape[".concat(i,"] (").concat(r.shape[i],") != indices.shape[").concat(i,"] (").concat(e.shape[i],")."));for(var u=0;u<r.rank-a;++u)if(r.shape[u+a]!==t[u+n])throw new Error(o+" updates.shape[".concat(u+a,"] (").concat(r.shape[u+a],") != shape[").concat(u+a,"] (").concat(t[u+a],")"))}function u(t,e,r){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(r.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(r));if(0===r.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}i(r,e,t)}function v(t,e,r){for(var o=e.shape.length,i=o>1?e.shape[o-1]:1,u=r.length,v=1,s=i;s<u;++s)v*=r[s];var c=i<1?1:i;return{sliceRank:i,numUpdates:Object(n.N)(e.shape)/c,sliceSize:v,strides:[].concat(a(Object(n.j)(r.slice(0,i))),[1]),outputSize:Object(n.N)(r)}}},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({floorDiv_:function(t,e){var r=Object(i.a)(t,"a","floorDiv"),u=Object(i.a)(e,"b","floorDiv"),s=v(Object(o.makeTypesMatch)(r,u),2),c={a:r=s[0],b:u=s[1]};return n.a.runKernel(a.gb,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var n=r(5),a=r(3);function o(t,e,r){var o={shape:t,value:e,dtype:r};return n.a.runKernel(a.db,{},o)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(12),v=r(29),s=r(4),c=r(8),P=Object(s.b)({avgPool_:function(t,e,r,s,P){var l=Object(o.a)(t,"x","avgPool","float32");i.b(v.h(r,1),(function(){return"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(1,"'")}));var f=l,d=!1;3===l.rank&&(d=!0,f=Object(c.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),i.b(4===f.rank,(function(){return"Error in avgPool: x must be rank 4 but got rank ".concat(f.rank,".")})),null!=P&&i.b(i.v(s),(function(){return"Error in avgPool: pad must be an integer when using, "+"dimRoundingMode ".concat(P," but got pad ").concat(s,".")}));var p={x:f},b={filterSize:e,strides:r,pad:s,dimRoundingMode:P},h=n.a.runKernel(a.o,p,b);return h=Object(u.a)(h,l.dtype),d?Object(c.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({cos_:function(t){var e={x:Object(o.a)(t,"x","cos")};return n.a.runKernel(a.I,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({cumsum_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],u=Object(o.a)(t,"x","cumsum"),v={x:u},s={axis:e,exclusive:r,reverse:i};return n.a.runKernel(a.L,v,s)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({elu_:function(t){var e={x:Object(o.a)(t,"x","elu")};return n.a.runKernel(a.V,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({floor_:function(t){var e={x:Object(o.a)(t,"x","floor")};return n.a.runKernel(a.fb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({imag_:function(t){var e={input:Object(o.a)(t,"input","imag")};return n.a.runKernel(a.rb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({leakyRelu_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2,r=Object(o.a)(t,"x","leakyRelu"),i={x:r},u={alpha:e};return n.a.runKernel(a.xb,i,u)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return d}));var n=r(1),a=r(7),o=r(13),i=r(44),u=r(47),v=r(89),s=r(81),c=r(4),P=r(8),l=r(14),f=r(19),d=Object(c.b)({logSumExp_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],c=Object(n.a)(t,"x","logSumExp"),d=Object(a.I)(e,c.shape),p=Object(s.a)(c,d,!0),b=Object(l.a)(c,p),h=Object(u.a)(b),y=Object(f.a)(h,d),m=Object(v.a)(y),g=Object(o.a)(Object(P.a)(p,m.shape),m);if(r){var T=Object(i.e)(g.shape,d);return Object(P.a)(g,T)}return g}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(17),u=r(4),v=Object(u.b)({logicalOr_:function(t,e){var r=Object(o.a)(t,"a","logicalOr","bool"),u=Object(o.a)(e,"b","logicalOr","bool");Object(i.a)(r.shape,u.shape);var v={a:r,b:u};return n.a.runKernel(a.Gb,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(29),v=r(4),s=r(8),c=Object(v.b)({maxPool_:function(t,e,r,v,c){var P=Object(o.a)(t,"x","maxPool"),l=P,f=!1;3===P.rank&&(f=!0,l=Object(s.a)(P,[1,P.shape[0],P.shape[1],P.shape[2]])),i.b(4===l.rank,(function(){return"Error in maxPool: input must be rank 4 but got rank ".concat(l.rank,".")})),i.b(u.h(r,1),(function(){return"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(1,"'")})),null!=c&&i.b(i.v(v),(function(){return"Error in maxPool: pad must be an integer when using, "+"dimRoundingMode ".concat(c," but got pad ").concat(v,".")}));var d={x:l},p={filterSize:e,strides:r,pad:v,dimRoundingMode:c},b=n.a.runKernel(a.Ib,d,p);return f?Object(s.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({mod_:function(t,e){var r=Object(i.a)(t,"a","mod"),u=Object(i.a)(e,"b","mod"),s=v(Object(o.makeTypesMatch)(r,u),2),c={a:r=s[0],b:u=s[1]};return n.a.runKernel(a.Sb,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({prelu_:function(t,e){var r={x:Object(o.a)(t,"x","prelu"),alpha:Object(o.a)(e,"alpha","prelu")};return n.a.runKernel(a.gc,r)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({relu6_:function(t){var e={x:Object(o.a)(t,"x","relu6")};return n.a.runKernel(a.nc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(7),i=r(4),u=Object(i.b)({fft_:function(t){Object(o.b)("complex64"===t.dtype,(function(){return"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,".")}));var e={input:t};return n.a.runKernel(a.cb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return p}));var n=r(7),a=r(68),o=r(34),i=r(163),u=r(4),v=r(146),s=r(8),c=r(26),P=r(90),l=r(79),f=r(22),d=r(171),p=Object(u.b)({rfft_:function(t,e){Object(n.b)("float32"===t.dtype,(function(){return"The dtype for rfft() must be real value but got ".concat(t.dtype)}));var r,u=t.shape[t.shape.length-1],p=t.size/u;if(null!=e&&e<u){var b=t.shape.map((function(t){return 0})),h=t.shape.map((function(t){return t}));h[t.shape.length-1]=e,r=Object(c.a)(t,b,h),u=e}else if(null!=e&&e>u){var y=t.shape.map((function(t){return t}));y[t.shape.length-1]=e-u,r=Object(o.a)([t,Object(l.a)(y)],t.shape.length-1),u=e}else r=t;var m=Object(f.a)(r),g=Object(s.a)(Object(a.a)(r,m),[p,u]),T=Object(d.a)(g),j=Math.floor(u/2)+1,z=Object(v.a)(T),w=Object(i.a)(T),D=Object(P.a)(z,[j,u-j],z.shape.length-1),x=Object(P.a)(w,[j,u-j],w.shape.length-1),O=r.shape.slice();return O[r.shape.length-1]=j,Object(s.a)(Object(a.a)(D[0],x[0]),O)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({unsortedSegmentSum_:function(t,e,r){var u=Object(o.a)(t,"x","unsortedSegmentSum"),v=Object(o.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(i.b)(Object(i.v)(r),(function(){return"numSegments must be of dtype int"}));var s={x:u,segmentIds:v},c={numSegments:r};return n.a.runKernel(a.Yc,s,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return h}));var n=r(1),a=r(7),o=r(50),i=r(44),u=r(81),v=r(144),s=r(4),c=r(54),P=r(8),l=r(16),f=r(42),d=r(25),p=r(19);function b(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return Object(o.a)(t);if(1!==t.rank&&null===r)return b(Object(P.a)(t,[-1]),e,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===e)return Object(p.a)(Object(o.a)(t),r);if(e===1/0)return Object(u.a)(Object(o.a)(t),r);if(e===-1/0)return Object(v.a)(Object(o.a)(t),r);if("euclidean"===e||2===e)return Object(f.a)(Object(p.a)(Object(c.a)(Object(o.a)(t),Object(l.a)(2,"int32")),r));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(r)&&2===r.length){if(1===e)return Object(u.a)(Object(p.a)(Object(o.a)(t),r[0]),r[1]-1);if(e===1/0)return Object(u.a)(Object(p.a)(Object(o.a)(t),r[1]),r[0]);if(e===-1/0)return Object(v.a)(Object(p.a)(Object(o.a)(t),r[1]),r[0]);if("fro"===e||"euclidean"===e)return Object(f.a)(Object(p.a)(Object(d.a)(t),r));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(r))}var h=Object(s.b)({norm_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],u=b(t=Object(n.a)(t,"x","norm"),e,r),v=u.shape;if(o){var s=Object(a.I)(r,t.shape);v=i.e(u.shape,s)}return Object(P.a)(u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(7),i=r(4),u=r(8),v=Object(i.b)({conv2DBackpropInput_:function(t,e,r,i,v){var s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",c=arguments.length>6?arguments[6]:void 0;o.b(t.length===e.rank,(function(){return"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")}));var P=t,l=e,f=!1;3===e.rank&&(f=!0,l=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),P=[1,t[0],t[1],t[2]]),o.b(4===P.length,(function(){return"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(P.length,".")})),o.b(4===l.rank,(function(){return"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(l.rank)})),o.b(4===r.rank,(function(){return"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(r.rank)}));var d="NHWC"===s?P[3]:P[1],p="NHWC"===s?l.shape[3]:l.shape[1];o.b(d===r.shape[2],(function(){return"Error in conv2dDerInput: depth of input (".concat(d,") must ")+"match input depth for filter ".concat(r.shape[2],".")})),o.b(p===r.shape[3],(function(){return"Error in conv2dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(r.shape[3],".")})),null!=c&&o.b(o.v(v),(function(){return"Error in conv2dDerInput: pad must be an integer when using, "+"dimRoundingMode ".concat(c," but got pad ").concat(v,".")}));var b={dy:l,filter:r},h={strides:i,pad:v,dataFormat:s,dimRoundingMode:c,inputShape:P},y=n.a.runKernel(a.E,b,h);return f?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,r){"use strict";r.r(e),r.d(e,"TEST_EPSILON_FLOAT16",(function(){return u})),r.d(e,"expectArraysClose",(function(){return v})),r.d(e,"testEpsilon",(function(){return s})),r.d(e,"expectPromiseToFail",(function(){return P})),r.d(e,"expectArraysEqual",(function(){return l})),r.d(e,"expectNumbersClose",(function(){return f})),r.d(e,"expectValuesInRange",(function(){return p})),r.d(e,"expectArrayBuffersEqual",(function(){return b})),r.d(e,"encodeStrings",(function(){return h}));var n=r(5),a=r(1),o=r(7),i=r(10),u=.1;function v(t,e,r){return null==r&&(r=s()),c(t,e,(function(t,e){return d(t,e,r)}))}function s(){return 32===n.a.backend.floatPrecision()?.001:u}function c(t,e,r){var n=!0;if((Object(o.A)(t)||Object(o.A)(e))&&(n=!1),Object(o.A)(t)&&Object(o.A)(e)&&(n=!0),n){var i=t.constructor.name,u=e.constructor.name;if(i!==u)throw new Error("Arrays are of different type. Actual: ".concat(i,". ")+"Expected: ".concat(u))}if(Array.isArray(t)&&Array.isArray(e)){var v=Object(a.c)(t),s=Object(a.c)(e);if(!Object(o.a)(v,s))throw new Error("Arrays have different shapes. "+"Actual: [".concat(v,"]. Expected: [").concat(s,"]"))}var c=Object(o.A)(t)?t:Object(o.m)(t),P=Object(o.A)(e)?e:Object(o.m)(e);if(c.length!==P.length)throw new Error("Arrays have different lengths actual: ".concat(c.length," vs ")+"expected: ".concat(P.length,".\n")+"Actual:   ".concat(c,".\n")+"Expected: ".concat(P,"."));for(var l=0;l<P.length;++l){var f=c[l],d=P[l];if(!r(f,d))throw new Error("Arrays differ: actual[".concat(l,"] = ").concat(f,", expected[").concat(l,"] = ").concat(d,".\n")+"Actual:   ".concat(c,".\n")+"Expected: ".concat(P,"."))}}function P(t,e){t().then((function(){return e.fail()}),(function(){return e()}))}function l(t,e){var r="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return Object(o.z)(t)||Object(o.z)(t[0])||Object(o.z)(e)||Object(o.z)(e[0])?c(t,r,(function(t,e){return t==e})):c(t,e,(function(t,e){return d(t,e,0)}))}function f(t,e,r){if(null==r&&(r=s()),!d(t,e,r))throw new Error("Numbers differ: actual === ".concat(t,", expected === ").concat(e))}function d(t,e,r){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>r)}function p(t,e,r){for(var n=0;n<t.length;n++)if(t[n]<e||t[n]>r)throw new Error("Value out of range:".concat(t[n]," low: ").concat(e,", high: ").concat(r))}function b(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}function h(t){for(var e=0;e<t.length;e++){var r=t[e];Array.isArray(r)?h(r):t[e]=Object(i.encodeString)(r)}return t}},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(7),i=r(4),u=r(8),v=Object(i.b)({conv2DBackpropFilter_:function(t,e,r,i,v){var s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",c=arguments.length>6?arguments[6]:void 0,P=t;3===t.rank&&(P=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));var l=e;3===l.rank&&(l=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),o.b(4===P.rank,(function(){return"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(P.shape,".")})),o.b(4===l.rank,(function(){return"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(l.shape,".")})),o.b(4===r.length,(function(){return"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(r,".")}));var f="NHWC"===s?P.shape[3]:P.shape[1],d="NHWC"===s?l.shape[3]:l.shape[1];o.b(f===r[2],(function(){return"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(r[2],".")})),o.b(d===r[3],(function(){return"Error in conv2dDerFilter: depth of dy (".concat(d,") must ")+"match output depth for filter (".concat(r[3],").")})),null!=c&&o.b(o.v(v),(function(){return"Error in conv2dDerFilter: pad must be an integer when using, "+"dimRoundingMode ".concat(c," but got pad ").concat(v,".")}));var p={x:P,dy:l},b={strides:i,pad:v,dataFormat:s,dimRoundingMode:c,filterShape:r};return n.a.runKernel(a.D,p,b)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var n=function(){function t(){}return t.CreateCanvas=function(t,e){if("undefined"==typeof document)return new OffscreenCanvas(t,e);var r=document.createElement("canvas");return r.width=t,r.height=e,r},t}()},function(t,e,r){var n=r(84),a=r(31),o=a["__core-js_shared__"]||(a["__core-js_shared__"]={});(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:n.version,mode:r(115)?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(t,e,r){var n=r(86);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==n(t)?t.split(""):Object(t)}},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,r){"use strict";var n=r(28);t.exports=function(){var t=n(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,r){var n=r(28),a=r(58),o=r(36)("species");t.exports=function(t,e){var r,i=n(t).constructor;return void 0===i||null==(r=n(i)[o])?e:a(r)}},function(t,e,r){"use strict";var n=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,r=e&&t[e],n=0;if(r)return r.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(e,"__esModule",{value:!0}),e.createVideoElementForStream=e.deepClone=e.remove=void 0,e.remove=function(t,e){for(var r=t.length;r--;)e(t[r])&&t.splice(r,1);return t},e.deepClone=function(t){var r;if(!t||"object"!=typeof t)return t;if(t instanceof Date)return(r=new Date).setTime(t.getTime()),r;if(t instanceof Array){r=[];for(var a=t.length,o=0;o<a;o++)r[o]=e.deepClone(t[o]);return r}if(t instanceof Object)return r={},function(t,e){var r,a,o=Object.keys(t);try{for(var i=n(o),u=i.next();!u.done;u=i.next()){var v=u.value;t.hasOwnProperty(v)&&e(t[v],v)}}catch(t){r={error:t}}finally{try{u&&!u.done&&(a=i.return)&&a.call(i)}finally{if(r)throw r.error}}}(t,(function(t,n){r[n]=e.deepClone(t)})),r;throw new Error("Unable to copy: "+JSON.stringify(t))},e.createVideoElementForStream=function(t,e){var r=e.createElement("video");return r.autoplay=!0,r.srcObject=t,r}},function(t,e,r){"use strict";(function(t){r(5);var e=r(209),n=r(24),a=Object(n.c)();a.registerFlag("DEBUG",(function(){return!1}),(function(t){t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),a.registerFlag("IS_BROWSER",(function(){return e.isBrowser()})),a.registerFlag("IS_NODE",(function(){return void 0!==t&&void 0!==t.versions&&void 0!==t.versions.node})),a.registerFlag("IS_CHROME",(function(){return"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)})),a.registerFlag("PROD",(function(){return!1})),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(function(){return a.getBool("DEBUG")})),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",(function(){return!0})),a.registerFlag("IS_TEST",(function(){return!1})),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(function(){return!0}))}).call(this,r(208))},function(t,e,r){"use strict";r.r(e),r.d(e,"ThinTexture",(function(){return a}));var n=function(){function t(t,e){this.width=t,this.height=e}return t.prototype.toString=function(){return"{W: "+this.width+", H: "+this.height+"}"},t.prototype.getClassName=function(){return"Size"},t.prototype.getHashCode=function(){var t=0|this.width;return 397*t^(0|this.height)},t.prototype.copyFrom=function(t){this.width=t.width,this.height=t.height},t.prototype.copyFromFloats=function(t,e){return this.width=t,this.height=e,this},t.prototype.set=function(t,e){return this.copyFromFloats(t,e)},t.prototype.multiplyByFloats=function(e,r){return new t(this.width*e,this.height*r)},t.prototype.clone=function(){return new t(this.width,this.height)},t.prototype.equals=function(t){return!!t&&this.width===t.width&&this.height===t.height},Object.defineProperty(t.prototype,"surface",{get:function(){return this.width*this.height},enumerable:!1,configurable:!0}),t.Zero=function(){return new t(0,0)},t.prototype.add=function(e){return new t(this.width+e.width,this.height+e.height)},t.prototype.subtract=function(e){return new t(this.width-e.width,this.height-e.height)},t.Lerp=function(e,r,n){return new t(e.width+(r.width-e.width)*n,e.height+(r.height-e.height)*n)},t}(),a=function(){function t(t){this._wrapU=1,this._wrapV=1,this.wrapR=1,this.anisotropicFilteringLevel=4,this.delayLoadState=0,this._texture=null,this._engine=null,this._cachedSize=n.Zero(),this._cachedBaseSize=n.Zero(),this._texture=t,this._texture&&(this._engine=this._texture.getEngine())}return Object.defineProperty(t.prototype,"wrapU",{get:function(){return this._wrapU},set:function(t){this._wrapU=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"wrapV",{get:function(){return this._wrapV},set:function(t){this._wrapV=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"coordinatesMode",{get:function(){return 0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isCube",{get:function(){return!!this._texture&&this._texture.isCube},set:function(t){this._texture&&(this._texture.isCube=t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"is3D",{get:function(){return!!this._texture&&this._texture.is3D},set:function(t){this._texture&&(this._texture.is3D=t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"is2DArray",{get:function(){return!!this._texture&&this._texture.is2DArray},set:function(t){this._texture&&(this._texture.is2DArray=t)},enumerable:!1,configurable:!0}),t.prototype.getClassName=function(){return"ThinTexture"},t.prototype.isReady=function(){return 4===this.delayLoadState?(this.delayLoad(),!1):!!this._texture&&this._texture.isReady},t.prototype.delayLoad=function(){},t.prototype.getInternalTexture=function(){return this._texture},t.prototype.getSize=function(){if(this._texture){if(this._texture.width)return this._cachedSize.width=this._texture.width,this._cachedSize.height=this._texture.height,this._cachedSize;if(this._texture._size)return this._cachedSize.width=this._texture._size,this._cachedSize.height=this._texture._size,this._cachedSize}return this._cachedSize},t.prototype.getBaseSize=function(){return this.isReady()&&this._texture?this._texture._size?(this._cachedBaseSize.width=this._texture._size,this._cachedBaseSize.height=this._texture._size,this._cachedBaseSize):(this._cachedBaseSize.width=this._texture.baseWidth,this._cachedBaseSize.height=this._texture.baseHeight,this._cachedBaseSize):(this._cachedBaseSize.width=0,this._cachedBaseSize.height=0,this._cachedBaseSize)},t.prototype.updateSamplingMode=function(t){this._texture&&this._engine&&this._engine.updateTextureSamplingMode(t,this._texture)},t.prototype.releaseInternalTexture=function(){this._texture&&(this._texture.dispose(),this._texture=null)},t.prototype.dispose=function(){this._texture&&(this.releaseInternalTexture(),this._engine=null)},t}()},function(t,e,r){"use strict";function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function o(t,e,r){return e&&a(t.prototype,e),r&&a(t,r),t}r.d(e,"a",(function(){return i})),r.d(e,"b",(function(){return u}));var i=function(){function t(e,r){n(this,t),this.backend=e,this.dataMover=r,this.data=new WeakMap,this.dataIdsCount=0}return o(t,[{key:"get",value:function(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}},{key:"set",value:function(t,e){this.dataIdsCount++,this.data.set(t,e)}},{key:"has",value:function(t){return this.data.has(t)}},{key:"delete",value:function(t){return this.dataIdsCount--,this.data.delete(t)}},{key:"numDataIds",value:function(){return this.dataIdsCount}}]),t}(),u=function(){function t(){n(this,t)}return o(t,[{key:"decComplexRef",value:function(t){}},{key:"time",value:function(t){return v("time")}},{key:"read",value:function(t){return v("read")}},{key:"readSync",value:function(t){return v("readSync")}},{key:"numDataIds",value:function(){return v("numDataIds")}},{key:"disposeData",value:function(t){return v("disposeData")}},{key:"write",value:function(t,e,r){return v("write")}},{key:"move",value:function(t,e,r,n){return v("move")}},{key:"memory",value:function(){return v("memory")}},{key:"floatPrecision",value:function(){return v("floatPrecision")}},{key:"epsilon",value:function(){return 32===this.floatPrecision()?1e-7:1e-4}},{key:"batchMatMul",value:function(t,e,r,n){return v("batchMatMul")}},{key:"fusedBatchMatMul",value:function(t){return t.a,t.b,t.transposeA,t.transposeB,t.bias,t.activation,t.preluActivationWeights,v("fusedBatchMatMul")}},{key:"slice",value:function(t,e,r){return v("slice")}},{key:"stridedSlice",value:function(t,e,r,n){return v("stridedSlice")}},{key:"unstack",value:function(t,e){return v("unstack")}},{key:"reverse",value:function(t,e){return v("reverse")}},{key:"concat",value:function(t,e){return v("concat")}},{key:"neg",value:function(t){return v("neg")}},{key:"add",value:function(t,e){return v("add")}},{key:"addN",value:function(t){return v("addN")}},{key:"subtract",value:function(t,e){return v("subtract")}},{key:"multiply",value:function(t,e){return v("multiply")}},{key:"realDivide",value:function(t,e){return v("realDivide")}},{key:"floorDiv",value:function(t,e){return v("floorDiv")}},{key:"sum",value:function(t,e){return v("sum")}},{key:"prod",value:function(t,e){return v("prod")}},{key:"unsortedSegmentSum",value:function(t,e,r){return v("unsortedSegmentSum")}},{key:"argMin",value:function(t,e){return v("argMin")}},{key:"argMax",value:function(t,e){return v("argMax")}},{key:"equal",value:function(t,e){return v("equal")}},{key:"notEqual",value:function(t,e){return v("notEqual")}},{key:"less",value:function(t,e){return v("less")}},{key:"lessEqual",value:function(t,e){return v("lessEqual")}},{key:"greater",value:function(t,e){return v("greater")}},{key:"greaterEqual",value:function(t,e){return v("greaterEqual")}},{key:"logicalNot",value:function(t){return v("logicalNot")}},{key:"logicalAnd",value:function(t,e){return v("logicalAnd")}},{key:"logicalOr",value:function(t,e){return v("logicalOr")}},{key:"where",value:function(t){return v("where")}},{key:"select",value:function(t,e,r){return v("select")}},{key:"topk",value:function(t,e,r){return v("topk")}},{key:"min",value:function(t,e){return v("min")}},{key:"minimum",value:function(t,e){return v("minimum")}},{key:"mod",value:function(t,e){return v("mod")}},{key:"max",value:function(t,e){return v("max")}},{key:"maximum",value:function(t,e){return v("maximum")}},{key:"all",value:function(t,e){return v("all")}},{key:"any",value:function(t,e){return v("any")}},{key:"squaredDifference",value:function(t,e){return v("squaredDifference")}},{key:"ceil",value:function(t){return v("ceil")}},{key:"floor",value:function(t){return v("floor")}},{key:"round",value:function(t){return v("round")}},{key:"sign",value:function(t){return v("sign")}},{key:"isNaN",value:function(t){return v("isNaN")}},{key:"isInf",value:function(t){return v("isInf")}},{key:"isFinite",value:function(t){return v("isFinite")}},{key:"pow",value:function(t,e){return v("pow")}},{key:"exp",value:function(t){return v("exp")}},{key:"expm1",value:function(t){return v("expm1")}},{key:"softmax",value:function(t,e){return v("softmax")}},{key:"log",value:function(t){return v("log")}},{key:"log1p",value:function(t){return v("log1p")}},{key:"sqrt",value:function(t){return v("sqrt")}},{key:"rsqrt",value:function(t){return v("rsqrt")}},{key:"square",value:function(t){return v("square")}},{key:"reciprocal",value:function(t){return v("reciprocal")}},{key:"relu",value:function(t){return v("relu")}},{key:"relu6",value:function(t){return v("relu6")}},{key:"prelu",value:function(t,e){return v("prelu")}},{key:"elu",value:function(t){return v("elu")}},{key:"eluDer",value:function(t,e){return v("eluDer")}},{key:"selu",value:function(t){return v("selu")}},{key:"int",value:function(t){return v("int")}},{key:"clip",value:function(t,e,r){return v("clip")}},{key:"abs",value:function(t){return v("abs")}},{key:"complexAbs",value:function(t){return v("complexAbs")}},{key:"sigmoid",value:function(t){return v("sigmoid")}},{key:"softplus",value:function(t){return v("softplus")}},{key:"sin",value:function(t){return v("sin")}},{key:"cos",value:function(t){return v("cos")}},{key:"tan",value:function(t){return v("tan")}},{key:"asin",value:function(t){return v("asin")}},{key:"acos",value:function(t){return v("acos")}},{key:"atan",value:function(t){return v("atan")}},{key:"atan2",value:function(t,e){return v("atan2")}},{key:"sinh",value:function(t){return v("sinh")}},{key:"cosh",value:function(t){return v("cosh")}},{key:"tanh",value:function(t){return v("tanh")}},{key:"asinh",value:function(t){return v("asinh")}},{key:"acosh",value:function(t){return v("acosh")}},{key:"atanh",value:function(t){return v("atanh")}},{key:"erf",value:function(t){return v("erf")}},{key:"step",value:function(t,e){return v("step")}},{key:"fusedConv2d",value:function(t){return t.input,t.filter,t.convInfo,t.bias,t.activation,t.preluActivationWeights,v("fusedConv2d")}},{key:"conv2d",value:function(t,e,r){return v("conv2d")}},{key:"conv2dDerInput",value:function(t,e,r){return v("conv2dDerInput")}},{key:"conv2dDerFilter",value:function(t,e,r){return v("conv2dDerFilter")}},{key:"fusedDepthwiseConv2D",value:function(t){return t.input,t.filter,t.convInfo,t.bias,t.activation,t.preluActivationWeights,v("fusedDepthwiseConv2D")}},{key:"depthwiseConv2D",value:function(t,e,r){return v("depthwiseConv2D")}},{key:"depthwiseConv2DDerInput",value:function(t,e,r){return v("depthwiseConv2DDerInput")}},{key:"depthwiseConv2DDerFilter",value:function(t,e,r){return v("depthwiseConv2DDerFilter")}},{key:"conv3d",value:function(t,e,r){return v("conv3d")}},{key:"conv3dDerInput",value:function(t,e,r){return v("conv3dDerInput")}},{key:"conv3dDerFilter",value:function(t,e,r){return v("conv3dDerFilter")}},{key:"maxPool",value:function(t,e){return v("maxPool")}},{key:"maxPoolBackprop",value:function(t,e,r,n){return v("maxPoolBackprop")}},{key:"avgPool",value:function(t,e){return v("avgPool")}},{key:"avgPoolBackprop",value:function(t,e,r){return v("avgPoolBackprop")}},{key:"avgPool3d",value:function(t,e){return v("avgPool3d")}},{key:"avgPool3dBackprop",value:function(t,e,r){return v("avgPool3dBackprop")}},{key:"maxPool3d",value:function(t,e){return v("maxPool3d")}},{key:"maxPool3dBackprop",value:function(t,e,r,n){return v("maxPool3dBackprop")}},{key:"reshape",value:function(t,e){return v("reshape")}},{key:"cast",value:function(t,e){return v("cast")}},{key:"tile",value:function(t,e){return v("tile")}},{key:"pad",value:function(t,e,r){return v("pad")}},{key:"transpose",value:function(t,e){return v("transpose")}},{key:"gather",value:function(t,e,r){return v("gather")}},{key:"gatherND",value:function(t,e){return v("gatherND")}},{key:"scatterND",value:function(t,e,r){return v("scatterND")}},{key:"batchToSpaceND",value:function(t,e,r){return v("batchToSpaceND")}},{key:"spaceToBatchND",value:function(t,e,r){return v("spaceToBatchND")}},{key:"resizeBilinear",value:function(t,e,r,n,a){return v("resizeBilinear")}},{key:"resizeBilinearBackprop",value:function(t,e,r){return v("resizeBilinearBackprop")}},{key:"resizeNearestNeighbor",value:function(t,e,r,n,a){return v("resizeNearestNeighbor")}},{key:"resizeNearestNeighborBackprop",value:function(t,e,r){return v("resizeNearestNeighborBackprop")}},{key:"batchNorm",value:function(t,e,r,n,a,o){return v("batchNorm")}},{key:"localResponseNormalization4D",value:function(t,e,r,n,a){return v("localResponseNormalization4D")}},{key:"LRNGrad",value:function(t,e,r,n,a,o,i){return v("LRNGrad")}},{key:"multinomial",value:function(t,e,r,n){return v("multinomial")}},{key:"oneHot",value:function(t,e,r,n){return v("oneHot")}},{key:"cumsum",value:function(t,e,r,n){return v("cumsum")}},{key:"nonMaxSuppression",value:function(t,e,r,n,a){return v("nonMaxSuppression")}},{key:"fft",value:function(t){return v("fft")}},{key:"ifft",value:function(t){return v("ifft")}},{key:"complex",value:function(t,e){return v("complex")}},{key:"real",value:function(t){return v("real")}},{key:"imag",value:function(t){return v("imag")}},{key:"cropAndResize",value:function(t,e,r,n,a,o){return v("cropAndResize")}},{key:"depthToSpace",value:function(t,e,r){return v("depthToSpace")}},{key:"split",value:function(t,e,r){return v("split")}},{key:"sparseToDense",value:function(t,e,r,n){return v("sparseToDense")}},{key:"diag",value:function(t){return v("diag")}},{key:"fill",value:function(t,e,r){return v("fill")}},{key:"onesLike",value:function(t){return v("onesLike")}},{key:"zerosLike",value:function(t){return v("zerosLike")}},{key:"linspace",value:function(t,e,r){return v("linspace")}},{key:"dispose",value:function(){return v("dispose")}}]),t}();function v(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({tanh_:function(t){var e={x:Object(o.a)(t,"x","tanh")};return n.a.runKernel(a.Sc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var n=r(5),a=r(3);function o(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===r)throw new Error("Cannot have a step of zero");var i={start:t,stop:e,step:r,dtype:o};return n.a.runKernel(a.ic,{},i)}},function(t,e,r){"use strict";(function(t,n){var a;function o(){if(null==a){var e;if("undefined"!=typeof window)e=window;else if(void 0!==t)e=t;else if(void 0!==n)e=n;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function i(t,e){var r,n=(null==(r=o())._tfGlobals&&(r._tfGlobals=new Map),r._tfGlobals);if(n.has(t))return n.get(t);var a=e();return n.set(t,a),n.get(t)}r.d(e,"b",(function(){return o})),r.d(e,"a",(function(){return i}))}).call(this,r(148),r(208))},function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var n={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(t,e,r){var n=r(74),a=r(37),o=r(134);t.exports=function(t){return function(e,r,i){var u,v=n(e),s=a(v.length),c=o(i,s);if(t&&r!=r){for(;s>c;)if((u=v[c++])!=u)return!0}else for(;s>c;c++)if((t||c in v)&&v[c]===r)return t||c||0;return!t&&-1}}},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,r){var n=r(86);t.exports=Array.isArray||function(t){return"Array"==n(t)}},function(t,e,r){var n=r(87),a=r(94);t.exports=function(t){return function(e,r){var o,i,u=String(a(e)),v=n(r),s=u.length;return v<0||v>=s?t?"":void 0:(o=u.charCodeAt(v))<55296||o>56319||v+1===s||(i=u.charCodeAt(v+1))<56320||i>57343?t?u.charAt(v):o:t?u.slice(v,v+2):i-56320+(o-55296<<10)+65536}}},function(t,e,r){var n=r(33),a=r(86),o=r(36)("match");t.exports=function(t){var e;return n(t)&&(void 0!==(e=t[o])?!!e:"RegExp"==a(t))}},function(t,e,r){var n=r(36)("iterator"),a=!1;try{var o=[7][n]();o.return=function(){a=!0},Array.from(o,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!a)return!1;var r=!1;try{var o=[7],i=o[n]();i.next=function(){return{done:r=!0}},o[n]=function(){return i},t(o)}catch(t){}return r}},function(t,e,r){"use strict";function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var a=r(150),o=RegExp.prototype.exec;t.exports=function(t,e){var r=t.exec;if("function"==typeof r){var i=r.call(t,e);if("object"!==n(i))throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==a(t))throw new TypeError("RegExp#exec called on incompatible receiver");return o.call(t,e)}},function(t,e,r){"use strict";r(297);var n=r(66),a=r(65),o=r(32),i=r(94),u=r(36),v=r(270),s=u("species"),c=!o((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),P=function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var r="ab".split(t);return 2===r.length&&"a"===r[0]&&"b"===r[1]}();t.exports=function(t,e,r){var l=u(t),f=!o((function(){var e={};return e[l]=function(){return 7},7!=""[t](e)})),d=f?!o((function(){var e=!1,r=/a/;return r.exec=function(){return e=!0,null},"split"===t&&(r.constructor={},r.constructor[s]=function(){return r}),r[l](""),!e})):void 0;if(!f||!d||"replace"===t&&!c||"split"===t&&!P){var p=/./[l],b=r(i,l,""[t],(function(t,e,r,n,a){return e.exec===v?f&&!a?{done:!0,value:p.call(e,r,n)}:{done:!0,value:t.call(r,e,n)}:{done:!1}})),h=b[0],y=b[1];n(String.prototype,t,h),a(RegExp.prototype,l,2==e?function(t,e){return y.call(t,this,e)}:function(t){return y.call(t,this)})}}},function(t,e,r){var n=r(31).navigator;t.exports=n&&n.userAgent||""},function(t,e,r){"use strict";var n=r(31),a=r(11),o=r(66),i=r(140),u=r(116),v=r(139),s=r(138),c=r(33),P=r(32),l=r(197),f=r(149),d=r(256);t.exports=function(t,e,r,p,b,h){var y=n[t],m=y,g=b?"set":"add",T=m&&m.prototype,j={},z=function(t){var e=T[t];o(T,t,"delete"==t||"has"==t?function(t){return!(h&&!c(t))&&e.call(this,0===t?0:t)}:"get"==t?function(t){return h&&!c(t)?void 0:e.call(this,0===t?0:t)}:"add"==t?function(t){return e.call(this,0===t?0:t),this}:function(t,r){return e.call(this,0===t?0:t,r),this})};if("function"==typeof m&&(h||T.forEach&&!P((function(){(new m).entries().next()})))){var w=new m,D=w[g](h?{}:-0,1)!=w,x=P((function(){w.has(1)})),O=l((function(t){new m(t)})),L=!h&&P((function(){for(var t=new m,e=5;e--;)t[g](e,e);return!t.has(-0)}));O||((m=e((function(e,r){s(e,m,t);var n=d(new y,e,m);return null!=r&&v(r,b,n[g],n),n}))).prototype=T,T.constructor=m),(x||L)&&(z("delete"),z("has"),b&&z("get")),(L||D)&&z(g),h&&T.clear&&delete T.clear}else m=p.getConstructor(e,t,b,g),i(m.prototype,r),u.NEED=!0;return f(m,t),j[t]=m,a(a.G+a.W+a.F*(m!=y),j),h||p.setStrong(m,t,b),m}},function(t,e,r){for(var n,a=r(31),o=r(65),i=r(132),u=i("typed_array"),v=i("view"),s=!(!a.ArrayBuffer||!a.DataView),c=s,P=0,l="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");P<9;)(n=a[l[P++]])?(o(n.prototype,u,!0),o(n.prototype,v,!0)):c=!1;t.exports={ABV:s,CONSTR:c,TYPED:u,VIEW:v}},function(t,e,r){"use strict";t.exports=r(115)||!r(32)((function(){var t=Math.random();__defineSetter__.call(null,t,(function(){})),delete r(31)[t]}))},function(t,e,r){"use strict";var n=r(11);t.exports=function(t){n(n.S,t,{of:function(){for(var t=arguments.length,e=new Array(t);t--;)e[t]=arguments[t];return new this(e)}})}},function(t,e,r){"use strict";var n=r(11),a=r(58),o=r(85),i=r(139);t.exports=function(t){n(n.S,t,{from:function(t){var e,r,n,u,v=arguments[1];return a(this),(e=void 0!==v)&&a(v),null==t?new this:(r=[],e?(n=0,u=o(v,arguments[2],2),i(t,!1,(function(t){r.push(u(t,n++))}))):i(t,!1,r.push,r),new this(r))}})}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PowerPreference=e.VideoEffectType=void 0,function(t){t.Off="off",t.BackgroundBlur="blur",t.BackgroundReplacement="replacement"}(e.VideoEffectType||(e.VideoEffectType={})),function(t){t.Default="default",t.HighPerformance="high-performance",t.LowPower="low-power"}(e.PowerPreference||(e.PowerPreference={}))},function(t,e,r){"use strict";r.r(e);var n=r(49),a=r(63),o=r(48),i=r(242),u=r(83);function v(t){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}u.ThinEngine.prototype.createRenderTargetTexture=function(t,e){var r=new i.a;void 0!==e&&"object"===v(e)?(r.generateMipMaps=e.generateMipMaps,r.generateDepthBuffer=!!e.generateDepthBuffer,r.generateStencilBuffer=!!e.generateStencilBuffer,r.type=void 0===e.type?0:e.type,r.samplingMode=void 0===e.samplingMode?3:e.samplingMode,r.format=void 0===e.format?5:e.format):(r.generateMipMaps=e,r.generateDepthBuffer=!0,r.generateStencilBuffer=!1,r.type=0,r.samplingMode=3,r.format=5),(1!==r.type||this._caps.textureFloatLinearFiltering)&&(2!==r.type||this._caps.textureHalfFloatLinearFiltering)||(r.samplingMode=1),1!==r.type||this._caps.textureFloat||(r.type=0,o.a.Warn("Float textures are not supported. Render target forced to TEXTURETYPE_UNSIGNED_BYTE type"));var n=this._gl,u=new a.InternalTexture(this,a.InternalTextureSource.RenderTarget),s=t.width||t,c=t.height||t,P=t.layers||0,l=this._getSamplingParameters(r.samplingMode,!!r.generateMipMaps),f=0!==P?n.TEXTURE_2D_ARRAY:n.TEXTURE_2D,d=this._getRGBABufferInternalSizedFormat(r.type,r.format),p=this._getInternalFormat(r.format),b=this._getWebGLTextureType(r.type);this._bindTextureDirectly(f,u),0!==P?(u.is2DArray=!0,n.texImage3D(f,0,d,s,c,P,0,p,b,null)):n.texImage2D(f,0,d,s,c,0,p,b,null),n.texParameteri(f,n.TEXTURE_MAG_FILTER,l.mag),n.texParameteri(f,n.TEXTURE_MIN_FILTER,l.min),n.texParameteri(f,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(f,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),r.generateMipMaps&&this._gl.generateMipmap(f),this._bindTextureDirectly(f,null);var h=this._currentFramebuffer,y=n.createFramebuffer();return this._bindUnboundFramebuffer(y),u._depthStencilBuffer=this._setupFramebufferDepthAttachments(!!r.generateStencilBuffer,r.generateDepthBuffer,s,c),u.is2DArray||n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,u._webGLTexture,0),this._bindUnboundFramebuffer(h),u._framebuffer=y,u.baseWidth=s,u.baseHeight=c,u.width=s,u.height=c,u.depth=P,u.isReady=!0,u.samples=1,u.generateMipMaps=!!r.generateMipMaps,u.samplingMode=r.samplingMode,u.type=r.type,u.format=r.format,u._generateDepthBuffer=r.generateDepthBuffer,u._generateStencilBuffer=!!r.generateStencilBuffer,this._internalTexturesCache.push(u),u},u.ThinEngine.prototype.createDepthStencilTexture=function(t,e){if(e.isCube){var r=t.width||t;return this._createDepthStencilCubeTexture(r,e)}return this._createDepthStencilTexture(t,e)},u.ThinEngine.prototype._createDepthStencilTexture=function(t,e){var r=this._gl,i=t.layers||0,u=0!==i?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D,v=new a.InternalTexture(this,a.InternalTextureSource.Depth);if(!this._caps.depthTextureExtension)return o.a.Error("Depth texture is not supported by your browser or hardware."),v;var s=Object(n.a)({bilinearFiltering:!1,comparisonFunction:0,generateStencil:!1},e);this._bindTextureDirectly(u,v,!0),this._setupDepthStencilTexture(v,t,s.generateStencil,s.bilinearFiltering,s.comparisonFunction);var c=s.generateStencil?r.UNSIGNED_INT_24_8:r.UNSIGNED_INT,P=s.generateStencil?r.DEPTH_STENCIL:r.DEPTH_COMPONENT,l=P;return this.webGLVersion>1&&(l=s.generateStencil?r.DEPTH24_STENCIL8:r.DEPTH_COMPONENT24),v.is2DArray?r.texImage3D(u,0,l,v.width,v.height,i,0,P,c,null):r.texImage2D(u,0,l,v.width,v.height,0,P,c,null),this._bindTextureDirectly(u,null),v}},function(t,e){var r,n,a=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function u(t){if(r===setTimeout)return setTimeout(t,0);if((r===o||!r)&&setTimeout)return r=setTimeout,setTimeout(t,0);try{return r(t,0)}catch(e){try{return r.call(null,t,0)}catch(e){return r.call(this,t,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:o}catch(t){r=o}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(t){n=i}}();var v,s=[],c=!1,P=-1;function l(){c&&v&&(c=!1,v.length?s=v.concat(s):P=-1,s.length&&f())}function f(){if(!c){var t=u(l);c=!0;for(var e=s.length;e;){for(v=s,s=[];++P<e;)v&&v[P].run();P=-1,e=s.length}v=null,c=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function p(){}a.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];s.push(new d(t,e)),1!==s.length||c||u(f)},d.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=p,a.addListener=p,a.once=p,a.off=p,a.removeListener=p,a.removeAllListeners=p,a.emit=p,a.prependListener=p,a.prependOnceListener=p,a.listeners=function(t){return[]},a.binding=function(t){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(t){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(t,e,r){"use strict";function n(){if("undefined"!=typeof navigator&&null!=navigator){var t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}r.r(e),r.d(e,"isMobile",(function(){return n})),r.d(e,"isBrowser",(function(){return a}))},function(t,e,r){"use strict";function n(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}r.d(e,"a",(function(){return n}))},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({all_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","all","bool"),u={x:i},v={axis:e,keepDims:r};return n.a.runKernel(a.f,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({any_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","any","bool"),u={x:i},v={axis:e,keepDims:r};return n.a.runKernel(a.g,u,v)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({argMax_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=Object(o.a)(t,"x","argMax"),i={x:r},u={axis:e};return n.a.runKernel(a.h,i,u)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({argMin_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=Object(o.a)(t,"x","argMin"),i={x:r},u={axis:e};return n.a.runKernel(a.i,i,u)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(23),i=r(1),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({atan2_:function(t,e){var r=Object(i.a)(t,"a","atan2"),u=Object(i.a)(e,"b","atan2"),s=v(Object(o.makeTypesMatch)(r,u),2),c={a:r=s[0],b:u=s[1]};return n.a.runKernel(a.m,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(1),a=r(7),o=r(78),i=r(29),u=r(4),v=r(8),s=Object(u.b)({conv1d_:function(t,e,r,u){var s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,P=arguments.length>6?arguments[6]:void 0,l=Object(n.a)(t,"x","conv1d"),f=Object(n.a)(e,"filter","conv1d"),d=l,p=!1;2===l.rank&&(p=!0,d=Object(v.a)(l,[1,l.shape[0],l.shape[1]])),a.b(3===d.rank,(function(){return"Error in conv1d: input must be rank 3, but got rank ".concat(d.rank,".")})),a.b(3===f.rank,(function(){return"Error in conv1d: filter must be rank 3, but got rank "+"".concat(f.rank,".")})),null!=P&&a.b(a.v(u),(function(){return"Error in conv1d: pad must be an integer when using, "+"dimRoundingMode ".concat(P," but got pad ").concat(u,".")})),a.b(d.shape[2]===f.shape[1],(function(){return"Error in conv1d: depth of input (".concat(d.shape[2],") must match ")+"input depth for filter ".concat(f.shape[1],".")})),a.b(i.h(r,c),(function(){return"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(r," and dilation '").concat(c,"'")})),a.b("NWC"===s,(function(){return"Error in conv1d: got dataFormat of ".concat(s," but only NWC is currently supported.")}));var b=Object(v.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]]),h=Object(v.a)(d,[d.shape[0],1,d.shape[1],d.shape[2]]),y=[1,r],m=[1,c],g="NHWC",T=Object(o.a)(h,b,y,u,g,m,P);return p?Object(v.a)(T,[T.shape[2],T.shape[3]]):Object(v.a)(T,[T.shape[0],T.shape[2],T.shape[3]])}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));var n=r(1),a=r(175),o=r(4),i=Object(o.b)({conv2dTranspose_:function(t,e,r,o,i,u){var v=Object(n.a)(t,"x","conv2dTranspose"),s=Object(n.a)(e,"filter","conv2dTranspose");return Object(a.a)(r,v,s,o,i,"NHWC",u)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({cosh_:function(t){var e={x:Object(o.a)(t,"x","cosh")};return n.a.runKernel(a.J,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({depthToSpace_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC",u=Object(o.a)(t,"x","depthToSpace"),v="NHWC"===r?u.shape[1]:u.shape[2],s="NHWC"===r?u.shape[2]:u.shape[3],c="NHWC"===r?u.shape[3]:u.shape[1];i.b(v*e>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n    ".concat(v," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(u.shape)})),i.b(s*e>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(e," for depthToSpace with input shape\n        ").concat(u.shape)})),i.b(c%(e*e)==0,(function(){return"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(c," for depthToSpace with input shape ").concat(u.shape)}));var P={x:u},l={blockSize:e,dataFormat:r};return n.a.runKernel(a.N,P,l)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=r(8),s=Object(u.b)({dilation2d_:function(t,e,r,u){var s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",P=Object(o.a)(t,"x","dilation2d"),l=Object(o.a)(e,"filter","dilation2d");i.b(3===P.rank||4===P.rank,(function(){return"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(P.rank,".")})),i.b(3===l.rank,(function(){return"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(l.rank,".")})),i.b("NHWC"===c,(function(){return"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(c)}));var f=P,d=!1;3===P.rank&&(f=Object(v.a)(P,[1,P.shape[0],P.shape[1],P.shape[2]]),d=!0);var p={x:f,filter:l},b={strides:r,pad:u,dilations:s},h=n.a.runKernel(a.S,p,b);return d?Object(v.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return l}));var n=r(23),a=r(1),o=r(15),i=r(100),u=r(4),v=r(41),s=r(22);function c(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return P(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?P(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var l=Object(u.b)({divNoNan_:function(t,e){var r=Object(a.a)(t,"a","div"),u=Object(a.a)(e,"b","div"),P=c(Object(n.makeTypesMatch)(r,u),2);r=P[0],u=P[1];var l=Object(o.a)(r,u),f=Object(s.a)(l),d=Object(i.a)(u,f);return Object(v.a)(d,f,l)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(1),a=r(7),o=r(27),i=r(4),u=r(8),v=Object(i.b)({dot_:function(t,e){var r=Object(n.a)(t,"t1","dot"),i=Object(n.a)(e,"t2","dot");a.b(!(1!==r.rank&&2!==r.rank||1!==i.rank&&2!==i.rank),(function(){return"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(r.rank," and ").concat(i.rank,".")}));var v=1===r.rank?r.size:r.shape[1],s=1===i.rank?i.size:i.shape[0];if(a.b(v===s,(function(){return"Error in dot: inner dimensions of inputs must match, but got "+"".concat(v," and ").concat(s,".")})),1===r.rank&&1===i.rank){var c=Object(u.a)(r,[1,-1]),P=Object(u.a)(i,[-1,1]),l=Object(o.a)(c,P);return Object(u.a)(l,[])}if(1===r.rank&&2===i.rank){var f=Object(u.a)(r,[1,-1]),d=Object(u.a)(i,[i.shape[0],i.shape[1]]),p=Object(o.a)(f,d);return Object(u.a)(p,[p.size])}if(2===r.rank&&1===i.rank){var b=Object(u.a)(i,[-1,1]),h=Object(o.a)(r,b);return Object(u.a)(h,[h.size])}var y=Object(u.a)(i,[i.shape[0],i.shape[1]]);return Object(o.a)(r,y)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=r(8),s=Object(u.b)({localResponseNormalization_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5,c=Object(o.a)(t,"x","localResponseNormalization");i.b(4===c.rank||3===c.rank,(function(){return"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(c.rank,".")})),i.b(i.v(e),(function(){return"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,".")}));var P=c,l=!1;3===c.rank&&(l=!0,P=Object(v.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));var f={x:P},d={depthRadius:e,bias:r,alpha:u,beta:s},p=n.a.runKernel(a.vb,f,d);return l?Object(v.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({log1p_:function(t){var e={x:Object(o.a)(t,"x","log1p")};return n.a.runKernel(a.Cb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({softplus_:function(t){var e={x:Object(o.a)(t,"x","softplus")};return n.a.runKernel(a.Gc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(1),a=r(17),o=r(69),i=r(123),u=r(166),v=r(4),s=Object(v.b)({logicalXor_:function(t,e){var r=Object(n.a)(t,"a","logicalXor","bool"),v=Object(n.a)(e,"b","logicalXor","bool");return Object(a.a)(r.shape,v.shape),Object(o.a)(Object(u.a)(t,e),Object(i.a)(Object(o.a)(t,e)))}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({mirrorPad_:function(t,e,r){i.b("reflect"===r||"symmetric"===r,(function(){return"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(r,".")}));var u=Object(o.a)(t,"x","mirrorPad");if(0===u.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(e.length===u.rank,(function(){return"Padding doesn't match input. Must be ".concat(u.rank,". ")+"Got ".concat(e.length,".")}));for(var v="reflect"===r?1:0,s=function(t){i.b(2===e[t].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),i.b(e[t][0]>=0&&e[t][0]<=u.shape[t]-v&&e[t][1]>=0&&e[t][1]<=u.shape[t]-v,(function(){return"Padding in dimension ".concat(t," cannot be greater than or equal ")+"to ".concat(u.shape[t]-v," or less than 0 for input of ")+"shape ".concat(u.shape)}))},c=0;c<u.rank;c++)s(c);var P={paddings:e,mode:r},l={x:u};return n.a.runKernel(a.Rb,l,P)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return d}));var n=r(1),a=r(7),o=r(158),i=r(120),u=r(29),v=r(167),s=r(4),c=r(8),P=r(126);function l(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return f(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?f(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var d=Object(s.b)({pool_:function(t,e,r,s,f,d){null==f&&(f=[1,1]),null==d&&(d=1),0===s&&(s="valid");var p=Object(n.a)(t,"x","maxPool"),b=p,h=!1;3===p.rank&&(h=!0,b=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),a.b(u.h(d,f),(function(){return"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(d," and dilations '").concat(f,"'")}));var y,m=u.e(b.shape,e,d,f,s),g=[m.dilationHeight,m.dilationWidth];y="same"===s?function(t,e){var r=t.map((function(t,r){return t+(t-1)*(e[r]-1)})).map((function(t){return t-1})),n=r.map((function(t){return Math.floor(t/2)})),a=r.map((function(t,e){return t-n[e]}));return r.map((function(t,e){return[n[e],a[e]]}))}([m.filterHeight,m.filterWidth],g):[[0,0],[0,0]];var T=1===g[0]&&1===g[1],j=l(function(t,e,r){var n=r.map((function(t){return t[0]})),a=r.map((function(t){return t[1]})),o=t.concat(n,a),i=e.map((function(t,e){return(t-o[e]%t)%t})),u=a.map((function(t,e){return t+i[e]}));return[e.map((function(t,e){return[n[e],u[e]]})),e.map((function(t,e){return[0,i[e]]}))]}([m.inHeight,m.inWidth],g,y),2),z=j[0],w=j[1],D=T?s:"valid",x=T?b:Object(P.a)(b,g,z),O=("avg"===r?function(){return Object(o.a)(x,e,d,D)}:function(){return Object(v.a)(x,e,d,D)})(),L=T?O:Object(i.a)(O,g,w);return h?Object(c.a)(L,[L.shape[1],L.shape[2],L.shape[3]]):L}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(12),u=r(4),v=Object(u.b)({prod_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],u=Object(o.a)(t,"x","prod");"bool"===u.dtype&&(u=Object(i.a)(u,"int32"));var v={x:u},s={axis:e,keepDims:r};return n.a.runKernel(a.hc,v,s)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));var n=r(53),a=r(4),o=r(130),i=Object(a.b)({randomUniform_:function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",i=arguments.length>4?arguments[4]:void 0,u=Object(n.a)(t,a),v=new o.c(e,r,null,i),s=0;s<u.values.length;s++)u.values[s]=v.nextValue();return u.toTensor()}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({rsqrt_:function(t){var e={x:Object(o.a)(t,"x","rsqrt")};return n.a.runKernel(a.wc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({selu_:function(t){var e={x:Object(o.a)(t,"x","selu")};return n.a.runKernel(a.zc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(1),a=r(7),o=r(78),i=r(99),u=r(4),v=r(8),s=Object(u.b)({separableConv2d_:function(t,e,r,u,s){var c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],P=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC",l=Object(n.a)(t,"x","separableConv2d"),f=Object(n.a)(e,"depthwiseFilter","separableConv2d"),d=Object(n.a)(r,"pointwiseFilter","separableConv2d"),p=l,b=!1;if(3===l.rank&&(b=!0,p=Object(v.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),"NCHW"===P)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===p.rank,(function(){return"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(p.rank,".")})),a.b(4===f.rank,(function(){return"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(f.rank,".")})),a.b(4===d.rank,(function(){return"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(f.rank,".")})),a.b(1===d.shape[0],(function(){return"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(d.shape[0],".")})),a.b(1===d.shape[1],(function(){return"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(d.shape[1],".")}));var h=f.shape[2],y=f.shape[3];a.b(d.shape[2]===h*y,(function(){return"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(h*y,", ")+"but got ".concat(d.shape[2],".")}));var m=Object(i.a)(p,f,u,s,P,c),g=1,T=Object(o.a)(m,d,g,"valid",P);return b?Object(v.a)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({sin_:function(t){var e={x:Object(o.a)(t,"x","sin")};return n.a.runKernel(a.Cc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({sinh_:function(t){var e={x:Object(o.a)(t,"x","sinh")};return n.a.runKernel(a.Dc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return d}));var n=r(68),a=r(34),o=r(163),i=r(9),u=r(4),v=r(146),s=r(8),c=r(55),P=r(16),l=r(26),f=r(147),d=Object(u.b)({irfft_:function(t){var e,r=t.shape[t.shape.length-1],u=t.size/r;if(r<=2){var d=Object(s.a)(t,[u,r]);e=Object(f.a)(d)}else{var p=[u,2*(r-1)],b=Object(s.a)(Object(v.a)(t),[u,r]),h=Object(s.a)(Object(o.a)(t),[u,r]),y=Object(c.a)(Object(l.a)(b,[0,1],[u,r-2]),1),m=Object(i.a)(Object(c.a)(Object(l.a)(h,[0,1],[u,r-2]),1),Object(P.a)(-1)),g=Object(a.a)([b,y],1),T=Object(a.a)([h,m],1),j=Object(s.a)(Object(n.a)(g,T),[p[0],p[1]]);e=Object(f.a)(j)}if(e=Object(v.a)(e),3===t.rank&&0!==t.shape[0]){var z=e,w=t.shape[0];e=Object(s.a)(e,[w,e.shape[0]/w,e.shape[1]]),z.dispose()}return e}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));var n=r(1),a=r(7),o=r(56);function i(t,e,r){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");var i=Object(n.c)(t,r);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(o.a)(t,e,i,r)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(5),a=r(3),o=r(1),i=r(4);function u(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return v(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?v(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var s=Object(i.b)({topk_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=Object(o.a)(t,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");var v=i.shape[i.shape.length-1];if(e>v)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(v,") ")+"but got ".concat(e));var s={x:i},c={k:e,sorted:r},P=n.a.runKernel(a.Uc,s,c),l=u(P,2),f=l[0],d=l[1];return{values:f,indices:d}}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4);function v(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var c=Object(u.b)({unique_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=Object(o.a)(t,"x","unique","string_or_numeric");Object(i.b)(r.rank>0,(function(){return"The input tensor must be at least 1D"}));var u={x:r},s={axis:e},c=n.a.runKernel(a.Wc,u,s),P=v(c,2),l=P[0],f=P[1];return{values:l,indices:f}}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(241),a=r(1);function o(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function i(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var i=t.apply(e,r);function u(t){o(i,n,a,u,v,"next",t)}function v(t){o(i,n,a,u,v,"throw",t)}u(void 0)}))}}function u(){return(u=i(regeneratorRuntime.mark((function t(e){var r,o,i;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=Object(a.a)(e,"condition","whereAsync","bool"),t.next=3,r.data();case 3:return o=t.sent,i=Object(n.a)(r.shape,o),e!==r&&r.dispose(),t.abrupt("return",i);case 7:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var v=function(t){return u.apply(this,arguments)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return a}));var n=r(53);function a(t,e){for(var r=[],a=0;a<e.length;a++)e[a]&&r.push(a);for(var o=Object(n.a)(t,"int32"),i=Object(n.a)([r.length,t.length],"int32"),u=0;u<r.length;u++){var v=o.indexToLoc(r[u]),s=u*t.length;i.values.set(v,s)}return i.toTensor()}},function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var n=function(){}},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(7),i=r(4),u=r(8),v=Object(i.b)({conv3DBackpropInput_:function(t,e,r,i,v){o.b(t.length===e.rank,(function(){return"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")}));var s=t,c=e,P=!1;4===e.rank&&(P=!0,c=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,t[0],t[1],t[2],t[3]]);var l=s[4],f=c.shape[4];o.b(5===s.length,(function(){return"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,".")})),o.b(5===c.rank,(function(){return"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(c.rank)})),o.b(5===r.rank,(function(){return"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(r.rank)})),o.b(l===r.shape[3],(function(){return"Error in conv3dDerInput: depth of input (".concat(l,") must ")+"match input depth for filter ".concat(r.shape[3],".")})),o.b(f===r.shape[4],(function(){return"Error in conv3dDerInput: depth of output (".concat(f,") must ")+"match output depth for filter ".concat(r.shape[4],".")}));var d={dy:c,filter:r},p={pad:v,strides:i,inputShape:s},b=n.a.runKernel(a.H,d,p);return P?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=r(8);function s(t){return function(t){if(Array.isArray(t))return t}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(u.b)({resizeNearestNeighbor_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],u=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=Object(o.a)(t,"images","resizeNearestNeighbor");i.b(3===c.rank||4===c.rank,(function(){return"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(c.rank,".")})),i.b(2===e.length,(function(){return"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,".")})),i.b("float32"===c.dtype||"int32"===c.dtype,(function(){return"`images` must have `int32` or `float32` as dtype"})),i.b(!1===u||!1===r,(function(){return"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."}));var P=c,l=!1;3===c.rank&&(l=!0,P=Object(v.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),s(e);var f={images:P},d={alignCorners:r,halfPixelCenters:u,size:e},p=n.a.runKernel(a.rc,f,d);return l?Object(v.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=r(8);function s(t){return function(t){if(Array.isArray(t))return t}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=Object(u.b)({resizeBilinear_:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],u=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=Object(o.a)(t,"images","resizeBilinear");i.b(3===c.rank||4===c.rank,(function(){return"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(c.rank,".")})),i.b(2===e.length,(function(){return"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,".")})),i.b(!1===u||!1===r,(function(){return"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."}));var P=c,l=!1;3===c.rank&&(l=!0,P=Object(v.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),s(e);var f={images:P},d={alignCorners:r,halfPixelCenters:u,size:e},p=n.a.runKernel(a.pc,f,d);return l?Object(v.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(4),i=r(8),u=Object(o.b)({depthwiseConv2dNativeBackpropInput_:function(t,e,r,o,u){var v=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,c=e,P=!1;3===e.rank&&(P=!0,c=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));var l={dy:c,filter:r},f={strides:o,pad:u,dimRoundingMode:s,dilations:v,inputShape:t},d=n.a.runKernel(a.Q,l,f);return P?Object(i.a)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(4),i=r(8),u=Object(o.b)({depthwiseConv2dNativeBackpropFilter_:function(t,e,r,o,u){var v=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,c=t;3===t.rank&&(c=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));var P=e;3===P.rank&&(P=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));var l={x:c,dy:P},f={strides:o,pad:u,dimRoundingMode:s,dilations:v,filterShape:r};return n.a.runKernel(a.P,l,f)}})},function(t,e,r){var n=r(598),a=r(599),o=r(600),i=r(601),u=r(602),v=r(603),s=r(604);s.alea=n,s.xor128=a,s.xorwow=o,s.xorshift7=i,s.xor4096=u,s.tychei=v,t.exports=s},function(t,e,r){var n=r(33),a=r(31).document,o=n(a)&&n(a.createElement);t.exports=function(t){return o?a.createElement(t):{}}},function(t,e,r){var n=r(31),a=r(84),o=r(115),i=r(279),u=r(43).f;t.exports=function(t){var e=a.Symbol||(a.Symbol=o?{}:n.Symbol||{});"_"==t.charAt(0)||t in e||u(e,t,{value:i.f(t)})}},function(t,e,r){var n=r(179)("keys"),a=r(132);t.exports=function(t){return n[t]||(n[t]=a(t))}},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e,r){var n=r(31).document;t.exports=n&&n.documentElement},function(t,e,r){var n=r(33),a=r(28),o=function(t,e){if(a(t),!n(e)&&null!==e)throw TypeError(e+": can't set as prototype!")};t.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(t,e,n){try{(n=r(85)(Function.call,r(75).f(Object.prototype,"__proto__").set,2))(t,[]),e=!(t instanceof Array)}catch(t){e=!0}return function(t,r){return o(t,r),e?t.__proto__=r:n(t,r),t}}({},!1):void 0),check:o}},function(t,e){t.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(t,e,r){var n=r(33),a=r(254).set;t.exports=function(t,e,r){var o,i=e.constructor;return i!==r&&"function"==typeof i&&(o=i.prototype)!==r.prototype&&n(o)&&a&&a(t,o),t}},function(t,e,r){"use strict";var n=r(87),a=r(94);t.exports=function(t){var e=String(a(this)),r="",o=n(t);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(e+=e))1&o&&(r+=e);return r}},function(t,e){t.exports=Math.sign||function(t){return 0==(t=+t)||t!=t?t:t<0?-1:1}},function(t,e){var r=Math.expm1;t.exports=!r||r(10)>22025.465794806718||r(10)<22025.465794806718||-2e-17!=r(-2e-17)?function(t){return 0==(t=+t)?t:t>-1e-6&&t<1e-6?t+t*t/2:Math.exp(t)-1}:r},function(t,e,r){"use strict";var n=r(115),a=r(11),o=r(66),i=r(65),u=r(152),v=r(261),s=r(149),c=r(76),P=r(36)("iterator"),l=!([].keys&&"next"in[].keys()),f=function(){return this};t.exports=function(t,e,r,d,p,b,h){v(r,e,d);var y,m,g,T=function(t){if(!l&&t in D)return D[t];switch(t){case"keys":case"values":return function(){return new r(this,t)}}return function(){return new r(this,t)}},j=e+" Iterator",z="values"==p,w=!1,D=t.prototype,x=D[P]||D["@@iterator"]||p&&D[p],O=x||T(p),L=p?z?T("entries"):O:void 0,S="Array"==e&&D.entries||x;if(S&&(g=c(S.call(new t)))!==Object.prototype&&g.next&&(s(g,j,!0),n||"function"==typeof g[P]||i(g,P,f)),z&&x&&"values"!==x.name&&(w=!0,O=function(){return x.call(this)}),n&&!h||!l&&!w&&D[P]||i(D,P,O),u[e]=O,u[j]=f,p)if(y={values:z?O:T("values"),keys:b?O:T("keys"),entries:L},h)for(m in y)m in D||o(D,m,y[m]);else a(a.P+a.F*(l||w),e,y);return y}},function(t,e,r){"use strict";var n=r(135),a=r(131),o=r(149),i={};r(65)(i,r(36)("iterator"),(function(){return this})),t.exports=function(t,e,r){t.prototype=n(i,{next:a(1,r)}),o(t,e+" Iterator")}},function(t,e,r){var n=r(196),a=r(94);t.exports=function(t,e,r){if(n(e))throw TypeError("String#"+r+" doesn't accept regex!");return String(a(t))}},function(t,e,r){var n=r(36)("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(r){try{return e[n]=!1,!"/./"[t](e)}catch(t){}}return!0}},function(t,e,r){var n=r(152),a=r(36)("iterator"),o=Array.prototype;t.exports=function(t){return void 0!==t&&(n.Array===t||o[a]===t)}},function(t,e,r){"use strict";var n=r(43),a=r(131);t.exports=function(t,e,r){e in t?n.f(t,e,a(0,r)):t[e]=r}},function(t,e,r){var n=r(150),a=r(36)("iterator"),o=r(152);t.exports=r(84).getIteratorMethod=function(t){if(null!=t)return t[a]||t["@@iterator"]||o[n(t)]}},function(t,e,r){var n=r(476);t.exports=function(t,e){return new(n(t))(e)}},function(t,e,r){"use strict";var n=r(46),a=r(134),o=r(37);t.exports=function(t){for(var e=n(this),r=o(e.length),i=arguments.length,u=a(i>1?arguments[1]:void 0,r),v=i>2?arguments[2]:void 0,s=void 0===v?r:a(v,r);s>u;)e[u++]=t;return e}},function(t,e,r){"use strict";var n=r(117),a=r(296),o=r(152),i=r(74);t.exports=r(260)(Array,"Array",(function(t,e){this._t=i(t),this._i=0,this._k=e}),(function(){var t=this._t,e=this._k,r=this._i++;return!t||r>=t.length?(this._t=void 0,a(1)):a(0,"keys"==e?r:"values"==e?t[r]:[r,t[r]])}),"values"),o.Arguments=o.Array,n("keys"),n("values"),n("entries")},function(t,e,r){"use strict";var n,a,o=r(182),i=RegExp.prototype.exec,u=String.prototype.replace,v=i,s=(n=/a/,a=/b*/g,i.call(n,"a"),i.call(a,"a"),0!==n.lastIndex||0!==a.lastIndex),c=void 0!==/()??/.exec("")[1];(s||c)&&(v=function(t){var e,r,n,a,v=this;return c&&(r=new RegExp("^"+v.source+"$(?!\\s)",o.call(v))),s&&(e=v.lastIndex),n=i.call(v,t),s&&n&&(v.lastIndex=v.global?n.index+n[0].length:e),c&&n&&n.length>1&&u.call(n[0],r,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(n[a]=void 0)})),n}),t.exports=v},function(t,e,r){"use strict";var n=r(195)(!0);t.exports=function(t,e,r){return e+(r?n(t,e).length:1)}},function(t,e,r){var n,a,o,i=r(85),u=r(286),v=r(253),s=r(249),c=r(31),P=c.process,l=c.setImmediate,f=c.clearImmediate,d=c.MessageChannel,p=c.Dispatch,b=0,h={},y=function(){var t=+this;if(h.hasOwnProperty(t)){var e=h[t];delete h[t],e()}},m=function(t){y.call(t.data)};l&&f||(l=function(t){for(var e=[],r=1;arguments.length>r;)e.push(arguments[r++]);return h[++b]=function(){u("function"==typeof t?t:Function(t),e)},n(b),b},f=function(t){delete h[t]},"process"==r(86)(P)?n=function(t){P.nextTick(i(y,t,1))}:p&&p.now?n=function(t){p.now(i(y,t,1))}:d?(o=(a=new d).port2,a.port1.onmessage=m,n=i(o.postMessage,o,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(n=function(t){c.postMessage(t+"","*")},c.addEventListener("message",m,!1)):n="onreadystatechange"in s("script")?function(t){v.appendChild(s("script")).onreadystatechange=function(){v.removeChild(this),y.call(t)}}:function(t){setTimeout(i(y,t,1),0)}),t.exports={set:l,clear:f}},function(t,e,r){var n=r(31),a=r(272).set,o=n.MutationObserver||n.WebKitMutationObserver,i=n.process,u=n.Promise,v="process"==r(86)(i);t.exports=function(){var t,e,r,s=function(){var n,a;for(v&&(n=i.domain)&&n.exit();t;){a=t.fn,t=t.next;try{a()}catch(n){throw t?r():e=void 0,n}}e=void 0,n&&n.enter()};if(v)r=function(){i.nextTick(s)};else if(!o||n.navigator&&n.navigator.standalone)if(u&&u.resolve){var c=u.resolve(void 0);r=function(){c.then(s)}}else r=function(){a.call(n,s)};else{var P=!0,l=document.createTextNode("");new o(s).observe(l,{characterData:!0}),r=function(){l.data=P=!P}}return function(n){var a={fn:n,next:void 0};e&&(e.next=a),t||(t=a,r()),e=a}}},function(t,e,r){"use strict";var n=r(58);function a(t){var e,r;this.promise=new t((function(t,n){if(void 0!==e||void 0!==r)throw TypeError("Bad Promise constructor");e=t,r=n})),this.resolve=n(e),this.reject=n(r)}t.exports.f=function(t){return new a(t)}},function(t,e,r){"use strict";var n=r(31),a=r(40),o=r(115),i=r(202),u=r(65),v=r(140),s=r(32),c=r(138),P=r(87),l=r(37),f=r(306),d=r(136).f,p=r(43).f,b=r(268),h=r(149),y=n.ArrayBuffer,m=n.DataView,g=n.Math,T=n.RangeError,j=n.Infinity,z=y,w=g.abs,D=g.pow,x=g.floor,O=g.log,L=g.LN2,S=a?"_b":"buffer",A=a?"_l":"byteLength",k=a?"_o":"byteOffset";function C(t,e,r){var n,a,o,i=new Array(r),u=8*r-e-1,v=(1<<u)-1,s=v>>1,c=23===e?D(2,-24)-D(2,-77):0,P=0,l=t<0||0===t&&1/t<0?1:0;for((t=w(t))!=t||t===j?(a=t!=t?1:0,n=v):(n=x(O(t)/L),t*(o=D(2,-n))<1&&(n--,o*=2),(t+=n+s>=1?c/o:c*D(2,1-s))*o>=2&&(n++,o/=2),n+s>=v?(a=0,n=v):n+s>=1?(a=(t*o-1)*D(2,e),n+=s):(a=t*D(2,s-1)*D(2,e),n=0));e>=8;i[P++]=255&a,a/=256,e-=8);for(n=n<<e|a,u+=e;u>0;i[P++]=255&n,n/=256,u-=8);return i[--P]|=128*l,i}function I(t,e,r){var n,a=8*r-e-1,o=(1<<a)-1,i=o>>1,u=a-7,v=r-1,s=t[v--],c=127&s;for(s>>=7;u>0;c=256*c+t[v],v--,u-=8);for(n=c&(1<<-u)-1,c>>=-u,u+=e;u>0;n=256*n+t[v],v--,u-=8);if(0===c)c=1-i;else{if(c===o)return n?NaN:s?-j:j;n+=D(2,e),c-=i}return(s?-1:1)*n*D(2,c-e)}function E(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]}function M(t){return[255&t]}function U(t){return[255&t,t>>8&255]}function R(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]}function W(t){return C(t,52,8)}function Q(t){return C(t,23,4)}function Y(t,e,r){p(t.prototype,e,{get:function(){return this[r]}})}function G(t,e,r,n){var a=f(+r);if(a+e>t[A])throw T("Wrong index!");var o=t[S]._b,i=a+t[k],u=o.slice(i,i+e);return n?u:u.reverse()}function F(t,e,r,n,a,o){var i=f(+r);if(i+e>t[A])throw T("Wrong index!");for(var u=t[S]._b,v=i+t[k],s=n(+a),c=0;c<e;c++)u[v+c]=s[o?c:e-c-1]}if(i.ABV){if(!s((function(){y(1)}))||!s((function(){new y(-1)}))||s((function(){return new y,new y(1.5),new y(NaN),"ArrayBuffer"!=y.name}))){for(var N,q=(y=function(t){return c(this,y),new z(f(t))}).prototype=z.prototype,K=d(z),B=0;K.length>B;)(N=K[B++])in y||u(y,N,z[N]);o||(q.constructor=y)}var V=new m(new y(2)),X=m.prototype.setInt8;V.setInt8(0,2147483648),V.setInt8(1,2147483649),!V.getInt8(0)&&V.getInt8(1)||v(m.prototype,{setInt8:function(t,e){X.call(this,t,e<<24>>24)},setUint8:function(t,e){X.call(this,t,e<<24>>24)}},!0)}else y=function(t){c(this,y,"ArrayBuffer");var e=f(t);this._b=b.call(new Array(e),0),this[A]=e},m=function(t,e,r){c(this,m,"DataView"),c(t,y,"DataView");var n=t[A],a=P(e);if(a<0||a>n)throw T("Wrong offset!");if(a+(r=void 0===r?n-a:l(r))>n)throw T("Wrong length!");this[S]=t,this[k]=a,this[A]=r},a&&(Y(y,"byteLength","_l"),Y(m,"buffer","_b"),Y(m,"byteLength","_l"),Y(m,"byteOffset","_o")),v(m.prototype,{getInt8:function(t){return G(this,1,t)[0]<<24>>24},getUint8:function(t){return G(this,1,t)[0]},getInt16:function(t){var e=G(this,2,t,arguments[1]);return(e[1]<<8|e[0])<<16>>16},getUint16:function(t){var e=G(this,2,t,arguments[1]);return e[1]<<8|e[0]},getInt32:function(t){return E(G(this,4,t,arguments[1]))},getUint32:function(t){return E(G(this,4,t,arguments[1]))>>>0},getFloat32:function(t){return I(G(this,4,t,arguments[1]),23,4)},getFloat64:function(t){return I(G(this,8,t,arguments[1]),52,8)},setInt8:function(t,e){F(this,1,t,M,e)},setUint8:function(t,e){F(this,1,t,M,e)},setInt16:function(t,e){F(this,2,t,U,e,arguments[2])},setUint16:function(t,e){F(this,2,t,U,e,arguments[2])},setInt32:function(t,e){F(this,4,t,R,e,arguments[2])},setUint32:function(t,e){F(this,4,t,R,e,arguments[2])},setFloat32:function(t,e){F(this,4,t,Q,e,arguments[2])},setFloat64:function(t,e){F(this,8,t,W,e,arguments[2])}});h(y,"ArrayBuffer"),h(m,"DataView"),u(m.prototype,i.VIEW,!0),e.ArrayBuffer=y,e.DataView=m},function(t,e,r){"use strict";var n,a=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),o=this&&this.__read||function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,a,o=r.call(t),i=[];try{for(;(void 0===e||e-- >0)&&!(n=o.next()).done;)i.push(n.value)}catch(t){a={error:t}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(a)throw a.error}}return i},i=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(o(arguments[e]));return t};Object.defineProperty(e,"__esModule",{value:!0}),e.ObservableBase=void 0;var u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.changed=function(t){return this.subscribe({changed:t,on:void 0})},e.prototype.on=function(t,e){return this.subscribe({changed:void 0,on:{name:String(t),handler:this._toEventCallback(e)}})},e.prototype.once=function(t,e,r){var n,a=this;return n=this.on(t,this._fromEventCallback((function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];n.dispose(r),a._toEventCallback(e).apply(void 0,i(t))})))},e.prototype.raiseChanged=function(){this.raiseEvents((function(t){return t.changed&&t.changed()}))},e.prototype.event=function(t){var e=this;return{raise:this._fromEventCallback((function(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];return e._raiseEventImpl.apply(e,i([String(t)],r))}))}},e.prototype._raiseEventImpl=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];this.raiseEvents((function(r){var n;return r.on&&r.on.name===t&&(n=r.on).handler.apply(n,i(e))}))},e.prototype._toEventCallback=function(t){return t},e.prototype._fromEventCallback=function(t){return t},e}(r(587).EventSourceImpl);e.ObservableBase=u},function(t,e,r){"use strict";r.r(e),r.d(e,"FromPixelsPackedProgram",(function(){return i}));var n=r(35);function a(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return o(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var i=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var r=Object(n.a)(),o=a(e,2),i=o[0],u=o[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(u,".0, ").concat(i,".0);\n            vec4 values = ").concat(r.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(r.output," = result;\n      }\n    ")}},function(t,e,r){t.exports=!r(40)&&!r(32)((function(){return 7!=Object.defineProperty(r(249)("div"),"a",{get:function(){return 7}}).a}))},function(t,e,r){e.f=r(36)},function(t,e,r){var n=r(73),a=r(74),o=r(192)(!1),i=r(251)("IE_PROTO");t.exports=function(t,e){var r,u=a(t),v=0,s=[];for(r in u)r!=i&&n(u,r)&&s.push(r);for(;e.length>v;)n(u,r=e[v++])&&(~o(s,r)||s.push(r));return s}},function(t,e,r){var n=r(43),a=r(28),o=r(133);t.exports=r(40)?Object.defineProperties:function(t,e){a(t);for(var r,i=o(e),u=i.length,v=0;u>v;)n.f(t,r=i[v++],e[r]);return t}},function(t,e,r){function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var a=r(74),o=r(136).f,i={}.toString,u="object"==("undefined"==typeof window?"undefined":n(window))&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return u&&"[object Window]"==i.call(t)?function(t){try{return o(t)}catch(t){return u.slice()}}(t):o(a(t))}},function(t,e,r){"use strict";var n=r(40),a=r(133),o=r(193),i=r(181),u=r(46),v=r(180),s=Object.assign;t.exports=!s||r(32)((function(){var t={},e={},r=Symbol(),n="abcdefghijklmnopqrst";return t[r]=7,n.split("").forEach((function(t){e[t]=t})),7!=s({},t)[r]||Object.keys(s({},e)).join("")!=n}))?function(t,e){for(var r=u(t),s=arguments.length,c=1,P=o.f,l=i.f;s>c;)for(var f,d=v(arguments[c++]),p=P?a(d).concat(P(d)):a(d),b=p.length,h=0;b>h;)f=p[h++],n&&!l.call(d,f)||(r[f]=d[f]);return r}:s},function(t,e){t.exports=Object.is||function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}},function(t,e,r){"use strict";var n=r(58),a=r(33),o=r(286),i=[].slice,u={},v=function(t,e,r){if(!(e in u)){for(var n=[],a=0;a<e;a++)n[a]="a["+a+"]";u[e]=Function("F,a","return new F("+n.join(",")+")")}return u[e](t,r)};t.exports=Function.bind||function(t){var e=n(this),r=i.call(arguments,1),u=function n(){var a=r.concat(i.call(arguments));return this instanceof n?v(e,a.length,a):o(e,a,t)};return a(e.prototype)&&(u.prototype=e.prototype),u}},function(t,e){t.exports=function(t,e,r){var n=void 0===r;switch(e.length){case 0:return n?t():t.call(r);case 1:return n?t(e[0]):t.call(r,e[0]);case 2:return n?t(e[0],e[1]):t.call(r,e[0],e[1]);case 3:return n?t(e[0],e[1],e[2]):t.call(r,e[0],e[1],e[2]);case 4:return n?t(e[0],e[1],e[2],e[3]):t.call(r,e[0],e[1],e[2],e[3])}return t.apply(r,e)}},function(t,e,r){var n=r(31).parseInt,a=r(151).trim,o=r(255),i=/^[-+]?0[xX]/;t.exports=8!==n(o+"08")||22!==n(o+"0x16")?function(t,e){var r=a(String(t),3);return n(r,e>>>0||(i.test(r)?16:10))}:n},function(t,e,r){var n=r(31).parseFloat,a=r(151).trim;t.exports=1/n(r(255)+"-0")!=-1/0?function(t){var e=a(String(t),3),r=n(e);return 0===r&&"-"==e.charAt(0)?-0:r}:n},function(t,e,r){var n=r(86);t.exports=function(t,e){if("number"!=typeof t&&"Number"!=n(t))throw TypeError(e);return+t}},function(t,e,r){var n=r(33),a=Math.floor;t.exports=function(t){return!n(t)&&isFinite(t)&&a(t)===t}},function(t,e){t.exports=Math.log1p||function(t){return(t=+t)>-1e-8&&t<1e-8?t-t*t/2:Math.log(1+t)}},function(t,e,r){var n=r(258),a=Math.pow,o=a(2,-52),i=a(2,-23),u=a(2,127)*(2-i),v=a(2,-126);t.exports=Math.fround||function(t){var e,r,a=Math.abs(t),s=n(t);return a<v?s*(a/v/i+1/o-1/o)*v*i:(r=(e=(1+i/o)*a)-(e-a))>u||r!=r?s*(1/0):s*r}},function(t,e,r){var n=r(28);t.exports=function(t,e,r,a){try{return a?e(n(r)[0],r[1]):e(r)}catch(e){var o=t.return;throw void 0!==o&&n(o.call(t)),e}}},function(t,e,r){var n=r(58),a=r(46),o=r(180),i=r(37);t.exports=function(t,e,r,u,v){n(e);var s=a(t),c=o(s),P=i(s.length),l=v?P-1:0,f=v?-1:1;if(r<2)for(;;){if(l in c){u=c[l],l+=f;break}if(l+=f,v?l<0:P<=l)throw TypeError("Reduce of empty array with no initial value")}for(;v?l>=0:P>l;l+=f)l in c&&(u=e(u,c[l],l,s));return u}},function(t,e,r){"use strict";var n=r(46),a=r(134),o=r(37);t.exports=[].copyWithin||function(t,e){var r=n(this),i=o(r.length),u=a(t,i),v=a(e,i),s=arguments.length>2?arguments[2]:void 0,c=Math.min((void 0===s?i:a(s,i))-v,i-u),P=1;for(v<u&&u<v+c&&(P=-1,v+=c-1,u+=c-1);c-- >0;)v in r?r[u]=r[v]:delete r[u],u+=P,v+=P;return r}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,r){"use strict";var n=r(270);r(11)({target:"RegExp",proto:!0,forced:n!==/./.exec},{exec:n})},function(t,e,r){r(40)&&"g"!=/./g.flags&&r(43).f(RegExp.prototype,"flags",{configurable:!0,get:r(182)})},function(t,e){t.exports=function(t){try{return{e:!1,v:t()}}catch(t){return{e:!0,v:t}}}},function(t,e,r){var n=r(28),a=r(33),o=r(274);t.exports=function(t,e){if(n(t),a(e)&&e.constructor===t)return e;var r=o.f(t);return(0,r.resolve)(e),r.promise}},function(t,e,r){"use strict";var n=r(302),a=r(141);t.exports=r(201)("Map",(function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(t){var e=n.getEntry(a(this,"Map"),t);return e&&e.v},set:function(t,e){return n.def(a(this,"Map"),0===t?0:t,e)}},n,!0)},function(t,e,r){"use strict";var n=r(43).f,a=r(135),o=r(140),i=r(85),u=r(138),v=r(139),s=r(260),c=r(296),P=r(137),l=r(40),f=r(116).fastKey,d=r(141),p=l?"_s":"size",b=function(t,e){var r,n=f(e);if("F"!==n)return t._i[n];for(r=t._f;r;r=r.n)if(r.k==e)return r};t.exports={getConstructor:function(t,e,r,s){var c=t((function(t,n){u(t,c,e,"_i"),t._t=e,t._i=a(null),t._f=void 0,t._l=void 0,t[p]=0,null!=n&&v(n,r,t[s],t)}));return o(c.prototype,{clear:function(){for(var t=d(this,e),r=t._i,n=t._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete r[n.i];t._f=t._l=void 0,t[p]=0},delete:function(t){var r=d(this,e),n=b(r,t);if(n){var a=n.n,o=n.p;delete r._i[n.i],n.r=!0,o&&(o.n=a),a&&(a.p=o),r._f==n&&(r._f=a),r._l==n&&(r._l=o),r[p]--}return!!n},forEach:function(t){d(this,e);for(var r,n=i(t,arguments.length>1?arguments[1]:void 0,3);r=r?r.n:this._f;)for(n(r.v,r.k,this);r&&r.r;)r=r.p},has:function(t){return!!b(d(this,e),t)}}),l&&n(c.prototype,"size",{get:function(){return d(this,e)[p]}}),c},def:function(t,e,r){var n,a,o=b(t,e);return o?o.v=r:(t._l=o={i:a=f(e,!0),k:e,v:r,p:n=t._l,n:void 0,r:!1},t._f||(t._f=o),n&&(n.n=o),t[p]++,"F"!==a&&(t._i[a]=o)),t},getEntry:b,setStrong:function(t,e,r){s(t,e,(function(t,r){this._t=d(t,e),this._k=r,this._l=void 0}),(function(){for(var t=this._k,e=this._l;e&&e.r;)e=e.p;return this._t&&(this._l=e=e?e.n:this._t._f)?c(0,"keys"==t?e.k:"values"==t?e.v:[e.k,e.v]):(this._t=void 0,c(1))}),r?"entries":"values",!r,!0),P(e)}}},function(t,e,r){"use strict";var n=r(302),a=r(141);t.exports=r(201)("Set",(function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(t){return n.def(a(this,"Set"),t=0===t?0:t,t)}},n)},function(t,e,r){"use strict";var n,a=r(31),o=r(96)(0),i=r(66),u=r(116),v=r(283),s=r(305),c=r(33),P=r(141),l=r(141),f=!a.ActiveXObject&&"ActiveXObject"in a,d=u.getWeak,p=Object.isExtensible,b=s.ufstore,h=function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}},y={get:function(t){if(c(t)){var e=d(t);return!0===e?b(P(this,"WeakMap")).get(t):e?e[this._i]:void 0}},set:function(t,e){return s.def(P(this,"WeakMap"),t,e)}},m=t.exports=r(201)("WeakMap",h,y,s,!0,!0);l&&f&&(v((n=s.getConstructor(h,"WeakMap")).prototype,y),u.NEED=!0,o(["delete","has","get","set"],(function(t){var e=m.prototype,r=e[t];i(e,t,(function(e,a){if(c(e)&&!p(e)){this._f||(this._f=new n);var o=this._f[t](e,a);return"set"==t?this:o}return r.call(this,e,a)}))})))},function(t,e,r){"use strict";var n=r(140),a=r(116).getWeak,o=r(28),i=r(33),u=r(138),v=r(139),s=r(96),c=r(73),P=r(141),l=s(5),f=s(6),d=0,p=function(t){return t._l||(t._l=new b)},b=function(){this.a=[]},h=function(t,e){return l(t.a,(function(t){return t[0]===e}))};b.prototype={get:function(t){var e=h(this,t);if(e)return e[1]},has:function(t){return!!h(this,t)},set:function(t,e){var r=h(this,t);r?r[1]=e:this.a.push([t,e])},delete:function(t){var e=f(this.a,(function(e){return e[0]===t}));return~e&&this.a.splice(e,1),!!~e}},t.exports={getConstructor:function(t,e,r,o){var s=t((function(t,n){u(t,s,e,"_i"),t._t=e,t._i=d++,t._l=void 0,null!=n&&v(n,r,t[o],t)}));return n(s.prototype,{delete:function(t){if(!i(t))return!1;var r=a(t);return!0===r?p(P(this,e)).delete(t):r&&c(r,this._i)&&delete r[this._i]},has:function(t){if(!i(t))return!1;var r=a(t);return!0===r?p(P(this,e)).has(t):r&&c(r,this._i)}}),s},def:function(t,e,r){var n=a(o(e),!0);return!0===n?p(t).set(e,r):n[t._i]=r,t},ufstore:p}},function(t,e,r){var n=r(87),a=r(37);t.exports=function(t){if(void 0===t)return 0;var e=n(t),r=a(e);if(e!==r)throw RangeError("Wrong length!");return r}},function(t,e,r){var n=r(136),a=r(193),o=r(28),i=r(31).Reflect;t.exports=i&&i.ownKeys||function(t){var e=n.f(o(t)),r=a.f;return r?e.concat(r(t)):e}},function(t,e,r){"use strict";var n=r(194),a=r(33),o=r(37),i=r(85),u=r(36)("isConcatSpreadable");t.exports=function t(e,r,v,s,c,P,l,f){for(var d,p,b=c,h=0,y=!!l&&i(l,f,3);h<s;){if(h in v){if(d=y?y(v[h],h,r):v[h],p=!1,a(d)&&(p=void 0!==(p=d[u])?!!p:n(d)),p&&P>0)b=t(e,r,d,o(d.length),b,P-1)-1;else{if(b>=9007199254740991)throw TypeError();e[b]=d}b++}h++}return b}},function(t,e,r){var n=r(37),a=r(257),o=r(94);t.exports=function(t,e,r,i){var u=String(o(t)),v=u.length,s=void 0===r?" ":String(r),c=n(e);if(c<=v||""==s)return u;var P=c-v,l=a.call(s,Math.ceil(P/s.length));return l.length>P&&(l=l.slice(0,P)),i?l+u:u+l}},function(t,e,r){var n=r(40),a=r(133),o=r(74),i=r(181).f;t.exports=function(t){return function(e){for(var r,u=o(e),v=a(u),s=v.length,c=0,P=[];s>c;)r=v[c++],n&&!i.call(u,r)||P.push(t?[r,u[r]]:u[r]);return P}}},function(t,e,r){var n=r(150),a=r(312);t.exports=function(t){return function(){if(n(this)!=t)throw TypeError(t+"#toJSON isn't generic");return a(this)}}},function(t,e,r){var n=r(139);t.exports=function(t,e){var r=[];return n(t,!1,r.push,r,e),r}},function(t,e){t.exports=Math.scale||function(t,e,r,n,a){return 0===arguments.length||t!=t||e!=e||r!=r||n!=n||a!=a?NaN:t===1/0||t===-1/0?t:(t-e)*(a-n)/(r-e)+n}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BlurRenderer=e.BlurRendererOptions=void 0,r(207);var n=r(154),a=r(186);e.BlurRendererOptions=function(){};var o=function(){function t(t){this.engine=t.engine,this.effectRenderer=t.effectRenderer,this.contrastLimits=t.contrastLimits,this.blurTextureRatioPerPass=t.blurTextureRatioPerPass,this.blurWidth=t.blurWidth,this.wideWeights=Float32Array.from([.05,.1,.2,.3,.2,.1,.05]),this.narrowWeights=Float32Array.from([0,0,.2,.6,.2,0,0]),this.createBlurPipeline()}return t.prototype.dispose=function(){this.blurWrapper&&this.blurWrapper.dispose(),this.intermediateRenderTargetW&&this.intermediateRenderTargetW.dispose(),this.intermediateRenderTargetH&&this.intermediateRenderTargetH.dispose(),this.finalRenderTargetW&&this.finalRenderTargetW.dispose(),this.finalRenderTargetH&&this.finalRenderTargetH.dispose()},t.prototype.blur=function(t,e,r,n){void 0===r&&(r=!1),void 0===n&&(n=!1);var a=this.intermediateRenderTargetW.getInternalTexture();return this.engine.bindFramebuffer(a),this.effectRenderer.applyEffectWrapper(this.blurWrapper),this.blurWrapper.effect.setVector2("contrastLimits",this.contrastLimits),this.blurWrapper.effect.setTexture("shapeSampler",e),this.blurWrapper.effect.setFloatArray("weights",r?this.narrowWeights:this.wideWeights),this.blurWrapper.effect.setFloat("shapeScalar",e?1:0),this.blurWrapper.effect.setTexture("inputSampler",t),this.blurWrapper.effect.setFloat2("texelStep",this.blurWidth/a.width,0),this.effectRenderer.draw(),a=this.intermediateRenderTargetH.getInternalTexture(),this.engine.bindFramebuffer(a),this.effectRenderer.applyEffectWrapper(this.blurWrapper),this.blurWrapper.effect.setTexture("inputSampler",this.intermediateRenderTargetW),this.blurWrapper.effect.setFloat2("texelStep",0,this.blurWidth/a.height),this.effectRenderer.draw(),a=this.finalRenderTargetW.getInternalTexture(),this.engine.bindFramebuffer(a),this.effectRenderer.applyEffectWrapper(this.blurWrapper),this.blurWrapper.effect.setTexture("inputSampler",this.intermediateRenderTargetH),this.blurWrapper.effect.setFloat2("texelStep",this.blurWidth/a.width,0),this.effectRenderer.draw(),a=n?t.getInternalTexture():this.finalRenderTargetH.getInternalTexture(),this.engine.bindFramebuffer(a),this.effectRenderer.applyEffectWrapper(this.blurWrapper),this.blurWrapper.effect.setTexture("inputSampler",this.finalRenderTargetW),this.blurWrapper.effect.setFloat2("texelStep",0,this.blurWidth/a.height),this.effectRenderer.draw(),this.engine.unBindFramebuffer(a),n?t:this.finalRenderTargetH},t.prototype.createBlurPipeline=function(){var t=this.engine.getRenderWidth(!0),e=this.engine.getRenderHeight(!0),r={generateDepthBuffer:!1,generateStencilBuffer:!1,generateMipMaps:!1,samplingMode:2},o=this.blurTextureRatioPerPass,i={width:Math.floor(t*o),height:Math.floor(e*o)};o*=this.blurTextureRatioPerPass;var u={width:Math.floor(t*o),height:Math.floor(e*o)};this.intermediateRenderTargetW=new a.ThinTexture(this.engine.createRenderTargetTexture(i,r)),this.intermediateRenderTargetH=new a.ThinTexture(this.engine.createRenderTargetTexture(i,r)),this.finalRenderTargetW=new a.ThinTexture(this.engine.createRenderTargetTexture(u,r)),this.finalRenderTargetH=new a.ThinTexture(this.engine.createRenderTargetTexture(u,r)),this.intermediateRenderTargetW.wrapU=0,this.intermediateRenderTargetW.wrapV=0,this.intermediateRenderTargetH.wrapU=0,this.intermediateRenderTargetH.wrapV=0,this.finalRenderTargetW.wrapU=0,this.finalRenderTargetW.wrapV=0,this.finalRenderTargetH.wrapU=0,this.finalRenderTargetH.wrapV=0,this.blurWrapper=new n.EffectWrapper({engine:this.engine,name:"blur",fragmentShader:"\n            varying vec2 vUV;\n\n            uniform sampler2D inputSampler;\n            uniform sampler2D shapeSampler;\n\n            uniform vec2 texelStep;\n            uniform vec2 contrastLimits;\n\n            uniform float[7] weights;\n            uniform float shapeScalar;\n            \n            float sampleShape(vec2 uv)\n            {\n                return shapeScalar * texture2D(shapeSampler, uv).r;\n            }\n\n            void main(void)\n            {\n                vec2 start = vUV - 3.0 * texelStep;\n\n                vec3 finalWeightedColor = vec3(0., 0., 0.);\n\n                float totalWeight = 0.;\n                for (int i = 0; i < 7; i++)\n                {\n                    vec2 fetchUV = start + texelStep * float(i);\n                    \n                    fetchUV = clamp(fetchUV, 0., 1.);\n                    float limit = sampleShape(fetchUV);\n                    limit = smoothstep(contrastLimits.x, contrastLimits.y, limit);\n                    float weight = weights[i] * (1. - limit);\n\n                    finalWeightedColor += texture2D(inputSampler, fetchUV).rgb * weight;\n                    totalWeight += weight;\n                }\n\n                gl_FragColor = vec4((1. - totalWeight) * texture2D(inputSampler, vUV).xyz + finalWeightedColor, 1.);\n            }\n        ",samplerNames:["inputSampler","shapeSampler"],uniformNames:["contrastLimits","texelStep","weights","shapeScalar"]})},t}();e.BlurRenderer=o},function(t,e,r){"use strict";var n,a=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),o=this&&this.__assign||function(){return(o=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var a in e=arguments[r])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.ConfigProvider=void 0;var i=r(206),u=r(316),v=r(276),s=r(184),c={qualityConfig:{outputFps:{min:15,max:30},outputResolution:720,preserveResolution:!0,improvementFpsThresholdPercent:20,statsIntervalSec:5,degradationLadder:[{resolution:{width:1920,height:1080},fps:{min:15,max:30}},{resolution:{width:1280,height:720},fps:{min:15,max:30}},{resolution:{width:960,height:540},fps:{min:15,max:30}},{resolution:{width:852,height:480},fps:{min:15,max:30}},{resolution:{width:640,height:360},fps:{min:15,max:30}},{resolution:{width:480,height:270},fps:{min:10,max:15}},{resolution:{width:426,height:240},fps:{min:10,max:15}},{resolution:{width:320,height:180},fps:{min:10,max:15}}],initialLadderResolution:360,enableMaskPropagation:!1,maskPropagationFramesInterval:30},useInsertableStreams:!1,powerPreference:i.PowerPreference.HighPerformance},P={modelUrl:null,weightPathPrefix:null},l={backgroundImageUrl:null,headers:void 0},f={mask:{maskWidth:160,maskHeight:96,upscaledMaskContrast:6,upscaledMaskResolutionFactor:2},stats:{qualityStats:{pLevelMin:{resolution:{width:1280,height:720},fps:{min:15,max:30}},pLevelMax:{resolution:{width:360,height:180},fps:{min:15,max:30}}}}},d=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.base=f,e.webcv=c,e.model=P,e.effect=l,e.globalsInternal=new u.Globals,e}return a(e,t),e.prototype.setConfig=function(t){this.webcv=o(o({},this.webcv),s.deepClone(t)),this.event("onConfigChanged").raise()},e.prototype.setQualityConfig=function(t){this.webcv.qualityConfig=o(o({},this.webcv.qualityConfig),s.deepClone(t)),this.event("onConfigChanged").raise()},e.prototype.setModelConfig=function(t){this.model=o(o({},this.model),s.deepClone(t))},e.prototype.setEffectConfig=function(t){var e;t.headers=null!==(e=t.headers)&&void 0!==e?e:void 0,this.effect=o(o({},this.effect),s.deepClone(t)),this.event("onEffectConfigChanged").raise()},Object.defineProperty(e.prototype,"baseConfig",{get:function(){return this.base},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"webcvConfig",{get:function(){return this.webcv},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"modelConfig",{get:function(){return this.model},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"effectConfig",{get:function(){return this.effect},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"globals",{get:function(){return this.globalsInternal},enumerable:!1,configurable:!0}),e}(v.ObservableBase);e.ConfigProvider=d},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Globals=void 0;var n=function(){function t(){this.customWindow=window,this.customDocument=document}return Object.defineProperty(t.prototype,"window",{get:function(){return this.customWindow},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"document",{get:function(){return this.customDocument},enumerable:!1,configurable:!0}),t.prototype.update=function(t,e){t&&(this.customWindow=t),e&&(this.customDocument=e)},t.prototype.dispose=function(){this.customWindow=null,this.customDocument=null},t}();e.Globals=n},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.DilateRenderer=e.DilateRendererOptions=void 0,r(207);var n=r(154),a=r(186),o=r(625);e.DilateRendererOptions=function(){};var i=function(){function t(t){this.engine=t.engine,this.effectRenderer=t.effectRenderer,this.resolution=t.resolution,this.pixelUvGap=new o.Vector2(1/this.resolution.width,1/this.resolution.height),this.createDilatePipeline()}return t.prototype.dispose=function(){this.dilateWrapper&&this.dilateWrapper.dispose(),this.intermediateRenderTarget&&this.intermediateRenderTarget.dispose()},t.prototype.dilate=function(t,e){var r=this.intermediateRenderTarget.getInternalTexture();this.engine.bindFramebuffer(r),this.effectRenderer.applyEffectWrapper(this.dilateWrapper),this.dilateWrapper.effect.setFloat2("pixelUvGap",this.pixelUvGap.x,this.pixelUvGap.y),this.dilateWrapper.effect.setFloat("threshold",e?8.5:.5),this.dilateWrapper.effect.setTexture("inputSampler",t),this.effectRenderer.draw(),r=t.getInternalTexture(),this.engine.bindFramebuffer(r),this.effectRenderer.applyEffectWrapper(this.dilateWrapper),this.dilateWrapper.effect.setTexture("inputSampler",this.intermediateRenderTarget),this.effectRenderer.draw(),this.engine.unBindFramebuffer(r)},t.prototype.createDilatePipeline=function(){this.intermediateRenderTarget=new a.ThinTexture(this.engine.createRenderTargetTexture(this.resolution,{generateDepthBuffer:!1,generateStencilBuffer:!1,generateMipMaps:!1,samplingMode:1})),this.intermediateRenderTarget.wrapU=0,this.intermediateRenderTarget.wrapV=0,this.dilateWrapper=new n.EffectWrapper({engine:this.engine,name:"dilate",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nuniform sampler2D inputSampler;\n\nuniform vec2 pixelUvGap;\nuniform float threshold;\n\nvoid main(void) {\n    float sum = 0.;\n    for (int y = -1; y <= 1; ++y) {\n        for (int x = -1; x <= 1; ++x) {\n            sum += texture2D(inputSampler, vUV + vec2(float(x) * pixelUvGap.x, float(y) * pixelUvGap.y)).x;\n        }\n    }\n\n    gl_FragColor = vec4(step(threshold, sum), 0., 0., 1.);\n}\n",samplerNames:["inputSampler"],uniformNames:["pixelUvGap","threshold"]})},t}();e.DilateRenderer=i},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MaskPropagationRenderer=e.MaskPropagationRendererOptions=void 0;var n=r(154),a=r(186);e.MaskPropagationRendererOptions=function(){};var o=function(){function t(t){this.engine=t.engine,this.effectRenderer=t.effectRenderer,this.bufferIdx=0,this.createMaskPropagationPipeline()}return Object.defineProperty(t,"MaskResolution",{get:function(){return{width:256,height:144}},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"maskTexture",{get:function(){return this.refinedMask},enumerable:!1,configurable:!0}),t.prototype.dispose=function(){this.framesTextureBootstrapWrapper&&this.framesTextureBootstrapWrapper.dispose(),this.framesTextureUpdateWrapper&&this.framesTextureUpdateWrapper.dispose(),this.lnnfTextureBootstrapWrapper&&this.lnnfTextureBootstrapWrapper.dispose(),this.lnnfTextureUpdateWrapper&&this.lnnfTextureUpdateWrapper.dispose(),this.sourceMaskBootstrapWrapper&&this.sourceMaskBootstrapWrapper.dispose(),this.targetMaskBootstrapWrapper&&this.targetMaskBootstrapWrapper.dispose(),this.targetMaskUpdateWrapper&&this.targetMaskUpdateWrapper.dispose(),this.sadWrapper&&this.sadWrapper.dispose(),this.sourceMask&&this.sourceMask.dispose(),this.framesTextures&&(this.framesTextures[0].dispose(),this.framesTextures[1].dispose()),this.lnnfTextures&&(this.lnnfTextures[0].dispose(),this.lnnfTextures[1].dispose()),this.targetMask&&this.targetMask.dispose(),this.refinedMask&&this.refinedMask.dispose(),this.sadTexture&&this.sadTexture.dispose()},t.prototype.bootstrap=function(t,e){this.bufferIdx=0,this.engine.bindFramebuffer(this.sourceMask.getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.sourceMaskBootstrapWrapper),this.sourceMaskBootstrapWrapper.effect.setTexture("highQualityMaskSampler",e),this.effectRenderer.draw(),this.engine.bindFramebuffer(this.framesTextures[this.bufferIdx].getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.framesTextureBootstrapWrapper),this.framesTextureBootstrapWrapper.effect.setTexture("videoTextureSampler",t),this.effectRenderer.draw(),this.engine.bindFramebuffer(this.lnnfTextures[this.bufferIdx].getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.lnnfTextureBootstrapWrapper),this.effectRenderer.draw(),this.engine.bindFramebuffer(this.targetMask.getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.targetMaskBootstrapWrapper),this.targetMaskBootstrapWrapper.effect.setTexture("sourceMaskSampler",this.sourceMask),this.effectRenderer.draw(),this.updateRefinedMask(t)},t.prototype.update=function(t){var e=this.bufferIdx;this.bufferIdx=(this.bufferIdx+1)%2,this.engine.bindFramebuffer(this.framesTextures[this.bufferIdx].getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.framesTextureUpdateWrapper),this.framesTextureUpdateWrapper.effect.setTexture("videoTextureSampler",t),this.framesTextureUpdateWrapper.effect.setTexture("framesTextureSampler",this.framesTextures[e]),this.effectRenderer.draw(),this.engine.bindFramebuffer(this.lnnfTextures[this.bufferIdx].getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.lnnfTextureUpdateWrapper),this.lnnfTextureUpdateWrapper.effect.setTexture("framesTextureSampler",this.framesTextures[this.bufferIdx]),this.lnnfTextureUpdateWrapper.effect.setTexture("lnnfTextureSampler",this.lnnfTextures[e]),this.effectRenderer.draw(),this.engine.bindFramebuffer(this.targetMask.getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.targetMaskUpdateWrapper),this.targetMaskUpdateWrapper.effect.setTexture("lnnfTextureSampler",this.lnnfTextures[this.bufferIdx]),this.targetMaskUpdateWrapper.effect.setTexture("sourceMaskSampler",this.sourceMask),this.effectRenderer.draw(),this.updateRefinedMask(t)},t.prototype.getSumOfAbsoluteDifferences=function(t){void 0===t&&(t=1),this.engine.bindFramebuffer(this.sadTexture.getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.sadWrapper),this.sadWrapper.effect.setTexture("sourceMaskSampler",this.sourceMask),this.sadWrapper.effect.setTexture("targetMaskSampler",this.targetMask),this.sadWrapper.effect.setFloat("scalar",t),this.effectRenderer.draw();var e=this.engine.readPixels(0,0,1,1);return this.engine.unBindFramebuffer(this.sadTexture.getInternalTexture()),e[0]},t.prototype.updateRefinedMask=function(t){this.engine.bindFramebuffer(this.refinedMask.getInternalTexture()),this.effectRenderer.applyEffectWrapper(this.refinedMaskUpdateWrapper),this.refinedMaskUpdateWrapper.effect.setTexture("videoTextureSampler",t),this.refinedMaskUpdateWrapper.effect.setTexture("maskTextureSampler",this.targetMask),this.effectRenderer.draw(),this.engine.unBindFramebuffer(this.refinedMask.getInternalTexture())},t.prototype.createMaskPropagationPipeline=function(){var e={width:80,height:48},r=t.MaskResolution,o={generateDepthBuffer:!1,generateStencilBuffer:!1,generateMipMaps:!1,samplingMode:1},i=new a.ThinTexture(this.engine.createRenderTargetTexture(e,o)),u=new a.ThinTexture(this.engine.createRenderTargetTexture(e,o));this.framesTextures=[i,u];var v=new a.ThinTexture(this.engine.createRenderTargetTexture(e,o)),s=new a.ThinTexture(this.engine.createRenderTargetTexture(e,o));this.lnnfTextures=[v,s],this.sourceMask=new a.ThinTexture(this.engine.createRenderTargetTexture(e,o)),o.samplingMode=2,this.targetMask=new a.ThinTexture(this.engine.createRenderTargetTexture(e,o)),this.refinedMask=new a.ThinTexture(this.engine.createRenderTargetTexture(r,o)),this.sadTexture=new a.ThinTexture(this.engine.createRenderTargetTexture({width:1,height:1},o)),this.framesTextures[0].wrapU=0,this.framesTextures[0].wrapV=0,this.framesTextures[1].wrapU=0,this.framesTextures[1].wrapV=0,this.lnnfTextures[0].wrapU=0,this.lnnfTextures[0].wrapV=0,this.lnnfTextures[1].wrapU=0,this.lnnfTextures[1].wrapV=0,this.sourceMask.wrapU=0,this.sourceMask.wrapV=0,this.targetMask.wrapU=0,this.targetMask.wrapV=0,this.refinedMask.wrapU=0,this.refinedMask.wrapV=0,this.sadTexture.wrapU=0,this.sadTexture.wrapV=0,this.framesTextureBootstrapWrapper=new n.EffectWrapper({engine:this.engine,name:"framesTextureBootstrap",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nuniform sampler2D videoTextureSampler;\n\nvoid main(void) {\n    vec4 videoPx = texture2D(videoTextureSampler, vUV);\n    float value = videoPx.y;\n    gl_FragColor = vec4(value, value, value, 1.);\n}\n",samplerNames:["videoTextureSampler"]}),this.framesTextureUpdateWrapper=new n.EffectWrapper({engine:this.engine,name:"framesTextureUpdate",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nuniform sampler2D videoTextureSampler;\nuniform sampler2D framesTextureSampler;\n\nvoid main(void) {\n    vec4 framesPx = texture2D(framesTextureSampler, vUV);\n    vec4 videoPx = texture2D(videoTextureSampler, vUV);\n    \n    // Store the value from the video as the first channel.\n    // Store the prior first channel as the second channel (i.e., move what was the current frame to be the prior frame).\n    // Keep the third channel, which contains the source frame (video frame associated with the source mask).\n    float value = videoPx.y;\n    gl_FragColor = vec4(value, framesPx.x, framesPx.z, 1.);\n}\n",samplerNames:["videoTextureSampler","framesTextureSampler"]}),this.lnnfTextureBootstrapWrapper=new n.EffectWrapper({engine:this.engine,name:"lnnfTextureBootstrap",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nvoid main(void) {\n    // UV, match cost, 1.\n    gl_FragColor = vec4(vUV, 0., 1.);\n}\n"}),this.lnnfTextureUpdateWrapper=new n.EffectWrapper({engine:this.engine,name:"lnnfTextureUpdate",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nuniform sampler2D framesTextureSampler;\nuniform sampler2D lnnfTextureSampler;\n\nconst float MATCH_COST_MULTIPLIER = 2.;\n\nconst int PATCH_HALF = PATCH_WIDTH / 2;\nconst int PATCH_SIZE = PATCH_WIDTH * PATCH_WIDTH;\nconst int WINDOW_WIDTH = 3 * PATCH_WIDTH;\nconst int WINDOW_HALF = WINDOW_WIDTH / 2;\nconst int WINDOW_SIZE = WINDOW_WIDTH * WINDOW_WIDTH;\n\nvec2 uv(int x, int y) {\n    return vec2(\n        float(x) / RES_X + vUV.x,\n        float(y) / RES_Y + vUV.y);\n}\n\nfloat[PATCH_SIZE] maskFrameBlock;\nfloat getMaskFrameBlock(int x, int y) {\n    return maskFrameBlock[(y + PATCH_HALF) * PATCH_WIDTH + (x + PATCH_HALF)];\n}\nvoid setMaskFrameBlock(int x, int y, float value) {\n    maskFrameBlock[(y + PATCH_HALF) * PATCH_WIDTH + (x + PATCH_HALF)] = value;\n}\n\nfloat[WINDOW_SIZE] window;\nfloat getWindow(int x, int y) {\n    return window[(y + WINDOW_HALF) * WINDOW_WIDTH + (x + WINDOW_HALF)];\n}\nfloat getWindow(int x, int y, int centerX, int centerY) {\n    return window[(y + centerY + WINDOW_HALF) * WINDOW_WIDTH + (x + centerX + WINDOW_HALF)];\n}\nvoid setWindow(int x, int y, float value) {\n    window[(y + WINDOW_HALF) * WINDOW_WIDTH + (x + WINDOW_HALF)] = value;\n}\n\nfloat[PATCH_SIZE] block;\nfloat getBlock(int x, int y) {\n    return block[(y + PATCH_HALF) * PATCH_WIDTH + (x + PATCH_HALF)];\n}\nvoid setBlock(int x, int y, float value) {\n    block[(y + PATCH_HALF) * PATCH_WIDTH + (x + PATCH_HALF)] = value;\n}\n\nvoid initializePatches() {\n    for (int y = -WINDOW_HALF; y <= WINDOW_HALF; ++y) {\n        for (int x = -WINDOW_HALF; x <= WINDOW_HALF; ++x) {\n            vec3 framesSample = texture2D(framesTextureSampler, uv(x, y)).xyz;\n            setWindow(x, y, framesSample.y);\n            \n            if (x >= -PATCH_HALF && x <= PATCH_HALF && y >= -PATCH_HALF && y <= PATCH_HALF) {\n                setMaskFrameBlock(x, y, framesSample.z);\n                setBlock(x, y, framesSample.x);\n            }\n        }\n    }\n}\n\nfloat getMaskFrameSSD() {\n    float sum = 0.;\n    for (int y = -PATCH_HALF; y <= PATCH_HALF; ++y) {\n        for (int x = -PATCH_HALF; x <= PATCH_HALF; ++x) {\n            float diff = getBlock(x, y) - getMaskFrameBlock(x, y);\n            sum += (diff * diff);\n        }\n    }\n    return sum;\n}\n\nfloat getWindowSSD(int centerX, int centerY) {\n    float sum = 0.;\n    for (int y = -PATCH_HALF; y <= PATCH_HALF; ++y) {\n        for (int x = -PATCH_HALF; x <= PATCH_HALF; ++x) {\n            float diff = getBlock(x, y) - getWindow(x, y, centerX, centerY);\n            sum += (diff * diff);\n        }\n    }\n    return sum;\n}\n\nbool isAvailableWindowPatchCenter(int x, int y) {\n    x += WINDOW_HALF;\n    y += WINDOW_HALF;\n    return min(x, y) >= PATCH_HALF && max(x, y) < WINDOW_WIDTH - PATCH_HALF;\n}\n\nconst ivec2 LDSP[8] = ivec2[](\n    ivec2(-2, 0),\n    ivec2(-1, 1),\n    ivec2(0, 2),\n    ivec2(1, 1),\n    ivec2(2, 0),\n    ivec2(1, -1),\n    ivec2(0, -2),\n    ivec2(-1, -1)\n);\nivec2 largeDiamondSearchPattern(int centerX, int centerY) {\n    int x = centerX;\n    int y = centerY;\n    float minScore = getWindowSSD(x, y);\n    ivec2 minCenter = ivec2(x, y);\n\n    for (int idx = 0; idx < 8; ++idx) {\n        x = centerX + LDSP[idx].x;\n        y = centerY + LDSP[idx].y;\n        if (isAvailableWindowPatchCenter(x, y)) {\n            float score = getWindowSSD(x, y);\n            if (score < minScore) {\n                minScore = score;\n                minCenter = ivec2(x, y);\n            }\n        }\n    }\n\n    return minCenter;\n}\n\nconst ivec2 SDSP[4] = ivec2[](\n    ivec2(-1, 0),\n    ivec2(0, 1),\n    ivec2(1, 0),\n    ivec2(0, -1)\n);\nvec3 smallDiamondSearchPattern(int centerX, int centerY) {\n    int x = centerX;\n    int y = centerY;\n    float minScore = getWindowSSD(x, y);\n    ivec2 minCenter = ivec2(x, y);\n\n    for (int idx = 0; idx < 4; ++idx) {\n        x = centerX + SDSP[idx].x;\n        y = centerY + SDSP[idx].y;\n        if (isAvailableWindowPatchCenter(x, y)) {\n            float score = getWindowSSD(x, y);\n            if (score < minScore) {\n                minScore = score;\n                minCenter = ivec2(x, y);\n            }\n        }\n    }\n\n    return vec3(float(minCenter.x), float(minCenter.y), minScore);\n}\n\nvoid main(void) {\n    initializePatches();\n    \n    float identityCost = getMaskFrameSSD();\n    \n    int matchX = 0;\n    int matchY = 0;\n    bool continueLarge;\n    do {\n        ivec2 newCenter = largeDiamondSearchPattern(matchX, matchY);\n        continueLarge = matchX != newCenter.x || matchY != newCenter.y;\n        matchX = newCenter.x;\n        matchY = newCenter.y;\n    } while (continueLarge);\n    vec3 match = smallDiamondSearchPattern(matchX, matchY);\n    matchX = int(match.x);\n    matchY = int(match.y);\n    float matchCost = match.z;\n    \n    matchCost *= MATCH_COST_MULTIPLIER;\n    \n    if (identityCost < matchCost) {\n        // Store identity as relative normalized (UV offset from current UV).\n        gl_FragColor = vec4(vUV, identityCost, 1.);\n    } else {\n        vec2 lastNNuv = uv(matchX, matchY);\n        vec2 lastNN = texture2D(lnnfTextureSampler, lastNNuv).xy;\n        \n        // Store new NN as absolute normalized (nearest neighbor UV).\n        gl_FragColor = vec4(lastNN, matchCost, 1.);\n    }\n}\n",samplerNames:["framesTextureSampler","lnnfTextureSampler"],defines:["#define PATCH_WIDTH 9","#define RES_X "+e.width+".","#define RES_Y "+e.height+"."]}),this.sourceMaskBootstrapWrapper=new n.EffectWrapper({engine:this.engine,name:"sourceMaskBootstrap",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nuniform sampler2D highQualityMaskSampler;\n\nvoid main(void) {\n    float value = texture2D(highQualityMaskSampler, vUV).x;\n    value = value > 0.7 ? 1. : 0.;\n    gl_FragColor = vec4(value, 0., 0., 1.);\n}\n",samplerNames:["highQualityMaskSampler"]}),this.targetMaskBootstrapWrapper=new n.EffectWrapper({engine:this.engine,name:"targetMaskBootstrap",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nuniform sampler2D sourceMaskSampler;\n\nvoid main(void) {\n    gl_FragColor = texture2D(sourceMaskSampler, vUV);\n}\n",samplerNames:["sourceMaskSampler"]}),this.targetMaskUpdateWrapper=new n.EffectWrapper({engine:this.engine,name:"targetMaskUpdate",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nuniform sampler2D sourceMaskSampler;\nuniform sampler2D lnnfTextureSampler;\n\nvoid main(void) {\n    vec2 nn = texture2D(lnnfTextureSampler, vUV).xy;\n\n    // nn is absolute normalized, so just use it as UV.\n    gl_FragColor = texture2D(sourceMaskSampler, nn);\n}\n",samplerNames:["sourceMaskSampler","lnnfTextureSampler"]}),this.refinedMaskUpdateWrapper=new n.EffectWrapper({engine:this.engine,name:"refinedMaskUpdate",fragmentShader:"\nprecision highp float;\n\nvarying vec2 vUV;\n\nuniform sampler2D videoTextureSampler;\nuniform sampler2D maskTextureSampler;\n\n#define NUM_CIRCLE_SAMPLES 8\n#define CIRCLE_RADIUS 0.01\n#define NUM_LINE_SAMPLES 8\n#define GRADIENT_THRESHOLD 0.1\n\nvec4[NUM_LINE_SAMPLES + 1] lineSamples;\nvoid loadLineSamples(vec2 dir, vec4 centerSample) {\n    int halfLineSamples = NUM_LINE_SAMPLES / 2;\n    lineSamples[halfLineSamples] = centerSample;\n    float stepSize = CIRCLE_RADIUS / float(halfLineSamples);\n    \n    for (int offset = 1; offset <= halfLineSamples; ++offset) {\n        vec2 delta = float(offset) * stepSize * dir;\n        lineSamples[halfLineSamples - offset] = texture2D(videoTextureSampler, vUV - delta);\n        lineSamples[halfLineSamples + offset] = texture2D(videoTextureSampler, vUV + delta);\n    }\n}\n\nvoid main(void) {\n    float centerMask = texture2D(maskTextureSampler, vUV).x;\n    vec4 centerSample = texture2D(videoTextureSampler, vUV);\n    \n    float theta = 2. * 3.14159 / float(NUM_CIRCLE_SAMPLES);\n    mat2 matrix = mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n    vec2 dir = vec2(1., 0.);\n    vec2 gradient = vec2(0., 0.);\n    for (int idx = 0; idx < NUM_CIRCLE_SAMPLES; ++idx) {\n        dir = matrix * dir;\n        float mask = texture2D(maskTextureSampler, vUV + (dir * CIRCLE_RADIUS)).x;\n        gradient += (dir * (mask - centerMask));\n    }\n    gradient /= float(NUM_CIRCLE_SAMPLES);\n    \n    if (length(gradient) < GRADIENT_THRESHOLD) {\n        gl_FragColor = vec4(centerMask, 0., 0., 1.);\n        return;\n    }\n    \n    loadLineSamples(normalize(gradient), centerSample);\n    \n    float maxDelta = 0.01;\n    float maskValue = 1.;\n    for (int idx = 1; idx < NUM_LINE_SAMPLES + 1; ++idx) {\n        float delta = abs(lineSamples[idx].y - lineSamples[idx - 1].y);\n        if (delta > maxDelta) {\n            maxDelta = delta;\n            maskValue = idx > (NUM_LINE_SAMPLES / 2) ? 0. : 1.;\n        }\n    }\n    \n    gl_FragColor = vec4(maskValue, 0., 0., 1.);\n}\n",samplerNames:["videoTextureSampler","maskTextureSampler"]}),this.sadWrapper=new n.EffectWrapper({engine:this.engine,name:"sad",fragmentShader:"\nprecision highp float;\n\nuniform sampler2D sourceMaskSampler;\nuniform sampler2D targetMaskSampler;\n\nuniform float scalar;\n\nvoid main(void) {\n    float sad = 0.;\n    float increment = 1. / (RESOLUTION + 1.);\n    for (float y = increment; y < 1.; y += increment) {\n        for (float x = increment; x < 1.; x += increment) {\n            vec2 uv = vec2(x, y);\n            float source = texture2D(sourceMaskSampler, uv).x;\n            float target = texture2D(targetMaskSampler, uv).x;\n            sad += abs(source - target);\n        }\n    }\n    gl_FragColor = vec4(scalar * sad, 0., 0.5, 0.);\n}\n",samplerNames:["sourceMaskSampler","targetMaskSampler"],uniformNames:["scalar"],defines:["#define RESOLUTION 10."]})},t}();e.MaskPropagationRenderer=o},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getVersion=void 0,e.getVersion=function(){return"_WEBCV_BUILD_VERSION_"}},function(t,e,r){"use strict";(function(t){var n=r(592),a=r(593),o=r(594);function i(){return v.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(t,e){if(i()<e)throw new RangeError("Invalid typed array length");return v.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=v.prototype:(null===t&&(t=new v(e)),t.length=e),t}function v(t,e,r){if(!(v.TYPED_ARRAY_SUPPORT||this instanceof v))return new v(t,e,r);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return P(this,t)}return s(this,t,e,r)}function s(t,e,r,n){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,r,n){if(e.byteLength,r<0||e.byteLength<r)throw new RangeError("'offset' is out of bounds");if(e.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");return e=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n),v.TYPED_ARRAY_SUPPORT?(t=e).__proto__=v.prototype:t=l(t,e),t}(t,e,r,n):"string"==typeof e?function(t,e,r){if("string"==typeof r&&""!==r||(r="utf8"),!v.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|d(e,r),a=(t=u(t,n)).write(e,r);return a!==n&&(t=t.slice(0,a)),t}(t,e,r):function(t,e){if(v.isBuffer(e)){var r=0|f(e.length);return 0===(t=u(t,r)).length||e.copy(t,0,0,r),t}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(n=e.length)!=n?u(t,0):l(t,e);if("Buffer"===e.type&&o(e.data))return l(t,e.data)}var n;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function c(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function P(t,e){if(c(e),t=u(t,e<0?0:0|f(e)),!v.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function l(t,e){var r=e.length<0?0:0|f(e.length);t=u(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function f(t){if(t>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|t}function d(t,e){if(v.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var r=t.length;if(0===r)return 0;for(var n=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return Y(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return G(t).length;default:if(n)return Y(t).length;e=(""+e).toLowerCase(),n=!0}}function p(t,e,r){var n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return S(this,e,r);case"utf8":case"utf-8":return x(this,e,r);case"ascii":return O(this,e,r);case"latin1":case"binary":return L(this,e,r);case"base64":return D(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,e,r);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function b(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function h(t,e,r,n,a){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=a?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(a)return-1;r=t.length-1}else if(r<0){if(!a)return-1;r=0}if("string"==typeof e&&(e=v.from(e,n)),v.isBuffer(e))return 0===e.length?-1:y(t,e,r,n,a);if("number"==typeof e)return e&=255,v.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):y(t,[e],r,n,a);throw new TypeError("val must be string, number or Buffer")}function y(t,e,r,n,a){var o,i=1,u=t.length,v=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||e.length<2)return-1;i=2,u/=2,v/=2,r/=2}function s(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(a){var c=-1;for(o=r;o<u;o++)if(s(t,o)===s(e,-1===c?0:o-c)){if(-1===c&&(c=o),o-c+1===v)return c*i}else-1!==c&&(o-=o-c),c=-1}else for(r+v>u&&(r=u-v),o=r;o>=0;o--){for(var P=!0,l=0;l<v;l++)if(s(t,o+l)!==s(e,l)){P=!1;break}if(P)return o}return-1}function m(t,e,r,n){r=Number(r)||0;var a=t.length-r;n?(n=Number(n))>a&&(n=a):n=a;var o=e.length;if(o%2!=0)throw new TypeError("Invalid hex string");n>o/2&&(n=o/2);for(var i=0;i<n;++i){var u=parseInt(e.substr(2*i,2),16);if(isNaN(u))return i;t[r+i]=u}return i}function g(t,e,r,n){return F(Y(e,t.length-r),t,r,n)}function T(t,e,r,n){return F(function(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function j(t,e,r,n){return T(t,e,r,n)}function z(t,e,r,n){return F(G(e),t,r,n)}function w(t,e,r,n){return F(function(t,e){for(var r,n,a,o=[],i=0;i<t.length&&!((e-=2)<0);++i)n=(r=t.charCodeAt(i))>>8,a=r%256,o.push(a),o.push(n);return o}(e,t.length-r),t,r,n)}function D(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function x(t,e,r){r=Math.min(t.length,r);for(var n=[],a=e;a<r;){var o,i,u,v,s=t[a],c=null,P=s>239?4:s>223?3:s>191?2:1;if(a+P<=r)switch(P){case 1:s<128&&(c=s);break;case 2:128==(192&(o=t[a+1]))&&(v=(31&s)<<6|63&o)>127&&(c=v);break;case 3:o=t[a+1],i=t[a+2],128==(192&o)&&128==(192&i)&&(v=(15&s)<<12|(63&o)<<6|63&i)>2047&&(v<55296||v>57343)&&(c=v);break;case 4:o=t[a+1],i=t[a+2],u=t[a+3],128==(192&o)&&128==(192&i)&&128==(192&u)&&(v=(15&s)<<18|(63&o)<<12|(63&i)<<6|63&u)>65535&&v<1114112&&(c=v)}null===c?(c=65533,P=1):c>65535&&(c-=65536,n.push(c>>>10&1023|55296),c=56320|1023&c),n.push(c),a+=P}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);for(var r="",n=0;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=4096));return r}(n)}function O(t,e,r){var n="";r=Math.min(t.length,r);for(var a=e;a<r;++a)n+=String.fromCharCode(127&t[a]);return n}function L(t,e,r){var n="";r=Math.min(t.length,r);for(var a=e;a<r;++a)n+=String.fromCharCode(t[a]);return n}function S(t,e,r){var n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);for(var a="",o=e;o<r;++o)a+=Q(t[o]);return a}function A(t,e,r){for(var n=t.slice(e,r),a="",o=0;o<n.length;o+=2)a+=String.fromCharCode(n[o]+256*n[o+1]);return a}function k(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function C(t,e,r,n,a,o){if(!v.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>a||e<o)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function I(t,e,r,n){e<0&&(e=65535+e+1);for(var a=0,o=Math.min(t.length-r,2);a<o;++a)t[r+a]=(e&255<<8*(n?a:1-a))>>>8*(n?a:1-a)}function E(t,e,r,n){e<0&&(e=4294967295+e+1);for(var a=0,o=Math.min(t.length-r,4);a<o;++a)t[r+a]=e>>>8*(n?a:3-a)&255}function M(t,e,r,n,a,o){if(r+n>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function U(t,e,r,n,o){return o||M(t,0,r,4),a.write(t,e,r,n,23,4),r+4}function R(t,e,r,n,o){return o||M(t,0,r,8),a.write(t,e,r,n,52,8),r+8}e.Buffer=v,e.SlowBuffer=function(t){return+t!=t&&(t=0),v.alloc(+t)},e.INSPECT_MAX_BYTES=50,v.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=i(),v.poolSize=8192,v._augment=function(t){return t.__proto__=v.prototype,t},v.from=function(t,e,r){return s(null,t,e,r)},v.TYPED_ARRAY_SUPPORT&&(v.prototype.__proto__=Uint8Array.prototype,v.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&v[Symbol.species]===v&&Object.defineProperty(v,Symbol.species,{value:null,configurable:!0})),v.alloc=function(t,e,r){return function(t,e,r,n){return c(e),e<=0?u(t,e):void 0!==r?"string"==typeof n?u(t,e).fill(r,n):u(t,e).fill(r):u(t,e)}(null,t,e,r)},v.allocUnsafe=function(t){return P(null,t)},v.allocUnsafeSlow=function(t){return P(null,t)},v.isBuffer=function(t){return!(null==t||!t._isBuffer)},v.compare=function(t,e){if(!v.isBuffer(t)||!v.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var r=t.length,n=e.length,a=0,o=Math.min(r,n);a<o;++a)if(t[a]!==e[a]){r=t[a],n=e[a];break}return r<n?-1:n<r?1:0},v.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},v.concat=function(t,e){if(!o(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return v.alloc(0);var r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;var n=v.allocUnsafe(e),a=0;for(r=0;r<t.length;++r){var i=t[r];if(!v.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(n,a),a+=i.length}return n},v.byteLength=d,v.prototype._isBuffer=!0,v.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},v.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},v.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},v.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?x(this,0,t):p.apply(this,arguments)},v.prototype.equals=function(t){if(!v.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===v.compare(this,t)},v.prototype.inspect=function(){var t="",r=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,r).match(/.{2}/g).join(" "),this.length>r&&(t+=" ... ")),"<Buffer "+t+">"},v.prototype.compare=function(t,e,r,n,a){if(!v.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===a&&(a=this.length),e<0||r>t.length||n<0||a>this.length)throw new RangeError("out of range index");if(n>=a&&e>=r)return 0;if(n>=a)return-1;if(e>=r)return 1;if(this===t)return 0;for(var o=(a>>>=0)-(n>>>=0),i=(r>>>=0)-(e>>>=0),u=Math.min(o,i),s=this.slice(n,a),c=t.slice(e,r),P=0;P<u;++P)if(s[P]!==c[P]){o=s[P],i=c[P];break}return o<i?-1:i<o?1:0},v.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},v.prototype.indexOf=function(t,e,r){return h(this,t,e,r,!0)},v.prototype.lastIndexOf=function(t,e,r){return h(this,t,e,r,!1)},v.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var a=this.length-e;if((void 0===r||r>a)&&(r=a),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return m(this,t,e,r);case"utf8":case"utf-8":return g(this,t,e,r);case"ascii":return T(this,t,e,r);case"latin1":case"binary":return j(this,t,e,r);case"base64":return z(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return w(this,t,e,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},v.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},v.prototype.slice=function(t,e){var r,n=this.length;if((t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(e=void 0===e?n:~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t),v.TYPED_ARRAY_SUPPORT)(r=this.subarray(t,e)).__proto__=v.prototype;else{var a=e-t;r=new v(a,void 0);for(var o=0;o<a;++o)r[o]=this[o+t]}return r},v.prototype.readUIntLE=function(t,e,r){t|=0,e|=0,r||k(t,e,this.length);for(var n=this[t],a=1,o=0;++o<e&&(a*=256);)n+=this[t+o]*a;return n},v.prototype.readUIntBE=function(t,e,r){t|=0,e|=0,r||k(t,e,this.length);for(var n=this[t+--e],a=1;e>0&&(a*=256);)n+=this[t+--e]*a;return n},v.prototype.readUInt8=function(t,e){return e||k(t,1,this.length),this[t]},v.prototype.readUInt16LE=function(t,e){return e||k(t,2,this.length),this[t]|this[t+1]<<8},v.prototype.readUInt16BE=function(t,e){return e||k(t,2,this.length),this[t]<<8|this[t+1]},v.prototype.readUInt32LE=function(t,e){return e||k(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},v.prototype.readUInt32BE=function(t,e){return e||k(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},v.prototype.readIntLE=function(t,e,r){t|=0,e|=0,r||k(t,e,this.length);for(var n=this[t],a=1,o=0;++o<e&&(a*=256);)n+=this[t+o]*a;return n>=(a*=128)&&(n-=Math.pow(2,8*e)),n},v.prototype.readIntBE=function(t,e,r){t|=0,e|=0,r||k(t,e,this.length);for(var n=e,a=1,o=this[t+--n];n>0&&(a*=256);)o+=this[t+--n]*a;return o>=(a*=128)&&(o-=Math.pow(2,8*e)),o},v.prototype.readInt8=function(t,e){return e||k(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},v.prototype.readInt16LE=function(t,e){e||k(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},v.prototype.readInt16BE=function(t,e){e||k(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},v.prototype.readInt32LE=function(t,e){return e||k(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},v.prototype.readInt32BE=function(t,e){return e||k(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},v.prototype.readFloatLE=function(t,e){return e||k(t,4,this.length),a.read(this,t,!0,23,4)},v.prototype.readFloatBE=function(t,e){return e||k(t,4,this.length),a.read(this,t,!1,23,4)},v.prototype.readDoubleLE=function(t,e){return e||k(t,8,this.length),a.read(this,t,!0,52,8)},v.prototype.readDoubleBE=function(t,e){return e||k(t,8,this.length),a.read(this,t,!1,52,8)},v.prototype.writeUIntLE=function(t,e,r,n){t=+t,e|=0,r|=0,n||C(this,t,e,r,Math.pow(2,8*r)-1,0);var a=1,o=0;for(this[e]=255&t;++o<r&&(a*=256);)this[e+o]=t/a&255;return e+r},v.prototype.writeUIntBE=function(t,e,r,n){t=+t,e|=0,r|=0,n||C(this,t,e,r,Math.pow(2,8*r)-1,0);var a=r-1,o=1;for(this[e+a]=255&t;--a>=0&&(o*=256);)this[e+a]=t/o&255;return e+r},v.prototype.writeUInt8=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,1,255,0),v.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},v.prototype.writeUInt16LE=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,2,65535,0),v.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):I(this,t,e,!0),e+2},v.prototype.writeUInt16BE=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,2,65535,0),v.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):I(this,t,e,!1),e+2},v.prototype.writeUInt32LE=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,4,4294967295,0),v.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):E(this,t,e,!0),e+4},v.prototype.writeUInt32BE=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,4,4294967295,0),v.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):E(this,t,e,!1),e+4},v.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e|=0,!n){var a=Math.pow(2,8*r-1);C(this,t,e,r,a-1,-a)}var o=0,i=1,u=0;for(this[e]=255&t;++o<r&&(i*=256);)t<0&&0===u&&0!==this[e+o-1]&&(u=1),this[e+o]=(t/i>>0)-u&255;return e+r},v.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e|=0,!n){var a=Math.pow(2,8*r-1);C(this,t,e,r,a-1,-a)}var o=r-1,i=1,u=0;for(this[e+o]=255&t;--o>=0&&(i*=256);)t<0&&0===u&&0!==this[e+o+1]&&(u=1),this[e+o]=(t/i>>0)-u&255;return e+r},v.prototype.writeInt8=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,1,127,-128),v.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},v.prototype.writeInt16LE=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,2,32767,-32768),v.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):I(this,t,e,!0),e+2},v.prototype.writeInt16BE=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,2,32767,-32768),v.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):I(this,t,e,!1),e+2},v.prototype.writeInt32LE=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,4,2147483647,-2147483648),v.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):E(this,t,e,!0),e+4},v.prototype.writeInt32BE=function(t,e,r){return t=+t,e|=0,r||C(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),v.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):E(this,t,e,!1),e+4},v.prototype.writeFloatLE=function(t,e,r){return U(this,t,e,!0,r)},v.prototype.writeFloatBE=function(t,e,r){return U(this,t,e,!1,r)},v.prototype.writeDoubleLE=function(t,e,r){return R(this,t,e,!0,r)},v.prototype.writeDoubleBE=function(t,e,r){return R(this,t,e,!1,r)},v.prototype.copy=function(t,e,r,n){if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var a,o=n-r;if(this===t&&r<e&&e<n)for(a=o-1;a>=0;--a)t[a+e]=this[a+r];else if(o<1e3||!v.TYPED_ARRAY_SUPPORT)for(a=0;a<o;++a)t[a+e]=this[a+r];else Uint8Array.prototype.set.call(t,this.subarray(r,r+o),e);return o},v.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===t.length){var a=t.charCodeAt(0);a<256&&(t=a)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!v.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;var o;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(o=e;o<r;++o)this[o]=t;else{var i=v.isBuffer(t)?t:Y(new v(t,n).toString()),u=i.length;for(o=0;o<r-e;++o)this[o+e]=i[o%u]}return this};var W=/[^+\/0-9A-Za-z-_]/g;function Q(t){return t<16?"0"+t.toString(16):t.toString(16)}function Y(t,e){var r;e=e||1/0;for(var n=t.length,a=null,o=[],i=0;i<n;++i){if((r=t.charCodeAt(i))>55295&&r<57344){if(!a){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(i+1===n){(e-=3)>-1&&o.push(239,191,189);continue}a=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),a=r;continue}r=65536+(a-55296<<10|r-56320)}else a&&(e-=3)>-1&&o.push(239,191,189);if(a=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function G(t){return n.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(W,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function F(t,e,r,n){for(var a=0;a<n&&!(a+r>=e.length||a>=t.length);++a)e[a+r]=t[a];return a}}).call(this,r(148))},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({acos_:function(t){var e={x:Object(o.a)(t,"x","acos")};return n.a.runKernel(a.b,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({acosh_:function(t){var e={x:Object(o.a)(t,"x","acosh")};return n.a.runKernel(a.c,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({addN_:function(t){i.b(Array.isArray(t),(function(){return"The argument passed to tf.addN() must be a list of tensors"})),i.b(t.length>=1,(function(){return"Must pass at least one tensor to tf.addN(), but got "+"".concat(t.length)}));var e=t.map((function(t,e){return Object(o.a)(t,"tensors".concat(e),"addN")})),r=e[0];e.forEach((function(t){if(t.dtype!==r.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((function(t){if(!i.a(t.shape,r.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));var u=e;return n.a.runKernel(a.e,u)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({asin_:function(t){var e={x:Object(o.a)(t,"x","asin")};return n.a.runKernel(a.j,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({asinh_:function(t){var e={x:Object(o.a)(t,"x","asinh")};return n.a.runKernel(a.k,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({atan_:function(t){var e={x:Object(o.a)(t,"x","atan")};return n.a.runKernel(a.l,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({atanh_:function(t){var e={x:Object(o.a)(t,"x","atanh")};return n.a.runKernel(a.n,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return l}));var n=r(5),a=r(20),o=r(3),i=r(1),u=r(7),v=r(12),s=r(29),c=r(4),P=r(8),l=Object(c.b)({avgPool3d_:function(t,e,r,c,l){var f=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",d=arguments.length>6?arguments[6]:void 0;null==d?d=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");var p=Object(i.a)(t,"x","avgPool3d","float32"),b=p,h=!1;4===p.rank&&(h=!0,b=Object(P.a)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),u.b(5===b.rank,(function(){return"Error in avgPool3d: x must be rank 5 but got rank ".concat(b.rank,".")})),u.b("NDHWC"===f,(function(){return"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(f)})),u.b(s.h(r,d),(function(){return"Error in avgPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(d,"'")})),null!=l&&u.b(u.v(c),(function(){return"Error in avgPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,".")}));var y={x:b},m={filterSize:e,strides:r,pad:c,dimRoundingMode:l,dataFormat:f,dilations:d},g=n.a.runKernel(o.p,y,m);return g=Object(v.a)(g,b.dtype),h?Object(P.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({bincount_:function(t,e,r){var u=Object(o.a)(t,"x","bincount"),v=Object(o.a)(e,"weights","bincount");i.b("int32"===u.dtype,(function(){return"Error in bincount: input "+"dtype must be int32, but got ".concat(u.dtype)})),i.b(r>=0,(function(){return"size must be non-negative, but got ".concat(r,".")})),i.b(v.size===u.size||0===v.size,(function(){return"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(u.shape,", weights shape: ")+"".concat(v.shape,".")}));var s={x:u,weights:v},c={size:r};return n.a.runKernel(a.u,s,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({ceil_:function(t){var e={x:Object(o.a)(t,"x","ceil")};return n.a.runKernel(a.x,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({clipByValue_:function(t,e,r){var u=Object(o.a)(t,"x","clipByValue");i.b(e<=r,(function(){return"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(r,").")}));var v={x:u},s={clipValueMin:e,clipValueMax:r};return n.a.runKernel(a.y,v,s)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(29),v=r(4),s=r(8),c=Object(v.b)({conv3d_:function(t,e,r,v){var c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",P=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],l=Object(o.a)(t,"x","conv3d"),f=Object(o.a)(e,"filter","conv3d"),d=l,p=!1;4===l.rank&&(p=!0,d=Object(s.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),i.b(5===d.rank,(function(){return"Error in conv3d: input must be rank 5, but got rank ".concat(d.rank,".")})),i.b(5===f.rank,(function(){return"Error in conv3d: filter must be rank 5, but got rank "+"".concat(f.rank,".")})),i.b(d.shape[4]===f.shape[3],(function(){return"Error in conv3d: depth of input (".concat(d.shape[4],") must match ")+"input depth for filter ".concat(f.shape[3],".")})),i.b(Object(u.h)(r,P),(function(){return"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(P,"'")})),i.b("NDHWC"===c,(function(){return"Error in conv3d: got dataFormat of ".concat(c," but only NDHWC is currently supported.")}));var b={x:d,filter:f},h={strides:r,pad:v,dataFormat:c,dilations:P},y=n.a.runKernel(a.F,b,h);return p?Object(s.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(4),v=Object(u.b)({denseBincount_:function(t,e,r){var u=arguments.length>3&&void 0!==arguments[3]&&arguments[3],v=Object(o.a)(t,"x","denseBincount"),s=Object(o.a)(e,"weights","denseBincount");i.b("int32"===v.dtype,(function(){return"Error in denseBincount: input "+"dtype must be int32, but got ".concat(v.dtype)})),i.b(v.rank<=2,(function(){return"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(v.rank,".")})),i.b(r>=0,(function(){return"size must be non-negative, but got ".concat(r,".")})),i.b(s.size===v.size||0===s.size,(function(){return"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(v.shape,", weights shape: ")+"".concat(s.shape,".")}));var c={x:v,weights:s},P={size:r,binaryOutput:u};return n.a.runKernel(a.M,c,P)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(5),a=r(3),o=r(1),i=r(7),u=r(12),v=r(4),s=Object(v.b)({erf_:function(t){var e=Object(o.a)(t,"x","erf");i.b("int32"===e.dtype||"float32"===e.dtype,(function(){return"Input dtype must be `int32` or `float32`."})),"int32"===e.dtype&&(e=Object(u.a)(e,"float32"));var r={x:e};return n.a.runKernel(a.Y,r)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({expm1_:function(t){var e={x:Object(o.a)(t,"x","expm1")};return n.a.runKernel(a.bb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({isFinite_:function(t){var e={x:Object(o.a)(t,"x","isFinite")};return n.a.runKernel(a.sb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({isInf_:function(t){var e={x:Object(o.a)(t,"x","isInf")};return n.a.runKernel(a.tb,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({isNaN_:function(t){var e={x:Object(o.a)(t,"x","isNaN")};return n.a.runKernel(a.ub,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var n=r(5),a=r(3);function o(t,e,r){if(r<=0)throw new Error("The number of values should be positive.");var o={start:t,stop:e,num:r};return n.a.runKernel(a.Ab,{},o)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return c}));var n=r(38),a=r(1),o=r(9),i=r(30),u=r(4),v=r(106),s=r(225),c=Object(u.b)({logSigmoid_:function(t){var e=Object(a.a)(t,"x","logSigmoid");return Object(n.a)((function(t){return{value:Object(i.a)(Object(s.a)(Object(i.a)(t))),gradFunc:function(e){return Object(o.a)(e,Object(v.a)(Object(i.a)(t)))}}}))(e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return p}));var n=r(38),a=r(1),o=r(12),i=r(47),u=r(89),v=r(81),s=r(9),c=r(4),P=r(14),l=r(19);function f(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return d(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?d(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var p=Object(c.b)({logSoftmax_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,r=Object(a.a)(t,"logits","logSoftmax");if(-1===e&&(e=r.rank-1),e!==r.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(r.rank," and axis was ").concat(e));var c=Object(n.a)((function(t,r){var n=Object(v.a)(t,e,!0),a=Object(P.a)(t,n),c=Object(P.a)(Object(o.a)(a,"float32"),Object(u.a)(Object(l.a)(Object(i.a)(a),e,!0)));return r([c]),{value:c,gradFunc:function(t,r){var n=f(r,1)[0],a=Object(i.a)(n);return Object(P.a)(t,Object(s.a)(Object(l.a)(t,e,!0),a))}}}));return c(r)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return P}));var n=r(5),a=r(20),o=r(3),i=r(1),u=r(7),v=r(29),s=r(4),c=r(8),P=Object(s.b)({maxPool3d_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],r=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0,P=arguments.length>4?arguments[4]:void 0,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",f=arguments.length>6?arguments[6]:void 0;null==f?f=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");var d=Object(i.a)(t,"x","maxPool3d"),p=d,b=!1;4===d.rank&&(b=!0,p=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),u.b(5===p.rank,(function(){return"Error in maxPool3d: x must be rank 5 but got rank ".concat(p.rank,".")})),u.b("NDHWC"===l,(function(){return"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(l)})),u.b(v.h(r,f),(function(){return"Error in maxPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(f,"'")})),null!=P&&u.b(u.v(s),(function(){return"Error in maxPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(P," but got pad ").concat(s,".")}));var h={x:p},y={filterSize:e,strides:r,pad:s,dimRoundingMode:P,dataFormat:l,dilations:f},m=n.a.runKernel(o.Jb,h,y);return b?Object(c.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({maxPoolWithArgmax_:function(t,e,r,i){var u=arguments.length>4&&void 0!==arguments[4]&&arguments[4],v=Object(o.a)(t,"x","maxPoolWithArgmax"),s={x:v},c={filterSize:e,strides:r,pad:i,includeBatchInIndex:u},P=n.a.runKernel(a.Mb,s,c);return{result:P[0],indexes:P[1]}}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(4),u=r(8),v=Object(i.b)({multinomial_:function(t,e,r){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],v=Object(o.a)(t,"logits","multinomial"),s=v.size,c=v.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(c>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(c));r=r||Math.random();var P=1===c?Object(u.a)(v,[1,-1]):v,l={logits:P},f={numSamples:e,seed:r,normalized:i},d=n.a.runKernel(a.Tb,l,f);return 1===c?Object(u.a)(d,[d.size]):d}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({onesLike_:function(t){var e={x:Object(o.a)(t,"x","onesLike")};return n.a.runKernel(a.bc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({reciprocal_:function(t){var e={x:Object(o.a)(t,"x","reciprocal")};return n.a.runKernel(a.lc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({round_:function(t){var e={x:Object(o.a)(t,"x","round")};return n.a.runKernel(a.vc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return s}));var n=r(6),a=r(1),o=r(7);function i(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function u(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function u(t){i(o,n,a,u,v,"next",t)}function v(t){i(o,n,a,u,v,"throw",t)}u(void 0)}))}}function v(){return(v=u(regeneratorRuntime.mark((function t(e,r){var i,u,v,s,c,P,l,f,d,p,b;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return i=Object(a.a)(e,"x","setdiff1d"),u=Object(a.a)(r,"y","setdiff1d"),o.b(i.dtype===u.dtype,(function(){return"x and y should have the same dtype, but got x (".concat(i.dtype,") and y (").concat(u.dtype,").")})),o.b(1===i.rank,(function(){return"x should be 1D tensor, but got x (".concat(i.shape,").")})),o.b(1===u.rank,(function(){return"y should be 1D tensor, but got y (".concat(u.shape,").")})),t.next=7,i.data();case 7:return v=t.sent,t.next=10,u.data();case 10:for(s=t.sent,c=new Set(s),P=0,l=0;l<v.length;l++)c.has(v[l])||P++;for(f=new n.b([P],i.dtype),d=new n.b([P],"int32"),p=0,b=0;p<v.length;p++)c.has(v[p])||(f.values[b]=v[p],d.values[b]=p,b++);return t.abrupt("return",[f.toTensor(),d.toTensor()]);case 18:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var s=function(t,e){return v.apply(this,arguments)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({sign_:function(t){var e={x:Object(o.a)(t,"x","sign")};return n.a.runKernel(a.Bc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({softmax_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,r=Object(o.a)(t,"logits","softmax","float32");if(-1===e&&(e=r.rank-1),e!==r.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(r.rank," and dim was ").concat(e));var i={logits:r},u={dim:e};return n.a.runKernel(a.Fc,i,u)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({stridedSlice_:function(t,e,r,i){var u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,v=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,P=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0,l=Object(o.a)(t,"x","stridedSlice"),f={x:l},d={begin:e,end:r,strides:i,beginMask:u,endMask:v,ellipsisMask:s,newAxisMask:c,shrinkAxisMask:P};return n.a.runKernel(a.Oc,f,d)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({tan_:function(t){var e={x:Object(o.a)(t,"x","tan")};return n.a.runKernel(a.Rc,e)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));var n=r(53),a=r(4),o=r(130),i=Object(a.b)({truncatedNormal_:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,i=arguments.length>4?arguments[4]:void 0;if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");for(var u=new o.a(e,r,a,!0,i),v=Object(n.a)(t,a),s=0;s<v.values.length;s++)v.values[s]=u.nextValue();return v.toTensor()}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return f})),r.d(e,"b",(function(){return d})),r.d(e,"c",(function(){return p})),r.d(e,"d",(function(){return b})),r.d(e,"e",(function(){return h})),r.d(e,"f",(function(){return y}));var n=r(20),a=r(1),o=r(7),i=r(100),u=r(52),v=r(60),s=r(122),c=r(61),P=r(125),l=r(4),f=Object(l.b)({equalStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","equalStrict"),u=Object(a.a)(e,"b","equalStrict");return Object(o.e)(r.shape,u.shape,"Error in equalStrict: "),Object(i.a)(r,u)}}),d=Object(l.b)({greaterEqualStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","greaterEqualStrict"),i=Object(a.a)(e,"b","greaterEqualStrict");return Object(o.e)(r.shape,i.shape,"Error in greaterEqualStrict: "),Object(v.a)(r,i)}}),p=Object(l.b)({greaterStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","greaterStrict"),i=Object(a.a)(e,"b","greaterStrict");return Object(o.e)(r.shape,i.shape,"Error in greaterStrict: "),Object(u.a)(r,i)}}),b=Object(l.b)({lessEqualStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","lessEqualStrict"),i=Object(a.a)(e,"b","lessEqualStrict");return Object(o.e)(r.shape,i.shape,"Error in lessEqualStrict: "),Object(c.a)(r,i)}}),h=Object(l.b)({lessStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","lessStrict"),i=Object(a.a)(e,"b","lessStrict");return Object(o.e)(r.shape,i.shape,"Error in lessStrict: "),Object(s.a)(r,i)}}),y=Object(l.b)({notEqualStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","notEqualStrict"),i=Object(a.a)(e,"b","notEqualStrict");return Object(o.e)(r.shape,i.shape,"Error in notEqualStrict: "),Object(P.a)(r,i)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return b})),r.d(e,"b",(function(){return h})),r.d(e,"c",(function(){return y})),r.d(e,"d",(function(){return m})),r.d(e,"e",(function(){return g})),r.d(e,"f",(function(){return T})),r.d(e,"g",(function(){return j})),r.d(e,"h",(function(){return z})),r.d(e,"i",(function(){return w}));var n=r(20),a=r(1),o=r(7),i=r(13),u=r(15),v=r(98),s=r(124),c=r(168),P=r(9),l=r(4),f=r(54),d=r(127),p=r(14),b=Object(l.b)({addStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","addStrict"),u=Object(a.a)(e,"b","addStrict");return o.e(r.shape,u.shape,"Error in addStrict: "),Object(i.a)(r,u)}}),h=Object(l.b)({divStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","div"),i=Object(a.a)(e,"b","div");return o.e(r.shape,i.shape,"Error in divideStrict: "),Object(u.a)(r,i)}}),y=Object(l.b)({maximumStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","maximumStrict"),i=Object(a.a)(e,"b","maximumStrict");return o.e(r.shape,i.shape,"Error in maximumStrict: "),Object(v.a)(r,i)}}),m=Object(l.b)({minimumStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","minimumStrict"),i=Object(a.a)(e,"b","minimumStrict");return o.e(r.shape,i.shape,"Error in minimumStrict: "),Object(s.a)(r,i)}}),g=Object(l.b)({modStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","modStrict"),i=Object(a.a)(e,"b","modStrict");return o.e(r.shape,i.shape,"Error in modStrict: "),Object(c.a)(r,i)}}),T=Object(l.b)({mulStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","mul"),i=Object(a.a)(e,"b","mul");return o.e(r.shape,i.shape,"Error in multiplyStrict: "),Object(P.a)(r,i)}}),j=Object(l.b)({powStrict_:function(t,e){return Object(n.b)("strict variants of ops have been deprecated and will be removed in future"),o.e(t.shape,e.shape,"Error in powStrict: "),Object(f.a)(t,e)}}),z=Object(l.b)({squaredDifferenceStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","squaredDifferenceStrict"),i=Object(a.a)(e,"b","squaredDifferenceStrict");return o.e(r.shape,i.shape,"Error in squaredDifferenceStrict: "),Object(d.a)(r,i)}}),w=Object(l.b)({subStrict_:function(t,e){Object(n.b)("strict variants of ops have been deprecated and will be removed in future");var r=Object(a.a)(t,"a","subStrict"),i=Object(a.a)(e,"b","subStrict");return o.e(r.shape,i.shape,"Error in subStrict: "),Object(p.a)(r,i)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3),o=r(1),i=r(4),u=r(155),v=Object(i.b)({scatterND_:function(t,e,r){var i=Object(o.a)(t,"indices","scatterND","int32"),v=Object(o.a)(e,"updates","scatterND");u.validateInput(v,i,r);var s={indices:i,updates:v},c={shape:r};return n.a.runKernel(a.xc,s,c)}})},function(t,e,r){"use strict";r.d(e,"a",(function(){return u}));var n=r(5),a=r(3),o=r(1),i=r(4),u=Object(i.b)({gatherND_:function(t,e){var r=Object(o.a)(e,"indices","gatherND","int32"),i={params:Object(o.a)(t,"x","gatherND"),indices:r};return n.a.runKernel(a.lb,i)}})},function(t,e,r){"use strict";(function(t){r.d(e,"a",(function(){return a}));var n="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==t?t:function(t){return t()};function a(){return new Promise((function(t){return n((function(){return t()}))}))}}).call(this,r(606).setImmediate)},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ResizeRenderer=e.ResizeRendererOptions=void 0,r(207);var n=r(154),a=r(186);e.ResizeRendererOptions=function(){};var o=function(){function t(t){this.engine=t.engine,this.effectRenderer=t.effectRenderer,this.width=t.width,this.height=t.height,this.createResizePipeline()}return t.prototype.dispose=function(){this.resizeWrapper&&this.resizeWrapper.dispose(),this.targetTexture&&this.targetTexture.dispose()},t.prototype.resize=function(t){var e=this.targetTexture.getInternalTexture();return this.engine.bindFramebuffer(e),this.effectRenderer.applyEffectWrapper(this.resizeWrapper),this.resizeWrapper.effect.setTexture("inputSampler",t),this.effectRenderer.draw(),this.engine.unBindFramebuffer(e),this.targetTexture},t.prototype.createResizePipeline=function(){var t={width:this.width,height:this.height},e=this.engine.createRenderTargetTexture(t,{generateDepthBuffer:!1,generateStencilBuffer:!1,generateMipMaps:!1,samplingMode:1});this.targetTexture=new a.ThinTexture(e),this.resizeWrapper=new n.EffectWrapper({engine:this.engine,name:"resize",fragmentShader:"\n            varying vec2 vUV;\n\n            uniform sampler2D inputSampler;\n\n            void main(void)\n            {\n                gl_FragColor = texture2D(inputSampler, vUV);\n            }\n        ",samplerNames:["inputSampler"]})},t}();e.ResizeRenderer=o},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BabylonStateManager=void 0;var n=r(364),a=r(0),o=function(){function t(t){this.engine=t}return t.prototype.resetBabylonState=function(){var t=a.backend().gpgpu.gl;t.disable(t.SCISSOR_TEST),t.bindFramebuffer(t.FRAMEBUFFER,null),this.engine.wipeCaches(!0)},t.prototype.resetTFState=function(){var t=a.backend().gpgpu,e=t.gl;e.enable(e.SCISSOR_TEST),e.useProgram(t.program),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.indexBuffer),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,0),t.program&&n.gpgpu_util.bindVertexProgramAttributeStreams(e,t.program,t.vertexBuffer)},t}();e.BabylonStateManager=o},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BackgroundTypes=void 0,function(t){t[t.Blur=0]="Blur",t[t.Image=1]="Image",t[t.Color=2]="Color",t[t.None=3]="None",t[t.Gif=4]="Gif"}(e.BackgroundTypes||(e.BackgroundTypes={}))},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PaceController=void 0;var n=function(){function t(t){this.logger=t,this.previousTimestamp=0}return t.prototype.setConfiguration=function(t){t&&(this.frameTimeout=t,this.logger.debug("Frame timeout updated: "+JSON.stringify(this.frameTimeout)))},t.prototype.shouldSkipFrame=function(t){var e=t-this.previousTimestamp,r=e<this.frameTimeout;return r||(this.previousTimestamp=t-e%this.frameTimeout),r},t}();e.PaceController=n},function(t,e,r){"use strict";var n=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(a,o){function i(t){try{v(n.next(t))}catch(t){o(t)}}function u(t){try{v(n.throw(t))}catch(t){o(t)}}function v(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,u)}v((n=n.apply(t,e||[])).next())}))},a=this&&this.__generator||function(t,e){var r,n,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,n=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=e.call(t,i)}catch(t){o=[6,t],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.Mask=void 0;var o=r(154),i=r(0),u=r(359),v=r(360),s=r(616),c=r(619),P=r(620),l=function(){function t(t,e,r,n){this.engine=t,this.logger=e,this.configProvider=r,this.stats=n,this.isDisposed=!1,this.maskConfig=this.configProvider.baseConfig.mask,this.mockCanvas={width:this.maskConfig.maskWidth,height:this.maskConfig.maskHeight},this.effectRenderer=new o.EffectRenderer(this.engine),this.resizeRenderer=new u.ResizeRenderer({engine:t,effectRenderer:this.effectRenderer,width:this.maskConfig.maskWidth,height:this.maskConfig.maskHeight}),this.stateManager=new v.BabylonStateManager(this.engine)}return t.prototype.init=function(t){return n(this,void 0,void 0,(function(){var e;return a(this,(function(r){switch(r.label){case 0:return this.logger.info("Init called with config: "+JSON.stringify(t)),this.modelLoader=new s.SharedModelLoader,this.modelConfig=t,[4,this.modelLoader.initializeBackend(this.engine.getRenderingCanvas(),this.configProvider.webcvConfig.powerPreference,this.stats)];case 1:return r.sent(),[4,this.modelLoader.loadModel(this.modelConfig)];case 2:return e=r.sent(),this.segmenter=new P.Segmenter(e,this.mockCanvas,this.maskConfig,this.logger),[2]}}))}))},t.prototype.videoFrame=function(t,e,r){if(!this.isDisposed){var n=this.resizeRenderer.resize(t);this.stateManager.resetTFState();var a=this.segmenter.runPrediction(n.getInternalTexture()._webGLTexture),o=c.getRawTexture(a);c.swapHardwareTexture(this.engine,o,e),this.stateManager.resetBabylonState();try{r&&r()}finally{a.dispose()}}},t.prototype.dispose=function(){this.logger.info("Dispose called"),this.isDisposed=!0,this.segmenter.dispose(),this.segmenter=null,this.resizeRenderer.dispose(),this.effectRenderer.dispose(),this.modelLoader.unloadModel(),this.modelLoader.resetBackend(),i.dispose()},t}();e.Mask=l},function(t,e,r){"use strict";r.r(e),r.d(e,"version_webgl",(function(){return un})),r.d(e,"MathBackendWebGL",(function(){return on})),r.d(e,"setWebGLContext",(function(){return v})),r.d(e,"GPGPUContext",(function(){return $t})),r.d(e,"gpgpu_util",(function(){return a})),r.d(e,"webgl_util",(function(){return n})),r.d(e,"forceHalfFloat",(function(){return vn})),r.d(e,"webgl",(function(){return sn}));var n={};r.r(n),r.d(n,"callAndCheck",(function(){return d})),r.d(n,"canBeRepresented",(function(){return p})),r.d(n,"getWebGLErrorMessage",(function(){return b})),r.d(n,"getExtensionOrThrow",(function(){return h})),r.d(n,"createVertexShader",(function(){return y})),r.d(n,"createFragmentShader",(function(){return m})),r.d(n,"createProgram",(function(){return z})),r.d(n,"linkProgram",(function(){return w})),r.d(n,"validateProgram",(function(){return D})),r.d(n,"createStaticVertexBuffer",(function(){return x})),r.d(n,"createStaticIndexBuffer",(function(){return O})),r.d(n,"getNumChannels",(function(){return L})),r.d(n,"createTexture",(function(){return S})),r.d(n,"validateTextureSize",(function(){return A})),r.d(n,"createFramebuffer",(function(){return k})),r.d(n,"bindVertexBufferToProgramAttribute",(function(){return C})),r.d(n,"bindTextureUnit",(function(){return I})),r.d(n,"unbindTextureUnit",(function(){return E})),r.d(n,"getProgramUniformLocationOrThrow",(function(){return M})),r.d(n,"getProgramUniformLocation",(function(){return U})),r.d(n,"bindTextureToProgramUniformSampler",(function(){return R})),r.d(n,"bindCanvasToFramebuffer",(function(){return W})),r.d(n,"bindColorTextureToFramebuffer",(function(){return Q})),r.d(n,"unbindColorTextureFromFramebuffer",(function(){return Y})),r.d(n,"validateFramebuffer",(function(){return G})),r.d(n,"getFramebufferErrorMessage",(function(){return F})),r.d(n,"getBatchDim",(function(){return K})),r.d(n,"getRowsCols",(function(){return B})),r.d(n,"getShapeAs3D",(function(){return V})),r.d(n,"getTextureShapeFromLogicalShape",(function(){return X})),r.d(n,"isReshapeFree",(function(){return H})),r.d(n,"getWebGLMaxTextureSize",(function(){return J})),r.d(n,"resetMaxTextureSize",(function(){return _})),r.d(n,"resetMaxTexturesInShader",(function(){return $})),r.d(n,"getMaxTexturesInShader",(function(){return tt})),r.d(n,"getWebGLDisjointQueryTimerVersion",(function(){return et})),r.d(n,"hasExtension",(function(){return rt})),r.d(n,"isWebGLVersionEnabled",(function(){return nt})),r.d(n,"isCapableOfRenderingToFloatTexture",(function(){return at})),r.d(n,"isDownloadFloatTextureEnabled",(function(){return ot})),r.d(n,"isWebGLFenceEnabled",(function(){return ut})),r.d(n,"assertNotComplex",(function(){return vt}));var a={};r.r(a),r.d(a,"createVertexShader",(function(){return Lt})),r.d(a,"createVertexBuffer",(function(){return St})),r.d(a,"createIndexBuffer",(function(){return At})),r.d(a,"getInternalFormatForFloat32MatrixTexture",(function(){return Ct})),r.d(a,"createFloat32MatrixTexture",(function(){return It})),r.d(a,"getInternalFormatForFloat16MatrixTexture",(function(){return Et})),r.d(a,"createFloat16MatrixTexture",(function(){return Mt})),r.d(a,"getInternalFormatForUnsignedBytesMatrixTexture",(function(){return Ut})),r.d(a,"createUnsignedBytesMatrixTexture",(function(){return Rt})),r.d(a,"getInternalFormatForPackedMatrixTexture",(function(){return Wt})),r.d(a,"createPackedMatrixTexture",(function(){return Qt})),r.d(a,"getInternalFormatForFloat16PackedMatrixTexture",(function(){return Yt})),r.d(a,"createFloat16PackedMatrixTexture",(function(){return Gt})),r.d(a,"bindVertexProgramAttributeStreams",(function(){return Ft})),r.d(a,"uploadDenseMatrixToTexture",(function(){return Nt})),r.d(a,"uploadPixelDataToTexture",(function(){return qt})),r.d(a,"createBufferFromOutputTexture",(function(){return Kt})),r.d(a,"downloadFloat32MatrixFromBuffer",(function(){return Bt})),r.d(a,"downloadByteEncodedFloatMatrixFromOutputTexture",(function(){return Vt})),r.d(a,"downloadPackedMatrixFromBuffer",(function(){return Xt})),r.d(a,"downloadMatrixFromPackedOutputTexture",(function(){return Zt}));var o=r(0),i={},u={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function v(t,e){i[t]=e}function s(t){if(!(t in i)){var e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(function(e){e.preventDefault(),delete i[t]}),!1),1===t?e.getContext("webgl",u)||e.getContext("experimental-webgl",u):e.getContext("webgl2",u)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;i[t]=e}var r=i[t];return r.isContextLost()?(delete i[t],s(t)):(r.disable(r.DEPTH_TEST),r.disable(r.STENCIL_TEST),r.disable(r.BLEND),r.disable(r.DITHER),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SAMPLE_COVERAGE),r.enable(r.SCISSOR_TEST),r.enable(r.CULL_FACE),r.cullFace(r.BACK),i[t])}var c=r(21);function P(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||l(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(t,e){if(t){if("string"==typeof t)return f(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?f(t,e):void 0}}function f(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function d(t,e){var r=e();return Object(o.env)().getBool("DEBUG")&&function(t){var e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+b(t,e))}(t),r}function p(t){return!!(Object(o.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function b(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}function h(t,e){return N(t,(function(){return t.getExtension(e)}),'Extension "'+e+'" not supported on this browser.')}function y(t,e){var r=N(t,(function(){return t.createShader(t.VERTEX_SHADER)}),"Unable to create vertex WebGLShader.");if(d(t,(function(){return t.shaderSource(r,e)})),d(t,(function(){return t.compileShader(r)})),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function m(t,e){var r=N(t,(function(){return t.createShader(t.FRAGMENT_SHADER)}),"Unable to create fragment WebGLShader.");if(d(t,(function(){return t.shaderSource(r,e)})),d(t,(function(){return t.compileShader(r)})),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw function(t,e){var r=j.exec(e);if(null==r)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);for(var n=+r[1],a=t.split("\n"),i=a.length.toString().length+2,u=a.map((function(t,e){return o.util.rightPad((e+1).toString(),i)+t})),v=0,s=0;s<u.length;s++)v=Math.max(u[s].length,v);var c=u.slice(0,n-1),P=u.slice(n-1,n),l=u.slice(n);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(o.util.rightPad(P[0],v)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}(e,t.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var g,T,j=/ERROR: [0-9]+:([0-9]+):/g;function z(t){return N(t,(function(){return t.createProgram()}),"Unable to create WebGLProgram.")}function w(t,e){if(d(t,(function(){return t.linkProgram(e)})),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function D(t,e){if(d(t,(function(){return t.validateProgram(e)})),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function x(t,e){var r=N(t,(function(){return t.createBuffer()}),"Unable to create WebGLBuffer");return d(t,(function(){return t.bindBuffer(t.ARRAY_BUFFER,r)})),d(t,(function(){return t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)})),r}function O(t,e){var r=N(t,(function(){return t.createBuffer()}),"Unable to create WebGLBuffer");return d(t,(function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r)})),d(t,(function(){return t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)})),r}function L(){return 2===Object(o.env)().getNumber("WEBGL_VERSION")?1:4}function S(t){return N(t,(function(){return t.createTexture()}),"Unable to create WebGLTexture.")}function A(t,e){var r=Object(o.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){var n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>r||e>r){var a="[".concat(t,"x").concat(e,"]"),i="[".concat(r,"x").concat(r,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+i+".")}}function k(t){return N(t,(function(){return t.createFramebuffer()}),"Unable to create WebGLFramebuffer.")}function C(t,e,r,n,a,o,i){var u=t.getAttribLocation(e,r);return-1!==u&&(d(t,(function(){return t.bindBuffer(t.ARRAY_BUFFER,n)})),d(t,(function(){return t.vertexAttribPointer(u,a,t.FLOAT,!1,o,i)})),d(t,(function(){return t.enableVertexAttribArray(u)})),!0)}function I(t,e,r){q(t,r),d(t,(function(){return t.activeTexture(t.TEXTURE0+r)})),d(t,(function(){return t.bindTexture(t.TEXTURE_2D,e)}))}function E(t,e){q(t,e),d(t,(function(){return t.activeTexture(t.TEXTURE0+e)})),d(t,(function(){return t.bindTexture(t.TEXTURE_2D,null)}))}function M(t,e,r){return N(t,(function(){return t.getUniformLocation(e,r)}),'uniform "'+r+'" not present in program.')}function U(t,e,r){return t.getUniformLocation(e,r)}function R(t,e,r,n){d(t,(function(){return I(t,e,n)})),d(t,(function(){return t.uniform1i(r,n)}))}function W(t){d(t,(function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)})),d(t,(function(){return t.viewport(0,0,t.canvas.width,t.canvas.height)})),d(t,(function(){return t.scissor(0,0,t.canvas.width,t.canvas.height)}))}function Q(t,e,r){d(t,(function(){return t.bindFramebuffer(t.FRAMEBUFFER,r)})),d(t,(function(){return t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}))}function Y(t,e){d(t,(function(){return t.bindFramebuffer(t.FRAMEBUFFER,e)})),d(t,(function(){return t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)}))}function G(t){var e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+F(t,e))}function F(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}function N(t,e,r){var n=d(t,(function(){return e()}));if(null==n)throw new Error(r);return n}function q(t,e){var r=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+t.TEXTURE0;if(n<t.TEXTURE0||n>r){var a="[gl.TEXTURE0, gl.TEXTURE".concat(r,"]");throw new Error("textureUnit must be in ".concat(a,"."))}}function K(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return o.util.sizeFromShape(t.slice(0,t.length-e))}function B(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function V(t){var e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[K(t)].concat(function(t){return function(t){if(Array.isArray(t))return f(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||l(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(B(t)))),e}function X(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=Object(o.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(r*=2,1===(t=t.map((function(e,r){return r>=t.length-2?o.util.nearestLargerEven(t[r]):t[r]}))).length&&(t=[2,t[0]])),2!==t.length){var n=o.util.squeezeShape(t);t=n.newShape}var a=o.util.sizeFromShape(t);if(t.length<=1&&a<=r)return[1,a];if(2===t.length&&t[0]<=r&&t[1]<=r)return t;if(3===t.length&&t[0]*t[1]<=r&&t[2]<=r)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=r&&t[1]*t[2]<=r)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=r&&t[3]<=r)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=r&&t[1]*t[2]*t[3]<=r)return[t[0],t[1]*t[2]*t[3]];if(e){var i=K(t),u=2,v=2;if(t.length){var s=B(t),c=P(s,2);u=c[0],v=c[1]}return a=i*(u/2)*(v/2),o.util.sizeToSquarishShape(a).map((function(t){return 2*t}))}return o.util.sizeToSquarishShape(a)}function Z(t){return t%2==0}function H(t,e){if(t=t.slice(-2),e=e.slice(-2),o.util.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){var r=t.slice(-1)[0],n=e.slice(-1)[0];if(r===n)return!0;if(Z(r)&&Z(n)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Z(t[0])&&Z(e[0])}function J(t){if(null==g){var e=s(t);g=e.getParameter(e.MAX_TEXTURE_SIZE)}return g}function _(){g=null}function $(){T=null}function tt(t){if(null==T){var e=s(t);T=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,T)}function et(t){if(0===t)return 0;var e=s(t);return rt(e,"EXT_disjoint_timer_query_webgl2")&&2===t?2:rt(e,"EXT_disjoint_timer_query")?1:0}function rt(t,e){return null!=t.getExtension(e)}function nt(t){try{if(null!=s(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function at(t){if(0===t)return!1;var e=s(t);if(1===t){if(!rt(e,"OES_texture_float"))return!1}else if(!rt(e,"EXT_color_buffer_float"))return!1;return it(e)}function ot(t){if(0===t)return!1;var e=s(t);if(1!==t){if(rt(e,"EXT_color_buffer_float"))return it(e);if(rt(e,"EXT_color_buffer_half_float")){var r=e.getExtension("EXT_color_buffer_half_float");return function(t,e){var r=Object(c.getTextureConfig)(t,e),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,r.internalFormatHalfFloat,1,1,0,r.textureFormatFloat,r.textureTypeHalfFloat,null);var a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);var o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(a),o}(e,r)}return!1}return!!rt(e,"OES_texture_float")&&!!rt(e,"WEBGL_color_buffer_float")&&it(e)}function it(t){var e=Object(c.getTextureConfig)(t),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);var n=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,n),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);var a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(n),a}function ut(t){return 2===t&&null!=s(t).fenceSync}function vt(t,e){Array.isArray(t)||(t=[t]),t.forEach((function(t){null!=t&&o.util.assert("complex64"!==t.dtype,(function(){return"".concat(e," does not support complex64 tensors ")+"in the WebGL backend."}))}))}var st=Object(o.env)();st.registerFlag("HAS_WEBGL",(function(){return st.getNumber("WEBGL_VERSION")>0})),st.registerFlag("WEBGL_VERSION",(function(){return nt(2)?2:nt(1)?1:0})),st.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(function(){return!1})),st.registerFlag("WEBGL_BUFFER_SUPPORTED",(function(){return 2===st.get("WEBGL_VERSION")})),st.registerFlag("WEBGL_CPU_FORWARD",(function(){return!0})),st.registerFlag("WEBGL_FORCE_F16_TEXTURES",(function(){return!1})),st.registerFlag("WEBGL_PACK",(function(){return st.getBool("HAS_WEBGL")})),st.registerFlag("WEBGL_PACK_NORMALIZATION",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_PACK_CLIP",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_PACK_DEPTHWISECONV",(function(){return!1})),st.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_PACK_REDUCE",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_LAZILY_UNPACK",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_CONV_IM2COL",(function(){return st.getBool("WEBGL_PACK")})),st.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(function(){return J(st.getNumber("WEBGL_VERSION"))})),st.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(function(){return tt(st.getNumber("WEBGL_VERSION"))})),st.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(function(){var t=st.getNumber("WEBGL_VERSION");return 0===t?0:et(t)})),st.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(function(){return st.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o.device_util.isMobile()})),st.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(function(){return at(st.getNumber("WEBGL_VERSION"))})),st.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(function(){return!st.getBool("WEBGL_FORCE_F16_TEXTURES")&&st.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")})),st.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(function(){return ot(st.getNumber("WEBGL_VERSION"))})),st.registerFlag("WEBGL_FENCE_API_ENABLED",(function(){return ut(st.getNumber("WEBGL_VERSION"))})),st.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(function(){return st.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0})),st.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(function(){return-1}),(function(t){if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))}));var ct=r(35);function Pt(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",n=o.util.computeStrides(e);return n.map((function(e,a){var o="int ".concat(t[a]," = ").concat(r," / ").concat(e),i=a===n.length-1?"int ".concat(t[a+1]," = ").concat(r," - ").concat(t[a]," * ").concat(e):"index -= ".concat(t[a]," * ").concat(e);return"".concat(o,"; ").concat(i,";")})).join("")}function lt(t){var e=o.util.computeStrides(t).map((function(t){return t.toString()}));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}var ft="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",dt=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=c.PackingScheme.DENSE;var r=Object(c.getDenseTexShape)(e),n=Object(ct.a)();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(Pt(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(r[0],", ").concat(r[1],"));\n        int index = 4 * (resTexRC.x * ").concat(r[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")},pt=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=c.PackingScheme.DENSE;var r=Object(c.getDenseTexShape)(e),n=Object(ct.a)();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(Pt(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(r[0],", ").concat(r[1],"));\n        int index = 4 * (resTexRC.x * ").concat(r[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")},bt=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.outTexUsage=c.TextureUsage.DOWNLOAD;var r=Object(ct.a)();this.outputShape=e,this.userCode="\n      ".concat(ft,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(r.output," = encode_float(x);\n      }\n    ")},ht=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=c.TextureUsage.DOWNLOAD;var r=Object(ct.a)();this.outputShape=e,this.userCode="\n      ".concat(ft,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(r.output," = encode_float(x);\n      }\n    ")};function yt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return mt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?mt(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function mt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function gt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Tt=function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];gt(this,t),this.variableNames=["A"];var a=Object(ct.a)(),o=yt(r,2),i=o[0],u=o[1];this.outputShape=e;var v="result";n&&(v="floor(result * 255. + 0.5)"),this.userCode="\n      ".concat(lt(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ").concat(u,";\n        int c = imod(flatIndex, ").concat(u,");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(").concat(u,".0, ").concat(i,".0);\n        vec4 values = ").concat(a.texture2D,"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ").concat(a.output," = vec4(").concat(v,", 0., 0., 0.);\n      }\n    ")};function jt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return zt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?zt(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function zt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function wt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Dt=function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];wt(this,t),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var a=Object(ct.a)(),o=jt(r,2),i=o[0],u=o[1];this.outputShape=e;var v="",s="result";n&&(s="floor(result * 255. + 0.5)");for(var c=0;c<=1;c++)for(var P=0;P<=1;P++){var l=2*c+P;v+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(P," < ").concat(e[2],") {\n            localCoords[2] += ").concat(P,";\n            if(localCoords[1] + ").concat(c," < ").concat(e[1],") {\n              localCoords[1] += ").concat(c,";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ").concat(u,";\n              c = imod(flatIndex, ").concat(u,");\n              uv = (vec2(c, r) + halfCR) / vec2(").concat(u,".0, ").concat(i,".0);\n              values = ").concat(a.texture2D,"(A, uv);\n\n              if(offset == 0) {\n                result[").concat(l,"] = values[0];\n              } else if(offset == 1) {\n                result[").concat(l,"] = values[1];\n              } else if(offset == 2) {\n                result[").concat(l,"] = values[2];\n              } else {\n                result[").concat(l,"] = values[3];\n              }\n            }\n          }\n        ")}this.userCode="\n      ".concat(lt(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ").concat(v,"\n\n        ").concat(a.output," = ").concat(s,";\n      }\n    ")};function xt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ot(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ot(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ot(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Lt(t){var e=Object(ct.a)();return y(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function St(t){return x(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function At(t){return O(t,new Uint16Array([0,1,2,2,1,3]))}function kt(t,e,r,n,a,o){A(e,r);var i=S(t),u=t.TEXTURE_2D;return d(t,(function(){return t.bindTexture(u,i)})),d(t,(function(){return t.texParameteri(u,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)})),d(t,(function(){return t.texParameteri(u,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)})),d(t,(function(){return t.texParameteri(u,t.TEXTURE_MIN_FILTER,t.NEAREST)})),d(t,(function(){return t.texParameteri(u,t.TEXTURE_MAG_FILTER,t.NEAREST)})),d(t,(function(){return t.texImage2D(u,0,n,e,r,0,a,o,null)})),d(t,(function(){return t.bindTexture(t.TEXTURE_2D,null)})),i}function Ct(t){return t.internalFormatFloat}function It(t,e,r,n){var a=xt(c.getUnpackedMatrixTextureShapeWidthHeight(e,r),2);return kt(t,a[0],a[1],Ct(n),n.textureFormatFloat,t.FLOAT)}function Et(t){return t.internalFormatHalfFloat}function Mt(t,e,r,n){var a=xt(c.getUnpackedMatrixTextureShapeWidthHeight(e,r),2);return kt(t,a[0],a[1],Et(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function Ut(t){return t.downloadTextureFormat}function Rt(t,e,r,n){var a=xt(c.getUnpackedMatrixTextureShapeWidthHeight(e,r),2);return kt(t,a[0],a[1],Ut(n),t.RGBA,t.UNSIGNED_BYTE)}function Wt(t){return t.internalFormatPackedFloat}function Qt(t,e,r,n){var a=xt(c.getPackedMatrixTextureShapeWidthHeight(e,r),2);return kt(t,a[0],a[1],Wt(n),t.RGBA,t.FLOAT)}function Yt(t){return t.internalFormatPackedHalfFloat}function Gt(t,e,r,n){var a=xt(c.getPackedMatrixTextureShapeWidthHeight(e,r),2);return kt(t,a[0],a[1],Yt(n),t.RGBA,n.textureTypeHalfFloat)}function Ft(t,e,r){return d(t,(function(){return t.bindBuffer(t.ARRAY_BUFFER,r)})),C(t,e,"clipSpacePos",r,3,20,0)&&C(t,e,"uv",r,2,20,12)}function Nt(t,e,r,n,a,o){var i,u,v;d(t,(function(){return t.bindTexture(t.TEXTURE_2D,e)})),a instanceof Uint8Array?(i=new Uint8Array(r*n*4),u=t.UNSIGNED_BYTE,v=t.RGBA):(i=new Float32Array(r*n*4),u=t.FLOAT,v=o.internalFormatPackedFloat),i.set(a),d(t,(function(){return t.texImage2D(t.TEXTURE_2D,0,v,r,n,0,t.RGBA,u,i)})),d(t,(function(){return t.bindTexture(t.TEXTURE_2D,null)}))}function qt(t,e,r){d(t,(function(){return t.bindTexture(t.TEXTURE_2D,e)})),r.data instanceof Uint8Array?d(t,(function(){return t.texImage2D(t.TEXTURE_2D,0,t.RGBA,r.width,r.height,0,t.RGBA,t.UNSIGNED_BYTE,r.data)})):d(t,(function(){return t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r)})),d(t,(function(){return t.bindTexture(t.TEXTURE_2D,null)}))}function Kt(t,e,r,n){var a=t.createBuffer();d(t,(function(){return t.bindBuffer(t.PIXEL_PACK_BUFFER,a)}));var o=16*e*r;return d(t,(function(){return t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ)})),d(t,(function(){return t.readPixels(0,0,r,e,t.RGBA,t.FLOAT,0)})),d(t,(function(){return t.bindBuffer(t.PIXEL_PACK_BUFFER,null)})),a}function Bt(t,e,r){var n=t,a=new Float32Array(r);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,a),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),a}function Vt(t,e,r,n){var a=xt(c.getUnpackedMatrixTextureShapeWidthHeight(e,r),2),o=a[0],i=a[1],u=new Uint8Array(c.getUnpackedArraySizeFromMatrixSize(e*r,4));return d(t,(function(){return t.readPixels(0,0,o,i,n.downloadTextureFormat,t.UNSIGNED_BYTE,u)})),new Float32Array(u.buffer)}function Xt(t,e,r,n,a,o,i,u){var v=t,s=new Float32Array(c.getPackedRGBAArraySizeFromMatrixShape(o,i));return v.bindBuffer(v.PIXEL_PACK_BUFFER,e),v.getBufferSubData(v.PIXEL_PACK_BUFFER,0,s),v.bindBuffer(v.PIXEL_PACK_BUFFER,null),s}function Zt(t,e,r){var n=new Float32Array(e*r*4);return d(t,(function(){return t.readPixels(0,0,r,e,t.RGBA,t.FLOAT,n)})),n}function Ht(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Jt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function _t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var $t=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var r=Object(o.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,v(r,e)):this.gl=s(r);var n="WEBGL_color_buffer_float";if(1===Object(o.env)().getNumber("WEBGL_VERSION")){if(this.textureFloatExtension=h(this.gl,"OES_texture_float"),rt(this.gl,"OES_texture_half_float"))this.textureHalfFloatExtension=h(this.gl,"OES_texture_half_float");else if(Object(o.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),rt(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=h(this.gl,"EXT_color_buffer_half_float");else if(Object(o.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",rt(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!rt(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=St(this.gl),this.indexBuffer=At(this.gl),this.framebuffer=k(this.gl),this.textureConfig=c.getTextureConfig(this.gl,this.textureHalfFloatExtension)}var e,r,n,a;return e=t,(r=[{key:"debug",get:function(){return Object(o.env)().getBool("DEBUG")}},{key:"dispose",value:function(){var t=this;if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var e=this.gl;d(e,(function(){return e.finish()})),d(e,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)})),d(e,(function(){return e.deleteFramebuffer(t.framebuffer)})),d(e,(function(){return e.bindBuffer(e.ARRAY_BUFFER,null)})),d(e,(function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)})),d(e,(function(){return e.deleteBuffer(t.indexBuffer)})),this.disposed=!0}}},{key:"createFloat32MatrixTexture",value:function(t,e){return this.throwIfDisposed(),It(this.gl,t,e,this.textureConfig)}},{key:"createFloat16MatrixTexture",value:function(t,e){return this.throwIfDisposed(),Mt(this.gl,t,e,this.textureConfig)}},{key:"createUnsignedBytesMatrixTexture",value:function(t,e){return this.throwIfDisposed(),Rt(this.gl,t,e,this.textureConfig)}},{key:"uploadPixelDataToTexture",value:function(t,e){this.throwIfDisposed(),qt(this.gl,t,e)}},{key:"uploadDenseMatrixToTexture",value:function(t,e,r,n){this.throwIfDisposed(),Nt(this.gl,t,e,r,n,this.textureConfig)}},{key:"createFloat16PackedMatrixTexture",value:function(t,e){return this.throwIfDisposed(),Gt(this.gl,t,e,this.textureConfig)}},{key:"createPackedMatrixTexture",value:function(t,e){return this.throwIfDisposed(),Qt(this.gl,t,e,this.textureConfig)}},{key:"deleteMatrixTexture",value:function(t){var e=this;this.throwIfDisposed(),this.outputTexture===t&&(Y(this.gl,this.framebuffer),this.outputTexture=null),d(this.gl,(function(){return e.gl.deleteTexture(t)}))}},{key:"downloadByteEncodedFloatMatrixFromOutputTexture",value:function(t,e,r){var n=this;return this.downloadMatrixDriver(t,(function(){return Vt(n.gl,e,r,n.textureConfig)}))}},{key:"downloadPackedMatrixFromBuffer",value:function(t,e,r,n,a,o){return Xt(this.gl,t,0,0,0,a,o,this.textureConfig)}},{key:"downloadFloat32MatrixFromBuffer",value:function(t,e){return Bt(this.gl,t,e)}},{key:"createBufferFromTexture",value:function(t,e,r){this.bindTextureToFrameBuffer(t);var n=Kt(this.gl,e,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}},{key:"createAndWaitForFence",value:function(){var t=this.createFence(this.gl);return this.pollFence(t)}},{key:"createFence",value:function(t){var e,r,n=this;if(Object(o.env)().getBool("WEBGL_FENCE_API_ENABLED")){var a=t,i=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),r=function(){var t=a.clientWaitSync(i,0,0);return t===a.ALREADY_SIGNALED||t===a.CONDITION_SATISFIED},e=i}else Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),r=function(){return n.isQueryAvailable(e,Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):r=function(){return!0};return{query:e,isFencePassed:r}}},{key:"downloadMatrixFromPackedTexture",value:function(t,e,r){var n=this;return this.downloadMatrixDriver(t,(function(){return Zt(n.gl,e,r)}))}},{key:"createProgram",value:function(t){this.throwIfDisposed();var e=this.gl,r=m(e,t),n=Lt(e),a=z(e);return d(e,(function(){return e.attachShader(a,n)})),d(e,(function(){return e.attachShader(a,r)})),w(e,a),this.debug&&D(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=Ft(e,this.program,this.vertexBuffer)),a}},{key:"deleteProgram",value:function(t){var e=this;this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&d(this.gl,(function(){return e.gl.deleteProgram(t)}))}},{key:"setProgram",value:function(t){var e=this;this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&D(this.gl,this.program),d(this.gl,(function(){return e.gl.useProgram(t)}))}},{key:"getUniformLocation",value:function(t,e){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),r?M(this.gl,t,e):U(this.gl,t,e)}},{key:"getAttributeLocation",value:function(t,e){var r=this;return this.throwIfDisposed(),d(this.gl,(function(){return r.gl.getAttribLocation(t,e)}))}},{key:"getUniformLocationNoThrow",value:function(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}},{key:"setInputMatrixTexture",value:function(t,e,r){this.throwIfDisposed(),this.throwIfNoProgram(),R(this.gl,t,e,r)}},{key:"setOutputMatrixTexture",value:function(t,e,r){this.setOutputMatrixTextureDriver(t,r,e)}},{key:"setOutputPackedMatrixTexture",value:function(t,e,r){this.throwIfDisposed();var n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Jt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Jt(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(c.getPackedMatrixTextureShapeWidthHeight(e,r),2),a=n[0],o=n[1];this.setOutputMatrixTextureDriver(t,a,o)}},{key:"setOutputMatrixWriteRegion",value:function(t,e,r,n){this.setOutputMatrixWriteRegionDriver(r,t,n,e)}},{key:"setOutputPackedMatrixWriteRegion",value:function(t,e,r,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}},{key:"debugValidate",value:function(){null!=this.program&&D(this.gl,this.program),G(this.gl)}},{key:"executeProgram",value:function(){this.throwIfDisposed(),this.throwIfNoProgram();var t=this.gl;this.debug&&this.debugValidate(),d(t,(function(){return t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)}))}},{key:"blockUntilAllProgramsCompleted",value:function(){var t=this;this.throwIfDisposed(),d(this.gl,(function(){return t.gl.finish()}))}},{key:"getQueryTimerExtension",value:function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=h(this.gl,2===Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}},{key:"getQueryTimerExtensionWebGL2",value:function(){return this.getQueryTimerExtension()}},{key:"getQueryTimerExtensionWebGL1",value:function(){return this.getQueryTimerExtension()}},{key:"beginQuery",value:function(){if(2===Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var t=this.gl,e=this.getQueryTimerExtensionWebGL2(),r=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,r),r}var n=this.getQueryTimerExtensionWebGL1(),a=n.createQueryEXT();return n.beginQueryEXT(n.TIME_ELAPSED_EXT,a),a}},{key:"endQuery",value:function(){if(2!==Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}else{var e=this.gl,r=this.getQueryTimerExtensionWebGL2();e.endQuery(r.TIME_ELAPSED_EXT)}}},{key:"waitForQueryAndGetTime",value:(n=regeneratorRuntime.mark((function t(e){var r=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,o.util.repeatedTry((function(){return r.disposed||r.isQueryAvailable(e,Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}));case 2:return t.abrupt("return",this.getQueryTime(e,Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")));case 3:case"end":return t.stop()}}),t,this)})),a=function(){var t=this,e=arguments;return new Promise((function(r,a){var o=n.apply(t,e);function i(t){Ht(o,r,a,i,u,"next",t)}function u(t){Ht(o,r,a,i,u,"throw",t)}i(void 0)}))},function(t){return a.apply(this,arguments)})},{key:"getQueryTime",value:function(t,e){if(0===e)return null;if(2===e){var r=this.gl;return r.getQueryParameter(t,r.QUERY_RESULT)/1e6}var n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}},{key:"isQueryAvailable",value:function(t,e){if(0===e)return!0;if(2===e){var r=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=r.getQueryParameter(t,r.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}var o=this.getQueryTimerExtensionWebGL1(),i=o.getQueryObjectEXT(t,o.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),i&&!this.disjoint}},{key:"pollFence",value:function(t){var e=this;return new Promise((function(r){e.addItemToPoll((function(){return t.isFencePassed()}),(function(){return r()}))}))}},{key:"pollItems",value:function(){for(var t=function(t){for(var e=0;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((function(t){return t.isDoneFn}))),e=0;e<=t;++e)(0,this.itemsToPoll[e].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(t+1)}},{key:"addItemToPoll",value:function(t,e){var r=this;this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||o.util.repeatedTry((function(){return r.pollItems(),0===r.itemsToPoll.length}))}},{key:"bindTextureToFrameBuffer",value:function(t){this.throwIfDisposed(),Q(this.gl,t,this.framebuffer),this.debug&&G(this.gl)}},{key:"unbindTextureToFrameBuffer",value:function(){null!=this.outputTexture?(Q(this.gl,this.outputTexture,this.framebuffer),this.debug&&G(this.gl)):Y(this.gl,this.framebuffer)}},{key:"downloadMatrixDriver",value:function(t,e){this.bindTextureToFrameBuffer(t);var r=e();return this.unbindTextureToFrameBuffer(),r}},{key:"setOutputMatrixTextureDriver",value:function(t,e,r){this.throwIfDisposed();var n=this.gl;Q(n,t,this.framebuffer),this.debug&&G(n),this.outputTexture=t,d(n,(function(){return n.viewport(0,0,e,r)})),d(n,(function(){return n.scissor(0,0,e,r)}))}},{key:"setOutputMatrixWriteRegionDriver",value:function(t,e,r,n){var a=this;this.throwIfDisposed(),d(this.gl,(function(){return a.gl.scissor(t,e,r,n)}))}},{key:"throwIfDisposed",value:function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}},{key:"throwIfNoProgram",value:function(){if(null==this.program)throw new Error("No GPU program is currently set.")}}])&&_t(e.prototype,r),t}();function te(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ee(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ee(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ee(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var re=o.backend_util.getBroadcastDims;function ne(t){var e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){var e=t.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(r,"() {return ").concat(e,";}");var n=te(t.shapeInfo.texShape,2),a=n[0],o=n[1];if(1===a&&1===o)return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");var i=te(t.shapeInfo.texShape,2),u=i[0],v=i[1],s=se(e);return"\n    float ".concat(r,"() {\n      vec2 uv = uvFromFlat(").concat(u,", ").concat(v,", ").concat(s,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 1:return function(t){var e=t.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int index) {\n        ").concat(ce(t),"\n      }\n    ");var n=t.shapeInfo.texShape,a=n[0],o=n[1];if(1===o&&1===a)return"\n      float ".concat(r,"(int index) {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");var i=se(e);return 1===o?"\n      float ".concat(r,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(a,".0);\n        return sampleTexture(").concat(e,", uv);\n      }\n    "):1===a?"\n      float ".concat(r,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(e,", uv);\n      }\n    "):"\n    float ".concat(r,"(int index) {\n      vec2 uv = uvFromFlat(").concat(a,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){var e=t.shapeInfo.logicalShape,r=t.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape;if(null!=a&&o.util.arraysEqual(e,a)){var i=a[0],u=a[1];return"\n    float ".concat(n,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(u,".0, ").concat(i,".0);\n      return sampleTexture(").concat(r,", uv);\n    }\n  ")}var v=o.util.squeezeShape(e),s=v.newShape,c=v.keptDims,P=s;if(P.length<e.length){var l=de(t,P);return"\n      ".concat(ne(l),"\n      float ").concat(n,"(int row, int col) {\n        return ").concat(n,"(").concat(pe(["row","col"],c),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(e[1],", 1)));\n        ").concat(ce(t),"\n      }\n    ");var f=a[0],d=a[1],p=se(r);return 1===d?"\n    float ".concat(n,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(p,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(f,".0);\n      return sampleTexture(").concat(r,", uv);\n    }\n  "):1===f?"\n    float ".concat(n,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(p,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(d,".0, 0.5);\n      return sampleTexture(").concat(r,", uv);\n    }\n  "):"\n  float ".concat(n,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(e[1]," + col + ").concat(p,";\n    vec2 uv = uvFromFlat(").concat(f,", ").concat(d,", index);\n    return sampleTexture(").concat(r,", uv);\n  }\n")}(t);case 3:return function(t){var e=t.shapeInfo.logicalShape,r=t.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e[1]*e[2],i=e[2],u=o.util.squeezeShape(e),v=u.newShape,s=u.keptDims,c=v;if(c.length<e.length){var P=de(t,c);return"\n        ".concat(ne(P),"\n        float ").concat(n,"(int row, int col, int depth) {\n          return ").concat(n,"(").concat(pe(["row","col","depth"],s),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(a,", ").concat(i,", 1)));\n        ").concat(ce(t),"\n      }\n    ");var l=t.shapeInfo.texShape,f=l[0],d=l[1],p=t.shapeInfo.flatOffset;if(d===a&&null==p)return"\n        float ".concat(n,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(i,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(f,".0);\n          return sampleTexture(").concat(r,", uv);\n        }\n      ");if(d===i&&null==p)return"\n    float ".concat(n,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(e[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(f,".0);\n      return sampleTexture(").concat(r,", uv);\n    }\n  ");var b=se(r);return"\n      float ".concat(n,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a," + col * ").concat(i," + depth + ").concat(b,";\n        vec2 uv = uvFromFlat(").concat(f,", ").concat(d,", index);\n        return sampleTexture(").concat(r,", uv);\n      }\n  ")}(t);case 4:return function(t){var e=t.shapeInfo.logicalShape,r=t.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e[3],i=e[2]*a,u=e[1]*i,v=o.util.squeezeShape(e),s=v.newShape,c=v.keptDims;if(s.length<e.length){var P=de(t,s);return"\n      ".concat(ne(P),"\n      float ").concat(n,"(int row, int col, int depth, int depth2) {\n        return ").concat(n,"(").concat(pe(["row","col","depth","depth2"],c),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(u,", ").concat(i,", ").concat(a,", 1)));\n        ").concat(ce(t),"\n      }\n    ");var l=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,d=f[0],p=f[1];if(p===u&&null==l)return"\n      float ".concat(n,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(i,", ").concat(a,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");if(p===a&&null==l)return"\n      float ".concat(n,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(e[1]*e[2],", ").concat(e[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");var b=se(r);return"\n    float ".concat(n,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(i," +\n          depth * ").concat(a," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(b,");\n      return sampleTexture(").concat(r,", uv);\n    }\n  ")}(t);case 5:return function(t){var e=t.shapeInfo.logicalShape,r=t.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e[4],i=e[3]*a,u=e[2]*i,v=e[1]*u,s=o.util.squeezeShape(e),c=s.newShape,P=s.keptDims;if(c.length<e.length){var l=de(t,c);return"\n      ".concat(ne(l),"\n      float ").concat(n,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(n,"(").concat(pe(["row","col","depth","depth2","depth3"],P),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(v,", ").concat(u,", ").concat(i,", ").concat(a,")) +\n          depth3;\n        ").concat(ce(t),"\n      }\n    ");var f=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],b=d[1];if(b===v&&null==f)return"\n      float ".concat(n,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(u,", ").concat(i,", ").concat(a,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(b,".0, ").concat(p,".0);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");if(b===a&&null==f)return"\n      float ".concat(n,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(b,".0, ").concat(p,".0);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");var h=se(r);return"\n    float ".concat(n,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(v," + col * ").concat(u," + depth * ").concat(i," +\n          depth2 * ").concat(a," + depth3 + ").concat(h,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(b,", index);\n      return sampleTexture(").concat(r,", uv);\n    }\n  ")}(t);case 6:return function(t){var e=t.shapeInfo.logicalShape,r=t.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=o.util.squeezeShape(e),i=a.newShape,u=a.keptDims;if(i.length<e.length){var v=de(t,i);return"\n      ".concat(ne(v),"\n      float ").concat(n,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(n,"(").concat(pe(["row","col","depth","depth2","depth3","depth4"],u),");\n      }\n    ")}var s=e[5],c=e[4]*s,P=e[3]*c,l=e[2]*P,f=e[1]*l;if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(f,", ").concat(l,", ").concat(P,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(s,", 1)));\n        ").concat(ce(t),"\n      }\n    ");var d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,b=p[0],h=p[1];if(h===f&&null==d)return"\n      float ".concat(n,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(P,", ").concat(c,", ").concat(s,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(h,".0, ").concat(b,".0);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");if(h===s&&null==d)return"\n      float ".concat(n,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(h,".0, ").concat(b,".0);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");var y=se(r);return"\n    float ".concat(n,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(f," + col * ").concat(l," + depth * ").concat(P," +\n          depth2 * ").concat(c," + depth3 * ").concat(s," + depth4 + ").concat(y,";\n      vec2 uv = uvFromFlat(").concat(b,", ").concat(h,", index);\n      return sampleTexture(").concat(r,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(e.length,"-D input sampling")+" is not yet supported")}}function ae(t){var e,r,n;switch(t.shapeInfo.logicalShape.length){case 0:return r="get"+(e=t.name).charAt(0).toUpperCase()+e.slice(1),n=Object(ct.a)(),"\n    vec4 ".concat(r,"() {\n      return ").concat(n.texture2D,"(").concat(e,", halfCR);\n    }\n  ");case 1:return function(t){var e=t.name,r="get"+e.charAt(0).toUpperCase()+e.slice(1),n=t.shapeInfo.texShape,a=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],o=Object(ct.a)();return"\n    vec4 ".concat(r,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(a[0],", ").concat(a[1],", index);\n      return ").concat(o.texture2D,"(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){var e=t.shapeInfo.logicalShape,r=t.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=a[0],u=a[1],v=Object(ct.a)();if(null!=a&&o.util.arraysEqual(e,a))return"\n      vec4 ".concat(n,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(u,".0, ").concat(i,".0);\n\n        return ").concat(v.texture2D,"(").concat(r,", uv);\n      }\n    ");var s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(e[1]/2);return"\n    vec4 ".concat(n,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(c,", ").concat(s[0],", ").concat(s[1],", row, col);\n      return ").concat(v.texture2D,"(").concat(r,", uv);\n    }\n  ")}(t);case 3:return function(t){var e=t.shapeInfo.logicalShape,r=t.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){var i=de(t,e.slice(1));return"\n        ".concat(ae(i),"\n        vec4 ").concat(n,"(int b, int row, int col) {\n          return ").concat(n,"(").concat(pe(["b","row","col"],[1,2]),");\n        }\n      ")}var u=o[0],v=o[1],s=Math.ceil(e[2]/2),c=s*Math.ceil(e[1]/2),P=Object(ct.a)();return"\n    vec4 ".concat(n,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(u,", ").concat(v,", ").concat(c,", ").concat(s,", b, row, col);\n      return ").concat(P.texture2D,"(").concat(r,", uv);\n    }\n  ")}(t);default:return function(t){for(var e=t.shapeInfo.logicalShape,r=e.length,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=i[0],v=i[1],s=Math.ceil(e[r-1]/2),c=s*Math.ceil(e[r-2]/2),P="int b, int row, int col",l="b * ".concat(c," + (row / 2) * ").concat(s," + (col / 2)"),f=2;f<r-1;f++)P="int b".concat(f,", ")+P,c*=e[r-f-1],l="b".concat(f," * ").concat(c," + ")+l;var d=Object(ct.a)();return"\n    vec4 ".concat(a,"(").concat(P,") {\n      int index = ").concat(l,";\n      int texR = index / ").concat(v,";\n      int texC = index - texR * ").concat(v,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(v,", ").concat(u,");\n      return ").concat(d.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t)}}var oe="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ie="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ue="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ve="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function se(t){return"offset".concat(t)}function ce(t){var e=t.name,r=o.util.sizeFromShape(t.shapeInfo.logicalShape);return r<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(r,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function Pe(t,e){var r,n,a=t.name,i=a.charAt(0).toUpperCase()+a.slice(1),u="get"+i+"AtOutCoords",v=t.shapeInfo.logicalShape.length,s=e.logicalShape.length,c=re(t.shapeInfo.logicalShape,e.logicalShape),P=fe(s),l=s-v,f=["x","y","z","w","u","v"];r=0===v?"":s<2&&c.length>=1?"coords = 0;":c.map((function(t){return"coords.".concat(f[t+l]," = 0;")})).join("\n"),n=s<2&&v>0?"coords":t.shapeInfo.logicalShape.map((function(t,e){return"coords.".concat(f[e+l])})).join(", ");var d="return outputValue;",p=1===o.util.sizeFromShape(t.shapeInfo.logicalShape),b=1===o.util.sizeFromShape(e.logicalShape);if(1!==v||p||b){if(p&&!b)d=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){var h=v-2,y=v-1;c.indexOf(h)>-1&&c.indexOf(y)>-1?d="return vec4(outputValue.x);":c.indexOf(h)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(y)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(u,"() {\n      ").concat(P," coords = getOutputCoords();\n      ").concat(r,"\n      vec4 outputValue = get").concat(i,"(").concat(n,");\n      ").concat(d,"\n    }\n  ")}function le(t,e){var r=t.name,n=r.charAt(0).toUpperCase()+r.slice(1),a="get"+n+"AtOutCoords",i=e.texShape,u=t.shapeInfo.texShape,v=t.shapeInfo.logicalShape.length,s=e.logicalShape.length;if(!t.shapeInfo.isUniform&&v===s&&null==t.shapeInfo.flatOffset&&o.util.arraysEqual(u,i))return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(r,", resultUV);\n      }\n    ");var c,P,l=fe(s),f=re(t.shapeInfo.logicalShape,e.logicalShape),d=s-v,p=["x","y","z","w","u","v"];return c=0===v?"":s<2&&f.length>=1?"coords = 0;":f.map((function(t){return"coords.".concat(p[t+d]," = 0;")})).join("\n"),P=s<2&&v>0?"coords":t.shapeInfo.logicalShape.map((function(t,e){return"coords.".concat(p[e+d])})).join(", "),"\n    float ".concat(a,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(c,"\n      return get").concat(n,"(").concat(P,");\n    }\n  ")}function fe(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function de(t,e){var r=JSON.parse(JSON.stringify(t));return r.shapeInfo.logicalShape=e,r}function pe(t,e){return e.map((function(e){return t[e]})).join(", ")}function be(t,e,r,n){var a=e.userCode,i=r.map((function(t,r){var n={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(n.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[r],shapeInfo:n}})),u=i.map((function(t){return t.shapeInfo})),v={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},s=function(t,e,r,n){var a=[];t.forEach((function(t){var e=o.util.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?a.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(a.push("uniform sampler2D ".concat(t.name,";")),a.push("uniform int offset".concat(t.name,";")))}));var i,u,v=a.join("\n"),s=t.map((function(t){return function(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n="";n+=r?ae(t):ne(t);var a=t.shapeInfo.logicalShape,o=e.logicalShape;return a.length<=o.length&&(n+=r?Pe(t,e):le(t,e)),n}(t,e,n)})).join("\n"),c=e.texShape,P=Object(ct.a)(),l=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(P),f=function(t){return"".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(oe,"\n    ").concat(ie,"\n    ").concat(ue,"\n  ")}(P);return e.isPacked?(i=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){var r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(r[1],".0);\n      }\n    "):1===r[1]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(r[0],".0);\n      }\n    "):"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(r[0],", ").concat(r[1],"));\n      return 2 * (resTexRC.x * ").concat(r[1]," + resTexRC.y);\n    }\n  ")}(0,e);case 2:return function(t,e){var r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(o.util.arraysEqual(t,e))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(r[0],", ").concat(r[1],"));\n      }\n    ");var n=Math.ceil(t[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(r[0],", ").concat(r[1],"));\n\n      int index = resTexRC.x * ").concat(r[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(n,");\n      int c = imod(index, ").concat(n,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return r=t,n=e,a=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],u=(i=Math.ceil(r[2]/2))*Math.ceil(r[1]/2),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(u,";\n      index -= b * ").concat(u,";\n\n      int r = 2 * (index / ").concat(i,");\n      int c = imod(index, ").concat(i,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ");default:return function(t,e){for(var r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(t[t.length-1]/2),a=n*Math.ceil(t[t.length-2]/2),o=a,i="",u="b, r, c",v=2;v<t.length-1;v++)o*=t[t.length-v-1],i="\n      int b".concat(v," = index / ").concat(o,";\n      index -= b").concat(v," * ").concat(o,";\n    ")+i,u="b".concat(v,", ")+u;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(r[0],", ").concat(r[1],"));\n      int index = resTexRC.x * ").concat(r[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(a,";\n      index -= b * ").concat(a,";\n\n      int r = 2 * (index / ").concat(n,");\n      int c = imod(index, ").concat(n,") * 2;\n\n      return ivec").concat(t.length,"(").concat(u,");\n    }\n  ")}(t,e)}var r,n,a,i,u}(e.logicalShape,c),u=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(P)):(i=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){return 1===e[0]?"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    "):1===e[1]?"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    "):"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e);case 2:return function(t,e){return o.util.arraysEqual(t,e)?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    "):1===t[1]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    "):1===t[0]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    "):"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return r=e,n=Pt(["r","c","d"],t),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(r[0],", ").concat(r[1],"));\n      int index = resTexRC.x * ").concat(r[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec3(r, c, d);\n    }\n  ");case 4:return function(t,e){var r=Pt(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(r,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e);case 5:return function(t,e){var r=Pt(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(r,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){var r=Pt(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(r,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}var r,n}(e.logicalShape,c),u=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(P)),n&&(f+=ve),[f,l,u,v,i,s,r].join("\n")}(i,v,a,e.packedInputs),c=t.createProgram(s),P=null,l=t.getUniformLocation(c,"NAN",!1);1===Object(o.env)().getNumber("WEBGL_VERSION")&&(P=t.getUniformLocation(c,"INFINITY",!1));for(var f={},d=0;d<e.variableNames.length;d++){var p=e.variableNames[d];f[p]=t.getUniformLocation(c,p,!1),f["offset".concat(p)]=t.getUniformLocation(c,"offset".concat(p),!1)}return{program:e,source:s,webGLProgram:c,uniformLocations:f,inShapeInfos:u,outShapeInfo:v,infLoc:P,nanLoc:l}}function he(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach((function(t,r){var n=t.logicalShape,a=e[r],i=a.shape;if(!o.util.arraysEqual(n,i))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(n," and ").concat(i," must match"));if(!t.isUniform||!a.isUniform){var u=t.texShape,v=a.isUniform?null:a.texData.texShape;if(!o.util.arraysEqual(u,v))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(u," and ").concat(v," must match"))}}))}function ye(t,e,r,n,a){he(e.inShapeInfos,r),he([e.outShapeInfo],[n]);var i=n.texData.texture,u=n.texData.texShape;n.texData.isPacked?t.setOutputPackedMatrixTexture(i,u[0],u[1]):t.setOutputMatrixTexture(i,u[0],u[1]),t.setProgram(e.webGLProgram),1===Object(o.env)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),r.forEach((function(r,n){var a=e.program.variableNames[n],i=e.uniformLocations[a],u=e.uniformLocations["offset".concat(a)];if(null!=i)if(r.isUniform)if(o.util.sizeFromShape(r.shape)<2)t.gl.uniform1f(i,r.uniformValues[0]);else{var v=r.uniformValues;v instanceof Float32Array||(v=new Float32Array(v)),t.gl.uniform1fv(i,v)}else null!=r.texData.slice&&null!=u&&t.gl.uniform1i(u,r.texData.slice.flatOffset),t.setInputMatrixTexture(r.texData.texture,i,n)})),null!=a&&a(t,e.webGLProgram),t.executeProgram()}function me(t,e,r){var n="";e.concat(r).forEach((function(t){var e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,r=t.isUniform?"uniform":t.texData.texShape;n+="".concat(t.shape,"_").concat(r,"_").concat(e)}));var a=t.userCode;return t.constructor.name+"_"+n+"_"+a}function ge(t){return function(e,r,n,a,i){var u=o.backend_util.assertAndGetBroadcastShape(e,r),v=u.length,s=o.util.computeStrides(u),c=o.util.sizeFromShape(u),P=o.util.getTypedArrayFromDType(i,c),l=e.length,f=r.length,d=o.util.computeStrides(e),p=o.util.computeStrides(r),b=o.backend_util.getBroadcastDims(e,u),h=o.backend_util.getBroadcastDims(r,u);if(b.length+h.length===0)for(var y=0;y<P.length;++y)P[y]=t(n[y%n.length],a[y%a.length]);else for(var m=function(e){var r=o.util.indexToLoc(e,v,s),i=r.slice(-l);b.forEach((function(t){return i[t]=0}));var u=o.util.locToIndex(i,l,d),c=r.slice(-f);h.forEach((function(t){return c[t]=0}));var y=o.util.locToIndex(c,f,p);P[e]=t(n[u],a[y])},g=0;g<P.length;++g)m(g);return[P,u]}}function Te(t,e){Array.isArray(t)||(t=[t]),t.forEach((function(t){null!=t&&o.util.assert("complex64"!==t.dtype,(function(){return"".concat(e," does not support complex64 tensors in the CPU backend.")}))}))}function je(t){var e=t.inputs,r=t.backend,n=e.real,a=e.imag,o=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,u=r.makeTensorInfo(n.shape,"complex64");return r.data.get(u.dataId).complexTensorInfos={real:r.makeTensorInfo(n.shape,"float32",o),imag:r.makeTensorInfo(a.shape,"float32",i)},u}function ze(t){var e=t.inputs,r=t.backend,n=e.x;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function we(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function De(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.dtype;if("complex64"===i){if("complex64"===a.dtype)return ze({inputs:{x:a},backend:r});var u=function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){var a=t(e,r,"float32"),i=t(e,r,"float32");return je({inputs:{real:a,imag:i},backend:e})}var u=o.util.makeZerosTypedArray(o.util.sizeFromShape(r),n);return e.makeTensorInfo(r,n,u)}(r,a.shape,a.dtype),v=De({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=je({inputs:{real:v,imag:u},backend:r});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(v),s}if("complex64"===a.dtype){var c=function(t){var e=t.inputs,r=t.backend,n=e.input,a=r.data.get(n.dataId).complexTensorInfos.real,o=r.data.get(a.dataId).values;return r.makeTensorInfo(a.shape,a.dtype,o)}({inputs:{input:a},backend:r}),P=De({inputs:{x:c},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(c),P}if(!o.util.hasEncodingLoss(a.dtype,i)){var l=ze({inputs:{x:a},backend:r});return{dataId:l.dataId,shape:l.shape,dtype:i}}if("int32"===i){var f=r.data.get(a.dataId).values,d=Int32Array.from(f);return r.makeTensorInfo(a.shape,"int32",d)}if("bool"===i){var p=r.data.get(a.dataId).values,b=o.util.toTypedArray([0],a.dtype),h=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return we(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?we(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(ge((function(t,e){return t!==e?1:0}))(a.shape,[],p,b,"bool"),2),y=h[0],m=h[1];return r.makeTensorInfo(m,"bool",y)}throw new Error("Error in Cast: failed to cast ".concat(a.dtype," to ").concat(i))}function xe(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Oe(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Oe(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Oe(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Le(t,e,r,n){return null==r?function(r){var a=r.inputs,o=r.backend,i=a.a,u=a.b,v=o;Te([i,u],t);var s=v.data.get(i.dataId).values,c=v.data.get(u.dataId).values,P=n||i.dtype,l=xe(e(i.shape,u.shape,s,c,P),2),f=l[0],d=l[1];return v.makeTensorInfo(d,P,f)}:function(t){var a=t.inputs,o=t.backend,i=a.a,u=a.b,v=o;if("complex64"===i.dtype||"complex64"===u.dtype){var s=De({inputs:{x:i},backend:v,attrs:{dtype:"complex64"}}),c=v.data.get(s.dataId),P=c.complexTensorInfos.real,l=c.complexTensorInfos.imag,f=v.data.get(P.dataId).values,d=v.data.get(l.dataId).values,p=De({inputs:{x:u},backend:v,attrs:{dtype:"complex64"}}),b=v.data.get(p.dataId),h=b.complexTensorInfos.real,y=b.complexTensorInfos.imag,m=v.data.get(h.dataId).values,g=v.data.get(y.dataId).values,T=xe(r(i.shape,u.shape,f,d,m,g),3),j=T[0],z=T[1],w=T[2],D=v.makeTensorInfo(w,"float32",j),x=v.makeTensorInfo(w,"float32",z),O=je({inputs:{real:D,imag:x},backend:v});return v.disposeIntermediateTensorInfo(s),v.disposeIntermediateTensorInfo(p),v.disposeIntermediateTensorInfo(D),v.disposeIntermediateTensorInfo(x),O}var L=v.data.get(i.dataId).values,S=v.data.get(u.dataId).values,A=n||i.dtype,k=xe(e(i.shape,u.shape,L,S,A),2),C=k[0],I=k[1];return v.makeTensorInfo(I,A,C)}}function Se(t){return function(e,r,n,a,i,u){var v=o.backend_util.assertAndGetBroadcastShape(e,r),s=o.util.sizeFromShape(v),c=v.length,P=o.util.computeStrides(v),l=o.util.getTypedArrayFromDType("float32",s),f=o.util.getTypedArrayFromDType("float32",s),d=o.backend_util.getBroadcastDims(e,v),p=o.backend_util.getBroadcastDims(r,v),b=o.backend_util.mergeRealAndImagArrays(n,a),h=o.backend_util.mergeRealAndImagArrays(i,u),y=e.length,m=o.util.computeStrides(e),g=r.length,T=o.util.computeStrides(r);if(d.length+p.length===0)for(var j=0;j<l.length;j++){var z=j%b.length,w=j%h.length,D=t(b[2*z],b[2*z+1],h[2*w],h[2*w+1]);l[j]=D.real,f[j]=D.imag}else for(var x=function(e){var r=o.util.indexToLoc(e,c,P),n=r.slice(-y);d.forEach((function(t){return n[t]=0}));var a=o.util.locToIndex(n,y,m),i=r.slice(-g);p.forEach((function(t){return i[t]=0}));var u=o.util.locToIndex(i,g,T),v=t(b[2*a],b[2*a+1],h[2*u],h[2*u+1]);l[e]=v.real,f[e]=v.imag},O=0;O<l.length;O++)x(O);return[l,f,v]}}o.Complex,o.Identity,o.Real,o.Cast;var Ae=ge((function(t,e){return t+e})),ke=Se((function(t,e,r,n){return{real:t+r,imag:e+n}}));function Ce(t){return function(e,r,n){for(var a=o.util.getTypedArrayFromDType(r,e.length),i=0;i<e.length;++i)a[i]=t(e[i],n);return a}}function Ie(t,e,r){return function(n){var a=n.inputs,o=n.attrs,i=n.backend,u=a.x;if(Te(u,t),"string"===u.dtype||"string"===r)throw new Error("unaryKernelFunc does not support string input/output");var v=i,s=v.data.get(u.dataId).values,c=r||u.dtype,P=e(s,c,o);return v.makeTensorInfo(u.shape,c,P)}}Le(o.Add,Ae,ke),o.Add;var Ee=Ce((function(t){return Math.ceil(t)}));Ie(o.Ceil,Ee),o.Ceil;var Me=Ce((function(t){return Math.exp(t)})),Ue=(Ie(o.Exp,Me),o.Exp,Ce((function(t){return Math.expm1(t)}))),Re=(Ie(o.Expm1,Ue),o.Expm1,Ce((function(t){return Math.floor(t)})));Ie(o.Floor,Re),o.Floor;var We=ge((function(t,e){return t>e?1:0})),Qe=(Le(o.Greater,We,null,"bool"),o.Greater,ge((function(t,e){return t<e?1:0})));Le(o.Less,Qe,null,"bool"),o.Less;var Ye=Ce((function(t){return Math.log(t)}));Ie(o.Log,Ye),o.Log;var Ge=ge((function(t,e){return Math.max(t,e)})),Fe=(Le(o.Maximum,Ge),o.Maximum,ge((function(t,e){return Math.min(t,e)}))),Ne=(Le(o.Minimum,Fe),o.Minimum,ge((function(t,e){return t*e}))),qe=Se((function(t,e,r,n){return{real:t*r-e*n,imag:t*n+e*r}}));function Ke(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}Le(o.Multiply,Ne,qe),o.Multiply,o.Neg,o.Transpose,o.Prod;var Be=Ce((function(t){return 1/Math.sqrt(t)}));function Ve(t){return function(t){if(Array.isArray(t))return Xe(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Xe(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Xe(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xe(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Ze(t){return function(t){if(Array.isArray(t))return He(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return He(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?He(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function He(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}Ie(o.Rsqrt,Be),o.Rsqrt,o.Abs,o.Slice;var Je=ge((function(t,e){return t-e})),_e=Se((function(t,e,r,n){return{real:t-r,imag:e-n}}));Le(o.Sub,Je,_e),o.Sub;var $e=Ae,tr=function(t,e,r,n,a){for(var i=o.util.sizeFromShape(n),u=o.util.makeZerosTypedArray(a,r),v=0;v<t.length;v++){var s=t[v];if(s<0)throw new Error("Input x must be non-negative!");s>=a||(u[s]+=i>0?e[v]:1)}return u},er=function(t,e,r){for(var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=t.shape[0],i=t.shape[1],u=Object(o.buffer)([a,r],e.dtype),v=0;v<a;v++)for(var s=0;s<i;s++){var c=t.get(v,s);if(c<0)throw new Error("Input x must be non-negative!");c>=r||(n?u.set(1,v,c):e.size>0?u.set(u.get(v,c)+e.get(v,s),v,c):u.set(u.get(v,c)+1,v,c))}return u},rr=Ee,nr=Me,ar=Ue,or=Re,ir=We,ur=Qe,vr=function(t,e,r){var n=(e-t)/(r-1),a=o.util.makeZerosTypedArray(r,"float32");a[0]=t;for(var i=1;i<a.length;i++)a[i]=a[i-1]+n;return a},sr=Ye,cr=Ge,Pr=Fe,lr=Ne,fr=function(t,e,r){var n=o.util.createScalarValue(-1,r);return Ne([],e,n,t,r)},dr=function(t,e,r,n){for(var a=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ke(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ke(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(t,n),2),i=a[0],u=a[1],v=Object(o.upcastType)(e,"int32"),s=o.util.makeZerosTypedArray(o.util.sizeFromShape(i),v),c=o.util.sizeFromShape(u),P=0;P<s.length;++P){for(var l=P*c,f=1,d=0;d<c;++d)f*=r[l+d];s[P]=f}return{outVals:s,outShape:i,outDtype:v}},pr=function(t,e,r,n){if(t===e||t<e&&r<0||e<t&&r>1)return o.util.makeZerosTypedArray(0,n);var a=Math.abs(Math.ceil((e-t)/r)),i=o.util.makeZerosTypedArray(a,n);e<t&&1===r&&(r=-1),i[0]=t;for(var u=1;u<i.length;u++)i[u]=i[u-1]+r;return i},br=Be,hr=function(t){for(var e=new Float32Array(t.length),r=0;r<t.length;++r)e[r]=Math.abs(t[r]);return e},yr=function(t,e,r,n,a){var i=o.slice_util.isSliceContinous(n,e,r),u=o.util.sizeFromShape(r),v=o.util.computeStrides(n);if(i){var s=o.slice_util.computeFlatOffset(e,v);return"string"===a?t.slice(s,s+u):t.subarray(s,s+u)}for(var c="string"===a?o.backend_util.fromUint8ToStringArray(t):t,P=Object(o.buffer)(n,a,c),l=Object(o.buffer)(r,a),f=0;f<l.size;++f){var d=l.indexToLoc(f),p=d.map((function(t,r){return t+e[r]}));l.set.apply(l,[P.get.apply(P,Ve(p))].concat(Ve(d)))}return"string"===a?o.backend_util.fromStringArrayToUint8(l.values):l.values},mr=Je,gr=function(t,e,r,n,a){for(var i=e[e.length-1],u=t.length/i,v=i,s=o.util.getTypedArrayFromDType(r,u*n),c=o.util.getTypedArrayFromDType("int32",u*n),P=0;P<u;P++){for(var l=P*v,f=t.subarray(l,l+v),d=[],p=0;p<f.length;p++)d.push({value:f[p],index:p});d.sort((function(t,e){return e.value-t.value}));for(var b=P*n,h=s.subarray(b,b+n),y=c.subarray(b,b+n),m=0;m<n;m++)h[m]=d[m].value,y[m]=d[m].index}var g=e.slice();return g[g.length-1]=n,[Object(o.buffer)(g,r,s),Object(o.buffer)(g,"int32",c)]},Tr=function(t,e,r,n,a){for(var i=e.length,u=o.util.sizeFromShape(e),v=o.util.computeStrides(e),s=o.util.computeStrides(a),c=o.util.getTypedArrayFromDType(r,o.util.sizeFromShape(a)),P=0;P<u;++P){for(var l=o.util.indexToLoc(P,i,v),f=new Array(l.length),d=0;d<f.length;d++)f[d]=l[n[d]];c[o.util.locToIndex(f,i,s)]=t[P]}return c},jr=function(t,e,r,n){for(var a=o.util.parseAxisParam(e,r)[0],i=[1,r[0],1],u=0;u<a;u++)i[0]*=r[u];i[1]=r[a];for(var v=a+1;v<r.length;v++)i[2]*=r[v];for(var s={},c=new Int32Array(r[a]),P=new o.TensorBuffer(i,n,t),l=[],f=1===i[0]&&1===i[2],d=0;d<r[a];d++){var p=void 0;if(f)p=t[d].toString();else{for(var b=[],h=0;h<i[0];h++)for(var y=0;y<i[2];y++)b.push(P.get(h,d,y));p=b.join(",")}if(void 0!==s[p])c[d]=s[p];else{var m=Object.keys(s).length;s[p]=m,c[d]=m,l.push(d)}}var g=i.slice();g[1]=Object.keys(s).length;var T=new o.TensorBuffer(g,n);l.forEach((function(t,e){for(var r=0;r<i[0];r++)for(var n=0;n<i[2];n++)T.set(P.get(r,t,n),r,e,n)}));var j=r.slice();return j[a]=g[1],{outputValues:T.values,outputShape:j,indices:c}};function zr(t,e){return["x","y","z","w","u","v"].slice(0,e).map((function(e){return"".concat(t,".").concat(e)}))}function wr(t,e){return 1===e?[t]:zr(t,e)}var Dr=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;var r=e.length;if(0===r)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{var n=wr("rc",r),a=fe(r),o=function(t,e,r){if(1===t)return"rc > ".concat(e[0]);for(var n="",a=t-2;a<t;a++)n+="".concat(r[a]," >= ").concat(e[a]),a<t-1&&(n+="||");return n}(r,e,n),i=function(t,e,r,n){if(1===t)return"";var a=n.slice(-2);return"\n    int r = ".concat(a[0],";\n    int c = ").concat(a[1],";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ").concat(e,";\n    bool rEdge = rp1 >= ").concat(r,";\n  ")}(r,e[e.length-1],e[e.length-2],n),u=function(t,e){var r=t.length,n=function(t,e){for(var r=[],n=0;n<=1;n++)for(var a=0;a<=1;a++){for(var o="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1"),i=2;i<t;i++)o="".concat(e[e.length-1-i],",")+o;r.push(o)}return r}(r,e);return 1===r?"getA(rc),\n            rc + 1 >= ".concat(t[0]," ? 0. : getA(rc + 1),\n            0, 0"):"getA(".concat(n[0],"),\n          cEdge ? 0. : getA(").concat(n[1],"),\n          rEdge ? 0. : getA(").concat(n[2],"),\n          rEdge || cEdge ? 0. : getA(").concat(n[3],")")}(e,n);this.userCode="\n        void main() {\n          ".concat(a," rc = getOutputCoords();\n\n          if(").concat(o,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(i,"\n\n            setOutput(vec4(").concat(u,"));\n          }\n        }\n      ")}},xr=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var n,a,o="",i=0;i<4;i++){var u="thisRC = rc;";i%2==1&&(u+="thisRC.z += 1;"),i>1&&(u+="thisRC.y += 1;"),o+="\n        ".concat(u,"\n        ").concat(i>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(i,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(i>0?"}":"","\n      ")}this.userCode="\n      ".concat((n=r,a=Pt(["r","c","d"],n),"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")),"\n      ").concat(lt(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(e[1],";\n        int cols = ").concat(e[2],";\n\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")};function Or(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Lr(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Lr(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Lr(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Sr(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Ar=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}var e,r;return e=t,(r=[{key:"acquireTexture",value:function(t,e,r){var n=Cr(e,r),a=Ir(t,n,r);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);var o,i=kr(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();var u=this.freeTextures[a].shift();return this.usedTextures[a].push(u),u}return n===c.PhysicalTextureType.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):n===c.PhysicalTextureType.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):n===c.PhysicalTextureType.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):n===c.PhysicalTextureType.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):n===c.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),o}},{key:"releaseTexture",value:function(t,e,r,n){if(null!=this.freeTextures){var a=Cr(r,n),i=Ir(e,a,n);i in this.freeTextures||(this.freeTextures[i]=[]);var u=kr(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n),v=Object(o.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==v&&this._numBytesAllocated>v?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=u):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=u),this.numUsedTextures--;var s=this.usedTextures[i],c=s.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");s.splice(c,1),this.log()}}},{key:"log",value:function(){if(this.logEnabled){var t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));var e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}}},{key:"numBytesAllocated",get:function(){return this._numBytesAllocated}},{key:"numBytesFree",get:function(){return this._numBytesFree}},{key:"getNumUsedTextures",value:function(){return this.numUsedTextures}},{key:"getNumFreeTextures",value:function(){return this.numFreeTextures}},{key:"dispose",value:function(){var t=this;if(null!=this.freeTextures){for(var e in this.freeTextures)this.freeTextures[e].forEach((function(e){t.gpgpu.deleteMatrixTexture(e)}));for(var r in this.usedTextures)this.usedTextures[r].forEach((function(e){t.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}])&&Sr(e.prototype,r),t}();function kr(t,e,r,n,a){var o,i=function(t,e){switch(t){case c.PhysicalTextureType.PACKED_2X2_FLOAT32:return Wt(e);case c.PhysicalTextureType.PACKED_2X2_FLOAT16:return Yt(e);case c.PhysicalTextureType.UNPACKED_FLOAT32:return Ct(e);case c.PhysicalTextureType.UNPACKED_FLOAT16:return Et(e);case c.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:return Ut(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,n);if(a){var u=Or(Object(c.getPackedMatrixTextureShapeWidthHeight)(t[0],t[1]),2);o=u[0]*u[1]}else{var v=Or(Object(c.getUnpackedMatrixTextureShapeWidthHeight)(t[0],t[1]),2);o=v[0]*v[1]}return o*function(t,e){var r=t;if(e===r.R32F)return 4;if(e===r.R16F)return 2;if(e===r.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===r.RGBA16F)return 8;throw new Error("Unknown internal format ".concat(e))}(r,i)}function Cr(t,e){if(t===c.TextureUsage.UPLOAD)return c.PhysicalTextureType.PACKED_2X2_FLOAT32;if(t===c.TextureUsage.RENDER||null==t)return function(t){return Object(o.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?c.PhysicalTextureType.PACKED_2X2_FLOAT32:c.PhysicalTextureType.UNPACKED_FLOAT32:t?c.PhysicalTextureType.PACKED_2X2_FLOAT16:c.PhysicalTextureType.UNPACKED_FLOAT16}(e);if(t===c.TextureUsage.DOWNLOAD||t===c.TextureUsage.PIXELS)return c.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function Ir(t,e,r){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(r)}var Er=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.outputShape=e,this.userCode="\n      float unaryOperation(float x) {\n        ".concat(r,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")},Mr="if (isnan(x)) return x;",Ur="return abs(x);",Rr="return (x >= 0.0) ? x : (exp(x) - 1.0);",Wr=Mr+"\n  return (x < 0.0) ? 0.0 : x;\n",Qr=Mr+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Yr="return x;",Gr="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Fr="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Nr="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",qr=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(r,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")},Kr=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;var r=e.length,n=wr("rc",r),a=fe(r),o=function(t,e){if(1===t)return"rc";for(var r="",n=0;n<t;n++)r+=e[n],n<t-1&&(r+=",");return r}(r,n),i=n.slice(-2),u=r<=1?"rc":"vec2(".concat(i.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(o,");\n\n        setOutput(getChannel(packedInput, ").concat(u,"));\n      }\n    ")};function Br(t){return(Br="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Vr(t){return function(t){if(Array.isArray(t))return Zr(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||Xr(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xr(t,e){if(t){if("string"==typeof t)return Zr(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Zr(t,e):void 0}}function Zr(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Hr(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Jr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Hr(o,n,a,i,u,"next",t)}function u(t){Hr(o,n,a,i,u,"throw",t)}i(void 0)}))}}function _r(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function $r(t,e){return($r=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function tn(t,e){return!e||"object"!==Br(e)&&"function"!=typeof e?en(t):e}function en(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function rn(t){return(rn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var nn=o.kernel_impls.whereImpl,an={},on=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&$r(t,e)}(v,t);var e,r,n,a,i,u=function(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=rn(t);if(e){var a=rn(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return tn(this,r)}}(v);function v(t){var e,r;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,v),(e=u.call(this)).pendingRead=new WeakMap,e.pendingDisposal=new WeakSet,e.dataRefCount=new WeakMap,e.numBytesInGPU=0,e.uploadWaitMs=0,e.downloadWaitMs=0,e.warnedAboutMemory=!1,e.warnedAboutCPUBackend=!1,e.pendingDeletes=0,e.disposed=!1,!Object(o.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){var n=s(Object(o.env)().getNumber("WEBGL_VERSION"));e.binaryCache=((r=Object(o.env)().getNumber("WEBGL_VERSION"))in an||(an[r]={}),an[r]),e.gpgpu=new $t(n),e.canvas=n.canvas,e.gpgpuCreatedLocally=!0}else e.gpgpu=t,e.binaryCache={},e.gpgpuCreatedLocally=!1,e.canvas=t.gl.canvas;return e.textureManager=new Ar(e.gpgpu),e.numMBBeforeWarning=null==Object(o.env)().global.screen?1024:Object(o.env)().global.screen.height*Object(o.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,e.texData=new o.DataStorage(en(e),Object(o.engine)()),e}return e=v,(r=[{key:"numDataIds",value:function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}},{key:"write",value:function(t,e,r){if((Object(o.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(o.env)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===r&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var n={};return this.texData.set(n,{shape:e,dtype:r,values:t,usage:c.TextureUsage.UPLOAD,refCount:1,complexParentRefCount:0}),n}},{key:"incRef",value:function(t){this.texData.get(t).refCount++}},{key:"decRef",value:function(t){this.texData.has(t)&&this.texData.get(t).refCount--}},{key:"decComplexRef",value:function(t){if(this.texData.has(t)){var e=this.texData.get(t);e.complexParentRefCount>0&&e.refCount--}}},{key:"move",value:function(t,e,r,n){if(Object(o.env)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===n)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:r,dtype:n,values:e,usage:c.TextureUsage.UPLOAD,refCount:1,complexParentRefCount:0})}},{key:"disposeIntermediateTensorInfo",value:function(t){var e=t.dataId;if(this.texData.has(e)){var r=this.texData.get(e);r.refCount--,r.refCount<1&&this.disposeData(e)}}},{key:"readSync",value:function(t){var e=this.texData.get(t),r=e.values,n=e.dtype,a=e.complexTensorInfos,i=e.slice,u=e.shape,v=e.isPacked;if(null!=i){var s;s=v?new qr(u,Yr):new Er(u,Yr);var c=this.runWebGLProgram(s,[{dataId:t,shape:u,dtype:n}],n),P=this.readSync(c.dataId);return this.disposeIntermediateTensorInfo(c),P}if(null!=r)return this.convertAndCacheOnCPU(t);if("string"===n)return r;var l,f,d=null!=this.activeTimers;if(d&&(l=o.util.now()),"complex64"===n){var p=this.readSync(a.real.dataId),b=this.readSync(a.imag.dataId);f=o.backend_util.mergeRealAndImagArrays(p,b)}else f=this.getValuesFromTexture(t);return d&&(this.downloadWaitMs+=o.util.now()-l),this.convertAndCacheOnCPU(t,f)}},{key:"read",value:(i=Jr(regeneratorRuntime.mark((function t(e){var r,n,a,i,u,v,s,P,l,f,d,p,b,h,y,m,g,T,j,z,w,D;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!this.pendingRead.has(e)){t.next=3;break}return r=this.pendingRead.get(e),t.abrupt("return",new Promise((function(t){return r.push(t)})));case 3:if(n=this.texData.get(e),a=n.values,i=n.shape,u=n.slice,v=n.dtype,s=n.complexTensorInfos,P=n.isPacked,null==u){t.next=11;break}return l=P?new qr(i,Yr):new Er(i,Yr),f=this.runWebGLProgram(l,[{dataId:e,shape:i,dtype:v}],v),d=this.read(f.dataId),this.disposeIntermediateTensorInfo(f),t.abrupt("return",d);case 11:if(null==a){t.next=13;break}return t.abrupt("return",this.convertAndCacheOnCPU(e));case 13:if(Object(o.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")||2!==Object(o.env)().getNumber("WEBGL_VERSION")){t.next=15;break}throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");case 15:if(p=null,"complex64"!==v&&Object(o.env)().get("WEBGL_BUFFER_SUPPORTED")&&(b=this.decode(e),y=this.texData.get(b.dataId),p=(h=this.gpgpu).createBufferFromTexture.apply(h,[y.texture].concat(Vr(c.getDenseTexShape(i))))),this.pendingRead.set(e,[]),"complex64"===v){t.next=21;break}return t.next=21,this.gpgpu.createAndWaitForFence();case 21:if("complex64"!==v){t.next=30;break}return t.next=24,Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]);case 24:g=t.sent,T=g[0],j=g[1],m=o.backend_util.mergeRealAndImagArrays(T,j),t.next=31;break;case 30:null==p?m=this.getValuesFromTexture(e):(z=o.util.sizeFromShape(i),m=this.gpgpu.downloadFloat32MatrixFromBuffer(p,z));case 31:return null!=b&&this.disposeIntermediateTensorInfo(b),w=this.convertAndCacheOnCPU(e,m),D=this.pendingRead.get(e),this.pendingRead.delete(e),D.forEach((function(t){return t(w)})),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),t.abrupt("return",w);case 38:case"end":return t.stop()}}),t,this)}))),function(t){return i.apply(this,arguments)})},{key:"bufferSync",value:function(t){var e=this.readSync(t.dataId),r=e;if("string"===t.dtype)try{r=e.map((function(t){return o.util.decodeString(t)}))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(o.buffer)(t.shape,t.dtype,r)}},{key:"checkNumericalProblems",value:function(t){if(null!=t)for(var e=0;e<t.length;e++){var r=t[e];if(!p(r)){if(Object(o.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(r," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(r," cannot be represented on this device."))}}}},{key:"getValuesFromTexture",value:function(t){var e=this.texData.get(t),r=e.shape,n=e.dtype,a=e.isPacked,i=o.util.sizeFromShape(r);if(Object(o.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var u,v=this.decode(t),s=this.texData.get(v.dataId),P=(u=this.gpgpu).downloadMatrixFromPackedTexture.apply(u,[s.texture].concat(Vr(c.getDenseTexShape(r)))).subarray(0,i);return this.disposeIntermediateTensorInfo(v),P}var l=Object(o.env)().getBool("WEBGL_PACK")&&!0===a,f=l?V(r):r,d=l?new ht(f):new bt(f),p=this.runWebGLProgram(d,[{shape:f,dtype:n,dataId:t}],"float32"),b=this.texData.get(p.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(b.texture,b.texShape[0],b.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(p),h}},{key:"time",value:(a=Jr(regeneratorRuntime.mark((function t(e){var r,n,a,i,u,v,s;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=this.activeTimers,n=[],a=!1,null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e(),i=o.util.flatten(this.activeTimers.map((function(t){return t.query}))).filter((function(t){return null!=t})),u=o.util.flatten(this.activeTimers.map((function(t){return t.name}))).filter((function(t){return null!=t})),this.activeTimers=r,a&&(this.programTimersStack=null),v={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},!(Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)){t.next=19;break}return t.next=14,Promise.all(i);case 14:s=t.sent,v.kernelMs=o.util.sum(s),v.getExtraProfileInfo=function(){return s.map((function(t,e){return{name:u[e],ms:t}})).map((function(t){return"".concat(t.name,": ").concat(t.ms)})).join(", ")},t.next=20;break;case 19:v.kernelMs={error:"WebGL query timers are not supported in this environment."};case 20:return this.uploadWaitMs=0,this.downloadWaitMs=0,t.abrupt("return",v);case 23:case"end":return t.stop()}}),t,this)}))),function(t){return a.apply(this,arguments)})},{key:"memory",value:function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}},{key:"startTimer",value:function(){return Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:o.util.now(),endMs:null}}},{key:"endTimer",value:function(t){return Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=o.util.now(),t)}},{key:"getQueryTime",value:(n=Jr(regeneratorRuntime.mark((function t(e){var r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(Object(o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)){t.next=2;break}return t.abrupt("return",this.gpgpu.waitForQueryAndGetTime(e));case 2:return r=e,t.abrupt("return",r.endMs-r.startMs);case 4:case"end":return t.stop()}}),t,this)}))),function(t){return n.apply(this,arguments)})},{key:"disposeData",value:function(t){if(!this.pendingDisposal.has(t)){if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(this.texData.has(t))if(this.texData.get(t).complexParentRefCount>0)this.texData.get(t).refCount--;else{this.releaseGPUData(t);var e=this.texData.get(t).complexTensorInfos;null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}}}},{key:"releaseGPUData",value:function(t){var e=this.texData.get(t),r=e.texture,n=e.dtype,a=e.texShape,o=e.usage,i=e.isPacked,u=e.slice,v=u&&u.origDataId||t,s=this.dataRefCount.get(v);s>1?this.dataRefCount.set(v,s-1):(this.dataRefCount.delete(v),null!=r&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(r,a,o,i)));var c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}},{key:"getTexture",value:function(t){return this.uploadToGPU(t),this.texData.get(t).texture}},{key:"getDataInfo",value:function(t){return this.texData.get(t)}},{key:"getCPUBackend",value:function(){return Object(o.env)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(o.engine)().findBackend("cpu")),this.cpuBackend):null}},{key:"shouldExecuteOnCPU",value:function(t){var e=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:128,n=this.getCPUBackend();return Object(o.env)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((function(t){return null==e.texData.get(t.dataId).texture&&o.util.sizeFromShape(t.shape)<r}))}},{key:"getGPGPUContext",value:function(){return this.gpgpu}},{key:"where",value:function(t){o.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var e=t.dataSync();return nn(t.shape,e)}},{key:"packedUnaryOp",value:function(t,e,r){var n=new qr(t.shape,e);return this.compileAndRun(n,[t],r)}},{key:"abs",value:function(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){var e=hr(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ur,t.dtype);var r=new Er(t.shape,Ur);return this.compileAndRun(r,[t])}},{key:"makeTensorInfo",value:function(t,e,r){var n;if("string"===e&&null!=r&&r.length>0&&o.util.isString(r[0])){var a=r.map((function(t){return o.util.encodeString(t)}));n=this.write(a,t,e)}else n=this.write(r,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}},{key:"makeOutput",value:function(t,e,r){var n=this.makeTensorInfo(t,e,r).dataId;return Object(o.engine)().makeTensorFromDataId(n,t,e,this)}},{key:"unpackTensor",value:function(t){var e=new Kr(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}},{key:"packTensor",value:function(t){var e=new Dr(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}},{key:"packedReshape",value:function(t,e){var r=[K(t.shape)].concat(Vr(B(t.shape))),n={dtype:t.dtype,shape:r,dataId:t.dataId},a=[K(e)].concat(Vr(B(e))),o=new xr(a,r),i=this.runWebGLProgram(o,[n],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}},{key:"decode",value:function(t){var e,r=this.texData.get(t),n=r.isPacked,a=r.shape,o=r.dtype,i=V(a);return e=n?new pt(i):new dt(i),{dtype:o,shape:a,dataId:this.runWebGLProgram(e,[{shape:i,dtype:o,dataId:t}],o,null,!0).dataId}}},{key:"runWebGLProgram",value:function(t,e,r,n){var a=this,i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],u=this.makeTensorInfo(t.outputShape,r),v=this.texData.get(u.dataId);if(t.packedOutput&&(v.isPacked=!0),t.outPackingScheme===c.PackingScheme.DENSE){var s=c.getDenseTexShape(t.outputShape);v.texShape=s.map((function(t){return 2*t}))}if(null!=t.outTexUsage&&(v.usage=t.outTexUsage),0===o.util.sizeFromShape(u.shape))return v.values=o.util.getTypedArrayFromDType(u.dtype,0),u;var P=[],l=e.map((function(e){if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var r=a.texData.get(e.dataId);if(null==r.texture){if(!t.packedInputs&&o.util.sizeFromShape(e.shape)<=Object(o.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:r.values};t.packedInputs&&(r.isPacked=!0,r.shape=e.shape)}else if(!!r.isPacked!=!!t.packedInputs)e=r.isPacked?a.unpackTensor(e):a.packTensor(e),P.push(e),r=a.texData.get(e.dataId);else if(r.isPacked&&!H(r.shape,e.shape)){var n=e,i=e.shape;e.shape=r.shape,e=a.packedReshape(e,i),P.push(e),r=a.texData.get(e.dataId),n.shape=i}return a.uploadToGPU(e.dataId),{shape:e.shape,texData:r,isUniform:!1}}));this.uploadToGPU(u.dataId);var f,d={shape:u.shape,texData:v,isUniform:!1},p=me(t,l,d),b=this.getAndSaveBinary(p,(function(){return be(a.gpgpu,t,l,d)})),h=null!=this.activeTimers;if(h&&(f=this.startTimer()),ye(this.gpgpu,b,l,d,n),P.forEach((function(t){return a.disposeIntermediateTensorInfo(t)})),h&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(o.env)().getBool("WEBGL_LAZILY_UNPACK")&&v.isPacked&&!1===i){var y=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),y}return u}},{key:"compileAndRun",value:function(t,e,r,n){var a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];r=r||e[0].dtype;var i=this.runWebGLProgram(t,e,r,n,a);return Object(o.engine)().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}},{key:"getAndSaveBinary",value:function(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}},{key:"getTextureManager",value:function(){return this.textureManager}},{key:"dispose",value:function(){var t=this;this.disposed||(Object(o.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((function(e){t.gpgpu.deleteProgram(t.binaryCache[e].webGLProgram),delete t.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}},{key:"floatPrecision",value:function(){var t=this;return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(o.tidy)((function(){if(!Object(o.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){var e=Object(o.env)().getBool("DEBUG");Object(o.env)().set("DEBUG",!1);var r=t.abs(Object(o.scalar)(1e-8)).dataSync()[0];if(Object(o.env)().set("DEBUG",e),r>0)return 32}return 16}))),this.floatPrecisionValue}},{key:"epsilon",value:function(){return 32===this.floatPrecision()?1e-7:1e-4}},{key:"uploadToGPU",value:function(t){var e=this.texData.get(t),r=e.shape,n=e.dtype,a=e.values,i=e.texture,u=e.usage,v=e.isPacked;if(null==i){var s,P=null!=this.activeTimers;P&&(s=o.util.now());var l=e.texShape;if(null==l&&(l=X(r,v),e.texShape=l),null!=a){var f,d=V(r),p=l[1],b=l[0],h=a instanceof Uint8Array;if(v){var y=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||Xr(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(c.getPackedMatrixTextureShapeWidthHeight(l[0],l[1]),2);p=y[0],b=y[1],f=new Dt(d,[b,p],h)}else f=new Tt(d,[b,p],h);var m=this.makeTensorInfo([b,p],n);this.texData.get(m.dataId).usage=h?c.TextureUsage.PIXELS:c.TextureUsage.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),p,b,a);var g=this.runWebGLProgram(f,[m],n,null,!0),T=this.texData.get(g.dataId);e.texture=T.texture,e.texShape=T.texShape,e.isPacked=T.isPacked,e.usage=T.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(g.dataId),e.values=null,P&&(this.uploadWaitMs+=o.util.now()-s)}else{var j=this.acquireTexture(l,u,n,v);e.texture=j}}}},{key:"convertAndCacheOnCPU",value:function(t,e){var r=this.texData.get(t),n=r.dtype;return this.releaseGPUData(t),null!=e&&(r.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){for(var r="int32"===e?new Int32Array(t.length):new Uint8Array(t.length),n=0;n<r.length;++n)r[n]=Math.round(t[n]);return r}throw new Error("Unknown dtype ".concat(e))}(e,n)),r.values}},{key:"acquireTexture",value:function(t,e,r,n){if(this.numBytesInGPU+=this.computeBytes(t,r),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(a," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,n)}},{key:"computeBytes",value:function(t,e){return t[0]*t[1]*o.util.bytesPerElement(e)}}])&&_r(e.prototype,r),v}(o.KernelBackend),un="2.8.6";function vn(){Object(o.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}o.device_util.isBrowser()&&Object(o.registerBackend)("webgl",(function(){return new on}),2);var sn={forceHalfFloat:vn},cn=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A","B"],this.outputShape=o.backend_util.assertAndGetBroadcastShape(r,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")};function Pn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var ln=function t(e,r,n){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];Pn(this,t),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.backend_util.assertAndGetBroadcastShape(r,n);var i=this.outputShape.length,u="";if(a)if(0===i||1===o.util.sizeFromShape(this.outputShape))u="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{var v=fe(i);if(u="\n          ".concat(v," coords = getOutputCoords();\n        "),1===i)u+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{var s=wr("coords",i);u+="\n            bool nextRowOutOfBounds =\n              (".concat(s[i-2]," + 1) >= ").concat(this.outputShape[i-2],";\n            bool nextColOutOfBounds =\n              (").concat(s[i-1]," + 1) >= ").concat(this.outputShape[i-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(u,"\n\n        setOutput(result);\n      }\n    ")};function fn(t){var e=t.inputs,r=t.backend,n=e.x;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var dn={kernelName:o.Identity,backendName:"webgl",kernelFunc:fn};function pn(t){var e=t.inputs,r=t.backend,n=e.real,a=e.imag,o=r.makeTensorInfo(n.shape,"complex64"),i=r.texData.get(o.dataId),u=fn({inputs:{x:n},backend:r});r.texData.get(u.dataId).complexParentRefCount++;var v=fn({inputs:{x:a},backend:r});return r.texData.get(v.dataId).complexParentRefCount++,i.complexTensorInfos={real:u,imag:v},o}var bn={kernelName:o.Complex,backendName:"webgl",kernelFunc:pn},hn="return (a < 0.) ? b * a : a;",yn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",mn={kernelName:o.LeakyRelu,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.alpha,u=r.makeTensorInfo([],"float32",o.util.createScalarValue(i,"float32")),v=Object(o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ln(yn,a.shape,u.shape):new cn(hn,a.shape,u.shape),s=r.runWebGLProgram(v,[a,u],a.dtype);return r.disposeIntermediateTensorInfo(u),s}},gn="return (a < 0.) ? b * a : a;",Tn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",jn={kernelName:o.Prelu,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=e.x,a=e.alpha,i=Object(o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ln(Tn,n.shape,a.shape):new cn(gn,n.shape,a.shape);return r.runWebGLProgram(i,[n,a],n.dtype)}};function zn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return wn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?wn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function wn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Dn(t){var e=t.opSnippet,r=t.packedOpSnippet,n=t.cpuKernelImpl,a=t.dtype;return function(t){var i,u=t.inputs,v=t.backend,s=u.x,c=v,P=a||s.dtype;if(c.shouldExecuteOnCPU([s])&&null!=n){var l=c.texData.get(s.dataId),f=n(l.values,P);return c.makeTensorInfo(s.shape,P,f)}return i=Object(o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=r?new qr(s.shape,r):new Er(s.shape,e),c.runWebGLProgram(i,[s],P)}}function xn(t){var e=t.opSnippet,r=t.packedOpSnippet,n=t.checkOutOfBounds,a=void 0!==n&&n,i=t.supportsComplex,u=void 0!==i&&i,v=t.cpuKernelImpl,s=t.dtype;return function(t){var n=t.inputs,i=t.backend,c=n.a,P=n.b,l=i;if(u&&"complex64"===c.dtype){var f=l.texData.get(c.dataId),d=l.texData.get(P.dataId),p=[[f.complexTensorInfos.real,d.complexTensorInfos.real],[f.complexTensorInfos.imag,d.complexTensorInfos.imag]].map((function(t){var r=zn(t,2),n=r[0],a=r[1],i={dataId:n.dataId,dtype:n.dtype,shape:c.shape},u={dataId:a.dataId,dtype:a.dtype,shape:P.shape},v=new cn(e,c.shape,P.shape);return l.runWebGLProgram(v,[i,u],Object(o.upcastType)(n.dtype,a.dtype))})),b=zn(p,2),h=b[0],y=b[1],m=pn({inputs:{real:h,imag:y},backend:l});return l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(y),m}var g,T=s||Object(o.upcastType)(c.dtype,P.dtype);if(l.shouldExecuteOnCPU([c,P])&&null!=v){var j=l.texData.get(c.dataId),z=l.texData.get(P.dataId),w=zn(v(c.shape,P.shape,j.values,z.values,T),2),D=w[0],x=w[1],O=l.makeTensorInfo(x,T);return l.texData.get(O.dataId).values=D,O}return g=Object(o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=r?new ln(r,c.shape,P.shape,a):new cn(e,c.shape,P.shape),l.runWebGLProgram(g,[c,P],T)}}function On(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===t)return"return x;";if("relu"===t)return e?Fr:Wr;if("elu"===t)return e?Gr:Rr;if("relu6"===t)return e?Nr:Qr;if("prelu"===t)return e?Tn:gn;if("leakyrelu"===t)return e?yn:hn;throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}function Ln(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Sn=function t(e,r,n){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,v=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8&&void 0!==arguments[8]&&arguments[8];Ln(this,t),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;var c=a?e[1]:e[2],P=Math.ceil(c/2),l=a?"i * 2, rc.y":"rc.y, i * 2",f=o?"rc.z, i * 2":"i * 2, rc.z",d=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],b="",h="";u&&(b=v?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(u,"\n        }"):s?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(u,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(u,"\n        }"),h="result = activation(result);");var y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),v&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha");var m="rc.x",g="rc.x";e[0]<r[0]?m="int(min(float(rc.x), ".concat(e[0]-1,".))"):r[0]<e[0]&&(g="int(min(float(rc.x), ".concat(r[0]-1,".))")),this.userCode="\n      ".concat(b,"\n\n      const float sharedDimension = ").concat(P,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ").concat(P,"; i++) {\n          int batchA = ").concat(m,";\n          int batchB = ").concat(g,";\n          vec4 a = getMatrixA(batchA, ").concat(l,");\n          vec4 b = getMatrixB(batchB, ").concat(f,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(d[0]," * ").concat(p[0],");\n          result += (").concat(d[1]," * ").concat(p[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(h,"\n\n        setOutput(result);\n      }\n    ")},An=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=o.backend_util.assertAndGetBroadcastShape(r,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")};function kn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Cn="return a * b;";function In(t){var e,r=t.inputs,n=t.backend,a=r.a,i=r.b,u=o.backend_util.upcastType(a.dtype,i.dtype);if("complex64"===a.dtype){var v=n.texData.get(a.dataId),s=n.texData.get(i.dataId),c=new An("return areal * breal - aimag * bimag;",a.shape,i.shape),P=new An("return areal * bimag + aimag * breal;",a.shape,i.shape),l=[{dataId:v.complexTensorInfos.real.dataId,dtype:v.complexTensorInfos.real.dtype,shape:a.shape},{dataId:v.complexTensorInfos.imag.dataId,dtype:v.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:i.shape},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:i.shape}],f=n.runWebGLProgram(c,l,"float32"),d=n.runWebGLProgram(P,l,"float32"),p=pn({inputs:{real:f,imag:d},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),p}if(n.shouldExecuteOnCPU([a,i])){var b=n.texData.get(a.dataId),h=n.texData.get(i.dataId),y=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return kn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?kn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(lr(a.shape,i.shape,b.values,h.values,u),2),m=y[0],g=y[1],T=n.makeTensorInfo(g,u);return n.texData.get(T.dataId).values=m,T}return e=Object(o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ln(Cn,a.shape,i.shape):new cn(Cn,a.shape,i.shape),n.runWebGLProgram(e,[a,i],u)}var En={kernelName:o.Multiply,backendName:"webgl",kernelFunc:In};function Mn(t){return function(t){if(Array.isArray(t))return Un(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Un(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Un(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Un(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Rn(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.shape,u=r,v=o.util.sizeFromShape(a.shape),s=o.util.inferFromImplicitShape(i,v),c=o.util.sizeFromShape(s);o.util.assert(v===c,(function(){return"The new shape (".concat(s,") has ").concat(c," elements and the old ")+"shape (".concat(a.shape,") has ").concat(v," elements. The new shape and old ")+"shape must have the same number of elements."}));var P=u.texData.get(a.dataId);return!P.isPacked||H(a.shape,s)||null!==P.texture&&H(P.shape,s)?(u.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}):function(t,e,r){var n=[K(t.shape)].concat(Mn(B(t.shape))),a={dtype:t.dtype,shape:n,dataId:t.dataId},o=[K(e)].concat(Mn(B(e))),i=new xr(o,n),u=r.runWebGLProgram(i,[a],t.dtype,null,!0);return{dataId:u.dataId,shape:e,dtype:u.dtype}}(a,s,u)}var Wn={kernelName:o.Reshape,backendName:"webgl",kernelFunc:Rn},Qn=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"];var n=e.windowSize,a=e.batchSize,i=e.inSize,u=e.outSize;this.outputShape=[a,u];var v=4*Math.floor(n/4),s=n%4,c="sumValue += dot(values, ones);";if(null!=r){var P=1/r;c="sumValue += dot(values * ".concat(o.util.isInt(P)?P.toPrecision(2):P,", ones);")}var l="";i%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(i,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(v,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(v,";\n        if (").concat(1===s,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===s,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===s,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")},Yn=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"];var n=e.windowSize,a=e.batchSize,o=e.inSize,i=e.outSize;this.outputShape=[a,i];var u="0.0",v="";"prod"===r?u="1.0":"min"===r?(u="1.0 / 1e-20",v="min"):"max"===r&&(u="-1.0 / 1e-20",v="max");var s="".concat(r,"(").concat(r,"(").concat(r,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===r?s="sumValue":"prod"===r?s="prodValue":"all"===r?s="allValue":"any"===r&&(s="anyValue");var c=4*Math.floor(n/4),P=n%4,l="\n      if (".concat("sum"===r,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===r,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(v,"(values, minMaxValue);\n      }\n    "),f="vec4";"all"===r?(u="1.0",l="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",f="bvec4"):"any"===r&&(u="0.0",l="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",f="bvec4");var d="";o%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(o,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(u,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(d,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(u,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(c,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(f," values = ").concat(f,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(c,";\n        if (").concat(1===P,") {\n          ").concat(f," values = ").concat(f,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===P,") {\n          ").concat(f," values = ").concat(f,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===P,") {\n          ").concat(f," values = ").concat(f,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat(s,");\n      }\n    ")};function Gn(t,e,r,n){for(var a=function(t){for(var e=[];0===e.length||1!==e[e.length-1].outSize;){var r=e.length?e[e.length-1].outSize:t[1],n=o.backend_util.computeOptimalWindowSize(r);e.push({inSize:r,windowSize:n,outSize:Math.ceil(r/n)})}return e}(t.shape),i=t,u=0;u<a.length;u++){var v,s,c=a[u],P=c.inSize,l=c.windowSize,f=c.outSize;s="mean"===r?0===u?new Qn({windowSize:l,inSize:P,batchSize:t.shape[0],outSize:f},P):new Qn({windowSize:l,inSize:P,batchSize:t.shape[0],outSize:f}):new Yn({windowSize:l,inSize:P,batchSize:t.shape[0],outSize:f},r),v=i,i=n.runWebGLProgram(s,[i],e),v.dataId!==t.dataId&&n.disposeIntermediateTensorInfo(v)}return i}var Fn=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"];for(var n=new Array(e.length),a=0;a<n.length;a++)n[a]=e[r[a]];this.outputShape=n,this.rank=n.length;var o=fe(this.rank),i=function(t){var e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));for(var r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e),a=0;a<t.length;a++)n[t[a]]=r[a];return n.join()}(r);this.userCode="\n    void main() {\n      ".concat(o," resRC = getOutputCoords();\n      setOutput(getA(").concat(i,"));\n    }\n    ")},Nn=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var n=new Array(e.length),a=0;a<n.length;a++)n[a]=e[r[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));for(var o=fe(this.rank),i=zr("rc",this.rank),u=new Array(this.rank),v=0;v<r.length;v++)u[r[v]]=i[v];var s="vec2(".concat(u.slice(-2).join(),")"),c="++".concat(i[this.rank-1]," < ").concat(n[this.rank-1]),P="getChannel(getA(".concat(u.join(),"), ").concat(s,")");this.userCode="\n    void main() {\n      ".concat(o," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(P,";\n      if(").concat(c,") {\n        result[1] = ").concat(P,";\n      }\n      --").concat(i[this.rank-1],";\n      if(++").concat(i[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(P,";\n        if(").concat(c,") {\n          result[3] = ").concat(P,";\n        }\n      }\n      setOutput(result);\n    }\n    ")};function qn(t,e,r){var n=Object(o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nn(t.shape,e):new Fn(t.shape,e);return r.runWebGLProgram(n,[t],t.dtype)}function Kn(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Bn(t){var e=t.inputs,r=t.backend,n=t.attrs;return function(t,e,r,n){var a=e,i=t.shape.length,u=o.util.parseAxisParam(a,t.shape),v=u,s=o.backend_util.getAxesPermutation(v,i),c=null!=s,P=t;c&&(P=qn(t,s,n),v=o.backend_util.getInnerMostAxes(v.length,i)),o.backend_util.assertAxesAreInnerMostDims("sum",v,i);var l=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Kn(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Kn(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(P.shape,v),2),f=l[0],d=l[1],p=f;r&&(p=o.backend_util.expandShapeToKeepDim(f,u));var b=o.util.sizeFromShape(d),h=Rn({inputs:{x:P},attrs:{shape:[o.util.sizeFromShape(t.shape)/b,b]},backend:n}),y=Gn(h,Object(o.sumOutType)(t.dtype),"sum",n),m=Rn({inputs:{x:y},attrs:{shape:p},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(y),c&&n.disposeIntermediateTensorInfo(P),m}(e.x,n.axis,n.keepDims,r)}var Vn={kernelName:o.Sum,backendName:"webgl",kernelFunc:Bn};function Xn(t){for(var e,r=t.inputs,n=t.backend,a=t.attrs,o=r.x,i=a.perm,u=n,v=o.shape.length,s=new Array(v),c=0;c<s.length;c++)s[c]=o.shape[i[c]];if(u.shouldExecuteOnCPU([o])){var P=u.texData.get(o.dataId).values,l=Tr(P,o.shape,o.dtype,i,s);e=u.makeTensorInfo(s,o.dtype),u.texData.get(e.dataId).values=l}else e=qn(o,i,u);return e}var Zn={kernelName:o.Transpose,backendName:"webgl",kernelFunc:Xn};function Hn(t){var e=t.a,r=t.b,n=t.transposeA,a=t.transposeB,i=t.backend,u=t.bias,v=void 0===u?null:u,s=t.preluActivationWeights,c=void 0===s?null:s,P=t.leakyreluAlpha,l=void 0===P?0:P,f=t.activation,d=void 0===f?null:f,p=e.shape.length,b=r.shape.length,h=n?e.shape[p-2]:e.shape[p-1],y=a?r.shape[b-1]:r.shape[b-2],m=n?e.shape[p-1]:e.shape[p-2],g=a?r.shape[b-2]:r.shape[b-1],T=e.shape.slice(0,-2),j=r.shape.slice(0,-2),z=o.util.sizeFromShape(T),w=o.util.sizeFromShape(j),D=z===w||1===z||1===w;o.util.assert(p>=2&&b>=2&&D,(function(){return"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(T,") and (").concat(j,").")}));var x=(z>w?e.shape.slice(0,-2):r.shape.slice(0,-2)).concat([m,g]);o.util.assert(h===y,(function(){return"Error in matMul: inner shapes (".concat(h,") and (")+"".concat(y,") of Tensors with shapes ").concat(e.shape," and ")+"".concat(r.shape," and transposeA=").concat(n)+" and transposeB=".concat(a," must match.")}));var O,L=n?[z,h,m]:[z,m,h],S=a?[w,g,y]:[w,y,g],A=Rn({inputs:{x:e},backend:i,attrs:{shape:L}}),k=Rn({inputs:{x:r},backend:i,attrs:{shape:S}}),C=[A,k],I=Math.max(z,w),E=n?A.shape[1]:A.shape[2],M=null!=v,U=null!=c,R="leakyrelu"===d,W=null!=d?On(d,!0):null;if((1===m||1===g)&&E>1e3&&!1===(M||U||R||null!=W)){var Q=A,Y=k;n&&(Q=Xn({inputs:{x:A},backend:i,attrs:{perm:[0,2,1]}}),C.push(Q)),a&&(Y=Xn({inputs:{x:k},backend:i,attrs:{perm:[0,2,1]}}),C.push(Y));var G=1===g,F=Q;1!==g&&(F=Rn({inputs:{x:Q},backend:i,attrs:{shape:[I,E,1]}}),C.push(F));var N=1===g?2:1,q=Y;G&&(q=Rn({inputs:{x:Y},backend:i,attrs:{shape:[I,1,E]}}),C.push(q));var K=In({inputs:{a:F,b:q},backend:i});O=Bn({inputs:{x:K},backend:i,attrs:{axis:N,keepDims:!0}}),C.push(K)}else{var B=Object(o.upcastType)(e.dtype,r.dtype),V=new Sn(L,S,[I,m,g],n,a,M,W,U,R),X=[A,k];if(null!=v&&X.push(v),U&&X.push(c),R){var Z=i.makeTensorInfo([],"float32",o.util.createScalarValue(l,"float32"));X.push(Z),C.push(Z)}O=i.runWebGLProgram(V,X,B)}var H=Rn({inputs:{x:O},backend:i,attrs:{shape:x}});C.push(O);for(var J=0,_=C;J<_.length;J++){var $=_[J];i.disposeIntermediateTensorInfo($)}return H}var Jn={kernelName:o._FusedMatMul,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.a,o=e.b,i=e.bias,u=e.preluActivationWeights,v=n.transposeA,s=n.transposeB,c=n.activation;return Hn({a:a,b:o,transposeA:v,transposeB:s,backend:r,bias:i,preluActivationWeights:u,leakyreluAlpha:n.leakyreluAlpha,activation:c})}},_n={kernelName:o.Abs,backendName:"webgl",kernelFunc:function(t){var e,r=t.inputs,n=t.backend,a=r.x;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){var i=n.texData.get(a.dataId),u=hr(i.values);return n.makeTensorInfo(a.shape,a.dtype,u)}return e=Object(o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qr(a.shape,"return abs(x);"):new Er(a.shape,"return abs(x);"),n.runWebGLProgram(e,[a],a.dtype)}},$n=Dn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ta={kernelName:o.Acos,backendName:"webgl",kernelFunc:$n},ea=Dn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ra={kernelName:o.Acosh,backendName:"webgl",kernelFunc:ea},na="return a + b;",aa=xn({opSnippet:na,packedOpSnippet:na,supportsComplex:!0,cpuKernelImpl:$e}),oa={kernelName:o.Add,backendName:"webgl",kernelFunc:aa},ia=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.outputShape=[],this.outputShape=e,this.variableNames=r.map((function(t,e){return"T".concat(e)}));var n=[];this.variableNames.forEach((function(t){n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))}));var a=this.variableNames.map((function(t){return"v".concat(t)})).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")},ua=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=r.map((function(t,e){return"T".concat(e)}));var n=[];this.variableNames.forEach((function(t){n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))}));var a=this.variableNames.map((function(t){return"v".concat(t)})).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")},va={kernelName:o.AddN,backendName:"webgl",kernelFunc:function t(e){var r=e.inputs,n=e.backend,a=r;if(1===a.length)return fn({inputs:{x:a[0]},backend:n});if(a.length>Object(o.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var i=Math.floor(a.length/2),u=t({inputs:a.slice(0,i),backend:n}),v=t({inputs:a.slice(i),backend:n});return t({inputs:[u,v],backend:n})}var s=a.map((function(t){return t.dtype})).reduce((function(t,e){return Object(o.upcastType)(t,e)})),c=a.map((function(t){return t.shape})),P=Object(o.env)().getBool("WEBGL_PACK")?new ua(a[0].shape,c):new ia(a[0].shape,c);return n.runWebGLProgram(P,a,s)}};function sa(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ca={kernelName:o.All,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.axis,u=n.keepDims,v=a.shape.length,s=o.util.parseAxisParam(i,a.shape),c=s,P=o.backend_util.getAxesPermutation(c,v),l=a;null!=P&&(l=Xn({inputs:{x:a},backend:r,attrs:{perm:P}}),c=o.backend_util.getInnerMostAxes(c.length,v)),o.backend_util.assertAxesAreInnerMostDims("all",c,v);var f,d=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return sa(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?sa(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(l.shape,c),2),p=d[0],b=d[1],h=Rn({inputs:{x:l},backend:r,attrs:{shape:[-1,o.util.sizeFromShape(b)]}}),y=Gn(h,h.dtype,"all",r);return f=Rn(u?{inputs:{x:y},backend:r,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,s)}}:{inputs:{x:y},backend:r,attrs:{shape:p}}),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(y),null!=P&&r.disposeIntermediateTensorInfo(l),f}};function Pa(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var la={kernelName:o.Any,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.axis,u=n.keepDims,v=a.shape.length,s=o.util.parseAxisParam(i,a.shape),c=s,P=o.backend_util.getAxesPermutation(c,v),l=a;null!=P&&(l=Xn({inputs:{x:a},backend:r,attrs:{perm:P}}),c=o.backend_util.getInnerMostAxes(c.length,v)),o.backend_util.assertAxesAreInnerMostDims("any",c,v);var f,d=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Pa(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Pa(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(l.shape,c),2),p=d[0],b=d[1],h=Rn({inputs:{x:l},backend:r,attrs:{shape:[-1,o.util.sizeFromShape(b)]}}),y=Gn(h,h.dtype,"any",r);return f=Rn(u?{inputs:{x:y},backend:r,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,s)}}:{inputs:{x:y},backend:r,attrs:{shape:p}}),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(y),null!=P&&r.disposeIntermediateTensorInfo(l),f}},fa=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"];var a=e.windowSize,o=e.batchSize,i=e.outSize;n||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];var u="max"===r?">":"<",v=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(v,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(u," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")},da=function t(e,r,n,a){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,o.util.assert(e.length>2,(function(){return"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")}));var i=e[e.length-1],u=Math.ceil(i/r);this.outputShape=e.slice(0,-1),u>1&&this.outputShape.push(u),a||this.variableNames.push("bestIndicesA");var v,s,c=this.outputShape,P=c.length,l=fe(P),f=wr("coords",P);if(1===u){var d=fe(s=P+1);v="\n        ".concat(d," sourceLocR = ").concat(d,"(").concat(f.join(),", 0);\n        ++").concat(f[P-1],";\n        ").concat(d," sourceLocG = ").concat(d,"(").concat(f.join(),", 0);\n        ++").concat(f[P-2],";\n        ").concat(d," sourceLocA = ").concat(d,"(").concat(f.join(),", 0);\n        --").concat(f[P-1],";\n        ").concat(d," sourceLocB = ").concat(d,"(").concat(f.join(),", 0);\n        --").concat(f[P-2],";")}else s=P,v="\n        ".concat(l," sourceLocR = coords;\n        ++").concat(f[P-1],";\n        ").concat(l," sourceLocG = coords;\n        ++").concat(f[P-2],";\n        ").concat(l," sourceLocA = coords;\n        --").concat(f[P-1],";\n        ").concat(l," sourceLocB = coords;\n        --").concat(f[P-2],";");var p=["x","y","z","w","u","v"].slice(0,s),b="."+p[s-1],h=p.map((function(t){return"int "+t})),y=wr("sourceLocR",s-1).concat("inIdx.r"),m=wr("sourceLocG",s-1).concat("inIdx.g"),g=wr("sourceLocB",s-1).concat("inIdx.b"),T=wr("sourceLocA",s-1).concat("inIdx.a"),j="max"===n?"greaterThan":"lessThan",z=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(T.join(),")));"),w="vec4(\n            getAChannel(".concat(y.join(),"),\n            hasNextCol ? getAChannel(").concat(m.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(T.join(),") : 0.)"),D=a?"":"\n      float getBestIndicesAChannel(".concat(h.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(h.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(D,"\n      void main() {\n        ").concat(l," coords = getOutputCoords();\n        bool hasNextCol = ").concat(f[P-1]," < ").concat(c[P-1]-1,";\n        bool hasNextRow = ").concat(f[P-2]," < ").concat(c[P-2]-1,";\n        ").concat(v,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(b,", sourceLocG").concat(b,",\n          sourceLocB").concat(b,", sourceLocA").concat(b,") * ").concat(r,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(r,"; i++) {\n          inIdx = srcIdx;\n          ").concat(z,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(j,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")};function pa(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function ba(t,e,r,n){var a=[r];if(o.backend_util.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,e.shape.length),!Object(o.env)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){var i=[],u=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return pa(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?pa(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(e.shape,a),2),v=u[0],s=u[1],c=o.util.sizeFromShape(s),P=Rn({inputs:{x:e},backend:t,attrs:{shape:[-1,c]}});i.push(P);var l=function t(e,r,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,i=r.shape[0],u=r.shape[1];null!=a&&(i=a.shape[0],u=a.shape[1]);var v=o.backend_util.computeOptimalWindowSize(u),s={windowSize:v,inSize:u,batchSize:i,outSize:Math.ceil(u/v)},c=new fa(s,n,null==a),P=[r];null!=a&&P.push(a);var l=e.runWebGLProgram(c,P,"int32");if(1===l.shape[1])return l;var f=t(e,r,n,l);return e.disposeIntermediateTensorInfo(l),f}(t,P,n);i.push(l);var f=Rn({inputs:{x:l},backend:t,attrs:{shape:v}});return i.forEach((function(e){return t.disposeIntermediateTensorInfo(e)})),f}return function t(e,r,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,i=null!=a?a.shape:r.shape,u=i[i.length-1],v=o.backend_util.computeOptimalWindowSize(u),s=new da(i,v,n,null==a),c=null==a?[r]:[r,a],P=e.runWebGLProgram(s,c,"int32");if(P.shape.length===r.shape.length){var l=t(e,r,n,P);return e.disposeIntermediateTensorInfo(P),l}return P}(t,e,n)}var ha={kernelName:o.ArgMax,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.axis,u=o.util.parseAxisParam(i,a.shape),v=o.backend_util.getAxesPermutation(u,a.shape.length),s=a,c=[];null!=v&&(s=Xn({inputs:{x:a},backend:r,attrs:{perm:v}}),c.push(s),u=o.backend_util.getInnerMostAxes(u.length,s.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMax",[u[0]],s.shape.length);var P=ba(r,s,u[0],"max");return c.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),P}},ya={kernelName:o.ArgMin,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.axis,u=o.util.parseAxisParam(i,a.shape),v=o.backend_util.getAxesPermutation(u,a.shape.length),s=a,c=[];null!=v&&(s=Xn({inputs:{x:a},backend:r,attrs:{perm:v}}),c.push(s),u=o.backend_util.getInnerMostAxes(u.length,s.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMin",[u[0]],s.shape.length);var P=ba(r,s,u[0],"min");return c.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),P}},ma=Dn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ga={kernelName:o.Asin,backendName:"webgl",kernelFunc:ma},Ta=Dn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),ja={kernelName:o.Asinh,backendName:"webgl",kernelFunc:Ta},za=Dn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),wa={kernelName:o.Atan,backendName:"webgl",kernelFunc:za},Da=xn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),xa={kernelName:o.Atan2,backendName:"webgl",kernelFunc:Da},Oa=Dn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),La={kernelName:o.Atanh,backendName:"webgl",kernelFunc:Oa};function Sa(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Aa=function t(e,r,n){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(Sa(this,t),this.variableNames=["x"],"avg"===r&&n)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,u=e.strideHeight,v=e.strideWidth,s=e.dilationHeight,c=e.dilationWidth,P=e.effectiveFilterHeight,l=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;var p="avg"===r,b="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),h="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),y="0.0";if(p||(y="-1.0 / 1e-20"),n){var m=">=";this.userCode="\n        const ivec2 strides = ivec2(".concat(u,", ").concat(v,");\n        const ivec2 pads = ivec2(").concat(f,", ").concat(d,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(P,";\n              wR += ").concat(s,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(c,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(m," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?o?b:h:"wR * ".concat(l," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ")}else{var g="max",T="".concat(r,"(").concat(r,"(").concat(r,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===r&&(T="avgValue / count");var j=4*Math.floor(i/4),z=i%4,w="\n      if (".concat(p,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat(g,"(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(u,", ").concat(v,");\n      const ivec2 pads = ivec2(").concat(f,", ").concat(d,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(P,";\n            wR += ").concat(s,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(j,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(c,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              getValue(batch, xR, xC + 2 * ").concat(c,", d),\n              getValue(batch, xR, xC + 3 * ").concat(c,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(j,";\n          if (").concat(1===z,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===z,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===z,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              getValue(batch, xR, xC + 2 * ").concat(c,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(T,");\n      }\n    ")}},ka=function t(e,r,n){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(Sa(this,t),this.variableNames=["x"],"avg"===r&&n)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,u=e.strideDepth,v=e.strideHeight,s=e.strideWidth,c=e.dilationDepth,P=e.dilationHeight,l=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,b=e.padInfo.front,h=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;var m="avg"===r,g="0.0";if(m||(g="-1.0 / 1e-20"),n){var T=">=";this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(u,", ").concat(v,", ").concat(s,");\n        const ivec3 pads = ivec3(").concat(b,", ").concat(h,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(f,";\n              wD += ").concat(c,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(d,";\n                wR += ").concat(P,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(p,";\n                  wC += ").concat(l,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(T," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?o?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(d," * ").concat(p," +\n                      wR * ").concat(p," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ")}else{var j="max",z="".concat(r,"(").concat(r,"(").concat(r,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===r&&(z="avgValue / count");var w=4*Math.floor(i/4),D=i%4,x="\n      if (".concat(m,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat(j,"(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(u,", ").concat(v,", ").concat(s,");\n      const ivec3 pads = ivec3(").concat(b,", ").concat(h,", ").concat(y,");\n      const float initializationValue = ").concat(g,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(g,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(f,";\n            wD += ").concat(c,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,";\n            wR += ").concat(P,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(l,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(l,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(l,", ch)\n              );\n\n              ").concat(x,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(x,"\n            } else if (").concat(2===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(l,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(x,"\n            } else if (").concat(3===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(l,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(l,", ch),\n                initializationValue\n              );\n\n              ").concat(x,"\n            }\n          }\n          setOutput(").concat(z,");\n        }\n      }\n    ")}},Ca={kernelName:o.AvgPool,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x;vt(a,"avgPool");var i=n.filterSize,u=n.strides,v=n.pad,s=n.dimRoundingMode;o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(u,1),(function(){return"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(u," and dilations '").concat(1,"'")}));var c=o.backend_util.computePool2DInfo(a.shape,i,u,1,v,s);if(1===c.filterWidth&&1===c.filterHeight&&o.util.arraysEqual(c.inShape,c.outShape))return fn({inputs:{x:a},backend:r});var P=new Aa(c,"avg",!1);return r.runWebGLProgram(P,[a],"float32")}},Ia={kernelName:o.AvgPool3D,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.filterSize,u=n.strides,v=n.pad,s=n.dimRoundingMode,c=n.dataFormat,P=o.backend_util.computePool3DInfo(a.shape,i,u,[1,1,1],v,s,c),l=new ka(P,"avg",!1);return r.runWebGLProgram(l,[a],"float32")}};function Ea(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Ma=function t(e){Ea(this,t),this.variableNames=["dy"],this.outputShape=e.inShape;var r=e.filterHeight,n=e.filterWidth,a=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,u=e.dilationWidth,v=e.effectiveFilterHeight,s=e.effectiveFilterWidth,c=v-1-e.padInfo.top,P=s-1-e.padInfo.left,l=1/(r*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(c,", ").concat(P,");\n      const float avgMultiplier = float(").concat(l,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(v,";\n            wR += ").concat(i,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,";\n            wC+= ").concat(u,") {\n            float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Ua=function t(e){Ea(this,t),this.variableNames=["dy"],this.outputShape=e.inShape;var r=e.filterDepth,n=e.filterHeight,a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,v=e.dilationDepth,s=e.dilationHeight,c=e.dilationWidth,P=e.effectiveFilterDepth,l=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=P-1-e.padInfo.front,p=l-1-e.padInfo.top,b=f-1-e.padInfo.left,h=1/(r*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(d,", ").concat(p,", ").concat(b,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(P,";\n            wD += ").concat(v,") {\n          float dyD = float(dyDCorner + wD) / ").concat(o,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(l,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(i,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(f,";\n                wC += ").concat(c,") {\n              float dyC = float(dyCCorner + wC) / ").concat(u,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Ra={kernelName:o.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.dy,i=e.input,u=n.filterSize,v=n.strides,s=n.pad,c=n.dimRoundingMode,P=o.backend_util.computePool3DInfo(i.shape,u,v,[1,1,1],s,c),l=new Ua(P);return r.runWebGLProgram(l,[a],i.dtype)}},Wa={kernelName:o.AvgPoolGrad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.dy,i=e.input,u=i;vt([a,i],"avgPoolGrad");var v=n.filterSize,s=n.strides,c=n.pad,P=o.backend_util.computePool2DInfo(u.shape,v,s,1,c),l=new Ma(P);return r.runWebGLProgram(l,[a],u.dtype)}},Qa={kernelName:o.BatchMatMul,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs;return Hn({a:e.a,b:e.b,transposeA:n.transposeA,transposeB:n.transposeB,backend:r})}},Ya=function t(e,r,n,a,i,u){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.outputShape=[],this.variableNames=["x","mean","variance"],o.backend_util.assertAndGetBroadcastShape(e,r),o.backend_util.assertAndGetBroadcastShape(e,n);var v="0.0";null!=a&&(o.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),v="getOffsetAtOutCoords()");var s="1.0";null!=i&&(o.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),s="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(v,";\n        float scale = ").concat(s,";\n        float inv = scale * inversesqrt(variance + float(").concat(u,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")},Ga=function t(e,r,n,a,i,u){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],o.backend_util.assertAndGetBroadcastShape(e,r),o.backend_util.assertAndGetBroadcastShape(e,n);var v="vec4(0.0)";null!=a&&(o.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),v="getOffsetAtOutCoords()");var s="vec4(1.0)";null!=i&&(o.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),s="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(v,";\n        vec4 scale = ").concat(s,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(u,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")},Fa={kernelName:o.FusedBatchNorm,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.mean,u=e.variance,v=e.offset,s=e.scale;o.util.assert(i.shape.length===u.shape.length,(function(){return"Batch normalization gradient requires mean and variance to have equal ranks."})),o.util.assert(null==v||i.shape.length===v.shape.length,(function(){return"Batch normalization gradient requires mean and offset to have equal ranks."})),o.util.assert(null==s||i.shape.length===s.shape.length,(function(){return"Batch normalization gradient requires mean and scale to have equal ranks."}));var c=n.varianceEpsilon;null==c&&(c=.001);var P=[a,i,u],l=null;null!=v&&(l=v.shape,P.push(v));var f=null;null!=s&&(f=s.shape,P.push(s));var d=Object(o.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Ga(a.shape,i.shape,u.shape,l,f,c):new Ya(a.shape,i.shape,u.shape,l,f,c);return r.runWebGLProgram(d,P,P[0].dtype)}};function Na(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var qa=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var r,n=fe(this.rank),a="uniform int start[".concat(this.rank,"];"),o=function(t){if(1===t)return"sourceLoc";if(t<=6)return Ka.slice(0,t).map((function(t){return"sourceLoc."+t})).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}(this.rank),i=e.map((function(t,e){return"sourceLoc.".concat(Ka[e]," = start[").concat(e,"] + coords.").concat(Ka[e],";")}));r="\n        ".concat(n," sourceLoc;\n        ").concat(n," coords = getOutputCoords();\n        ").concat(i.join("\n"),"\n      "),this.userCode="\n      ".concat(a,"\n      void main() {\n        ").concat(r,"\n        setOutput(getSource(").concat(o,"));\n      }\n    ")}var e,r;return e=t,(r=[{key:"getCustomSetupFunc",value:function(t){var e=this;if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return function(r,n){null==e.startLoc&&(e.startLoc=r.getUniformLocationNoThrow(n,"start"),null==e.startLoc)||r.gl.uniform1iv(e.startLoc,t)}}}])&&Na(e.prototype,r),t}(),Ka=["x","y","z","w","u","v"];function Ba(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Va=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;var r=fe(this.rank),n=wr("coords",this.rank),a=wr("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),i="getChannel(getSource(".concat(a.join(),"), ").concat(o,")"),u="\n      result.x = ".concat(i,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(i,";\n        --").concat(a[this.rank-1],";\n      }\n    "),v=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(i,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(i,";\n        }\n      }\n    "),s=this.rank<=4?"sourceLoc = coords +\n            ".concat(r,"(").concat(e.map((function(t,e){return"start[".concat(e,"]")})).join(),");"):e.map((function(t,e){return"".concat(a[e]," = ").concat(n[e]," + start[").concat(e,"];")})).join("\n");this.userCode="\n      uniform int start[".concat(this.rank,"];\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        ").concat(r," sourceLoc;\n        ").concat(s,"\n        vec4 result = vec4(0.);\n        ").concat(u,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}var e,r;return e=t,(r=[{key:"getCustomSetupFunc",value:function(t){var e=this;if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return function(r,n){null==e.startLoc&&(e.startLoc=r.getUniformLocationNoThrow(n,"start"),null==e.startLoc)||r.gl.uniform1iv(e.startLoc,t)}}}])&&Ba(e.prototype,r),t}();function Xa(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Za(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.begin,u=n.size,v=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Xa(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Xa(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.slice_util.parseSliceParams(a,i,u),2),s=v[0],c=v[1];if(o.slice_util.assertParamsValid(a,s,c),0===o.util.sizeFromShape(c))return r.makeTensorInfo(c,a.dtype,[]);if(r.shouldExecuteOnCPU([a])||"string"===a.dtype){var P=r.texData.get(a.dataId),l=yr(P.values,s,c,a.shape,a.dtype);return r.makeTensorInfo(c,a.dtype,l)}var f=r.texData.get(a.dataId).isPacked,d=o.slice_util.isSliceContinous(a.shape,s,c);if(f||!d){var p=Object(o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Va(c):new qa(c),b=p.getCustomSetupFunc(s);return r.runWebGLProgram(p,[a],a.dtype,b)}return r.uploadToGPU(a.dataId),function(t,e,r,n){var a=n.texData.get(t.dataId),i=n.makeTensorInfo(r,t.dtype),u=n.texData.get(i.dataId);Object.assign(u,a),u.complexParentRefCount=0,u.refCount=1,u.shape=r,u.dtype=t.dtype;var v=o.slice_util.computeFlatOffset(e,o.util.computeStrides(t.shape));a.slice&&(v+=a.slice.flatOffset),u.slice={flatOffset:v,origDataId:a.slice&&a.slice.origDataId||t.dataId};var s=n.dataRefCount.get(u.slice.origDataId)||1;return n.dataRefCount.set(u.slice.origDataId,s+1),i}(a,s,c,r)}var Ha={kernelName:o.Slice,backendName:"webgl",kernelFunc:Za},Ja={kernelName:o.BatchToSpaceND,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.blockShape,u=n.crops;o.util.assert(a.shape.length<=4,(function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"}));var v=i.reduce((function(t,e){return t*e})),s=o.backend_util.getReshaped(a.shape,i,v),c=o.backend_util.getPermuted(s.length,i.length),P=o.backend_util.getReshapedPermuted(a.shape,i,v),l=o.backend_util.getSliceBeginCoords(u,i.length),f=o.backend_util.getSliceSize(P,u,i.length),d=[],p=Rn({inputs:{x:a},backend:r,attrs:{shape:s}}),b=Xn({inputs:{x:p},backend:r,attrs:{perm:c}}),h=Rn({inputs:{x:b},backend:r,attrs:{shape:P}}),y=Za({inputs:{x:h},backend:r,attrs:{begin:l,size:f}});return d.push(p),d.push(b),d.push(h),d.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),y}},_a={kernelName:o.Bincount,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,o=e.weights,i=n.size,u=r.readSync(a.dataId),v=r.readSync(o.dataId),s=tr(u,v,o.dtype,o.shape,i);return r.makeTensorInfo([i],o.dtype,s)}},$a=xn({opSnippet:"return float(a != b);",dtype:"bool"}),to={kernelName:o.NotEqual,backendName:"webgl",kernelFunc:$a};function eo(t){var e=t.inputs,r=t.backend,n=e.input;return fn({inputs:{x:r.texData.get(n.dataId).complexTensorInfos.real},backend:r})}var ro={kernelName:o.Real,backendName:"webgl",kernelFunc:eo},no={kernelName:o.Cast,backendName:"webgl",kernelFunc:function t(e){var r=e.inputs,n=e.backend,a=e.attrs,i=r.x,u=a.dtype;if("complex64"===u){if("complex64"===i.dtype)return fn({inputs:{x:i},backend:n});var v=o.zeros(i.shape),s=t({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),c=pn({inputs:{real:s,imag:v},backend:n});return v.dispose(),n.disposeIntermediateTensorInfo(s),c}if("complex64"===i.dtype){var P=eo({inputs:{input:i},backend:n}),l=t({inputs:{x:P},backend:n,attrs:{dtype:u}});return n.disposeIntermediateTensorInfo(P),l}if(!o.util.hasEncodingLoss(i.dtype,u)){var f=fn({inputs:{x:i},backend:n});return{dataId:f.dataId,shape:f.shape,dtype:u}}if("int32"===u)return function(t,e){var r=new Er(t.shape,"return float(int(x));"),n=e.runWebGLProgram(r,[t],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}(i,n);if("bool"===u){var d=n.makeTensorInfo([],"bool",o.util.getTypedArrayFromDType("bool",1)),p=$a({inputs:{a:i,b:d},backend:n});return n.disposeIntermediateTensorInfo(d),p}throw new Error("Error in Cast: failed to cast ".concat(i.dtype," to ").concat(u))}},ao="return ceil(x);",oo=Dn({opSnippet:ao,packedOpSnippet:ao,cpuKernelImpl:rr}),io={kernelName:o.Ceil,backendName:"webgl",kernelFunc:oo};function uo(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var vo=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}var e,r;return e=t,(r=[{key:"getCustomSetupFunc",value:function(t,e){var r=this;return function(n,a){null==r.minLoc&&(r.minLoc=n.getUniformLocationNoThrow(a,"minVal"),r.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(r.minLoc,t),n.gl.uniform1f(r.maxLoc,e)}}}])&&uo(e.prototype,r),t}();function so(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var co=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}var e,r;return e=t,(r=[{key:"getCustomSetupFunc",value:function(t,e){var r=this;return function(n,a){null==r.minLoc&&(r.minLoc=n.getUniformLocationNoThrow(a,"minVal"),r.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(r.minLoc,t),n.gl.uniform1f(r.maxLoc,e)}}}])&&so(e.prototype,r),t}(),Po={kernelName:o.ClipByValue,backendName:"webgl",kernelFunc:function(t){var e,r=t.inputs,n=t.backend,a=t.attrs,i=r.x,u=a.clipValueMin,v=a.clipValueMax,s=(e=Object(o.env)().getBool("WEBGL_PACK_CLIP")?new co(i.shape):new vo(i.shape)).getCustomSetupFunc(u,v);return n.runWebGLProgram(e,[i],i.dtype,s)}},lo=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "};function fo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}var po={kernelName:o.ComplexAbs,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=e.x,a=r.texData.get(n.dataId),o=new lo(n.shape),i=[fo(n,a.complexTensorInfos.real),fo(n,a.complexTensorInfos.imag)];return r.runWebGLProgram(o,i,i[0].dtype)}},bo=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.outputShape=[],this.outputShape=o.backend_util.computeOutShape(e,1),this.variableNames=e.map((function(t,e){return"T".concat(e)}));var r=new Array(e.length-1);r[0]=e[0][1];for(var n=1;n<r.length;n++)r[n]=r[n-1]+e[n][1];for(var a=["if (yC < ".concat(r[0],") setOutput(getT0(yR, yC));")],i=1;i<r.length;i++){var u=r[i-1];a.push("else if (yC < ".concat(r[i],") ")+"setOutput(getT".concat(i,"(yR, yC-").concat(u,"));"))}var v=r.length,s=r[r.length-1];a.push("else setOutput(getT".concat(v,"(yR, yC-").concat(s,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(a.join("\n        "),"\n      }\n    ")},ho=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=o.backend_util.computeOutShape(e,r);var n=this.outputShape,a=n.length,i=fe(a),u=wr("coords",a),v=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((function(t,e){return"T".concat(e)}));var s=new Array(e.length-1);s[0]=e[0][r];for(var c=1;c<s.length;c++)s[c]=s[c-1]+e[c][r];for(var P=v[r],l=v.slice(-2),f=v.join(),d="if (".concat(P," < ").concat(s[0],") {\n        return getChannel(\n            getT0(").concat(f,"), vec2(").concat(l.join(),"));\n        }"),p=1;p<s.length;p++){var b=s[p-1];d+="\n        if (".concat(P," < ").concat(s[p],"  && ").concat(P," >= ").concat(s[p-1],") {\n          return getChannel(\n            getT").concat(p,"(").concat(yo(v,P,b),"),\n            vec2(").concat(yo(l,P,b),"));\n        }")}var h=s.length,y=s[s.length-1];d+="\n        return getChannel(\n          getT".concat(h,"(").concat(yo(v,P,y),"),\n          vec2(").concat(yo(l,P,y),"));"),this.userCode="\n      float getValue(".concat(v.map((function(t){return"int "+t})),") {\n        ").concat(d,"\n      }\n\n      void main() {\n        ").concat(i," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(u,"), 0., 0., 0.);\n\n        ").concat(u[a-1]," = ").concat(u[a-1]," + 1;\n        if (").concat(u[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(u,");\n        }\n\n        ").concat(u[a-2]," = ").concat(u[a-2]," + 1;\n        if (").concat(u[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(u,");\n        }\n\n        ").concat(u[a-1]," = ").concat(u[a-1]," - 1;\n        if (").concat(u[a-2]," < ").concat(n[a-2]," &&\n            ").concat(u[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(u,");\n        }\n        setOutput(result);\n      }\n    ")};function yo(t,e,r){var n=t.indexOf(e);return t.map((function(t,e){return e===n?"".concat(t," - ").concat(r):t})).join()}function mo(t){var e=t.inputs,r=t.backend,n=e.input;return fn({inputs:{x:r.texData.get(n.dataId).complexTensorInfos.imag},backend:r})}var go={kernelName:o.Imag,backendName:"webgl",kernelFunc:mo};function To(t,e,r){var n=o.backend_util.computeOutShape(t.map((function(t){return t.shape})),e);return{tensors2D:t.map((function(t){return Rn({inputs:{x:t},attrs:{shape:[-1,o.util.sizeFromShape(t.shape.slice(e))]},backend:r})})),outShape:n}}function jo(t){var e=t.inputs,r=t.backend,n=t.attrs.axis,a=o.util.parseAxisParam(n,e[0].shape)[0],i=o.backend_util.computeOutShape(e.map((function(t){return t.shape})),a);if(0===o.util.sizeFromShape(i))return r.makeTensorInfo(i,e[0].dtype,[]);var u=e.filter((function(t){return o.util.sizeFromShape(t.shape)>0}));if(1===u.length)return fn({inputs:{x:u[0]},backend:r});var v=u.map((function(t){return t.shape}));return o.backend_util.assertParamsConsistent(v,a),function t(e,r,n){var a=e[0].dtype;if("complex64"===a){var i=e.map((function(t){return eo({inputs:{input:t},backend:n})})),u=e.map((function(t){return mo({inputs:{input:t},backend:n})})),v=t(i,r,n),s=t(u,r,n),c=pn({inputs:{real:v,imag:s},backend:n});return i.forEach((function(t){return n.disposeIntermediateTensorInfo(t)})),u.forEach((function(t){return n.disposeIntermediateTensorInfo(t)})),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(s),c}if("string"===a){var P=To(e,r,n),l=P.tensors2D,f=P.outShape,d=function(t,e,r,n){var a=o.util.getArrayFromDType(r,o.util.sizeFromShape(e));if(n&&"string"!==r){var i=0;t.forEach((function(t){var e=o.util.sizeFromShape(t.shape);a.set(t.vals,i),i+=e}))}else{var u=0;t.forEach((function(t){for(var n="string"===r?o.backend_util.fromUint8ToStringArray(t.vals):t.vals,i=0,v=0;v<t.shape[0];++v)for(var s=v*e[1]+u,c=0;c<t.shape[1];++c)a[s+c]=n[i++];u+=t.shape[1]}))}return a}(l.map((function(t){return{vals:n.readSync(t.dataId),shape:t.shape}})),f,a,1===l[0].shape[0]),p=o.backend_util.computeOutShape(e.map((function(t){return t.shape})),r),b=n.makeTensorInfo(p,a,d);return l.forEach((function(t){return n.disposeIntermediateTensorInfo(t)})),b}if(e.length>Object(o.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var h=Math.floor(e.length/2),y=t(e.slice(0,h),r,n),m=t(e.slice(h),r,n),g=t([y,m],r,n);return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),g}if(Object(o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){var T=new ho(e.map((function(t){return t.shape})),r);return n.runWebGLProgram(T,e,a)}var j=To(e,r,n),z=j.tensors2D,w=j.outShape,D=new bo(z.map((function(t){return t.shape}))),x=n.runWebGLProgram(D,z,a);z.forEach((function(t){return n.disposeIntermediateTensorInfo(t)}));var O=Rn({inputs:{x:x},attrs:{shape:w},backend:n});return n.disposeIntermediateTensorInfo(x),O}(u,a,r)}var zo={kernelName:o.Concat,backendName:"webgl",kernelFunc:jo};function wo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Do=function t(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];wo(this,t),this.variableNames=["x","W"],this.outputShape=e.outShape;var i=e.padInfo.top,u=e.padInfo.left,v=e.strideHeight,s=e.strideWidth,c=e.dilationHeight,P=e.dilationWidth,l=e.filterHeight,f=e.filterWidth,d=4*Math.floor(e.inChannels/4),p=e.inChannels%4,b="channelsLast"===e.dataFormat,h=b?1:2,y=b?2:3,m=b?3:1,g="",T="";n&&(g=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):o?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),T="result = activation(result);");var j=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(g,"\n\n      const ivec2 strides = ivec2(").concat(v,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(i,", ").concat(u,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(m,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(h,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(l,"; wR++) {\n          int xR = xRCorner + wR * ").concat(c,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(f,"; wC++) {\n            int xC = xCCorner + wC * ").concat(P,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(d,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(b,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===p,") {\n\n              if (").concat(b,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(d,") *\n                    getW(wR, wC, ").concat(d,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(d,", xR, xC) *\n                    getW(wR, wC, ").concat(d,", d2);\n              }\n\n            } else if (").concat(2===p,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(d,", d2),\n                getW(wR, wC, ").concat(d," + 1, d2)\n              );\n\n              if (").concat(b,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(d,"),\n                  getX(batch, xR, xC, ").concat(d," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(d,", xR, xC),\n                  getX(batch, ").concat(d," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===p,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(d,", d2),\n                getW(wR, wC, ").concat(d," + 1, d2),\n                getW(wR, wC, ").concat(d," + 2, d2)\n              );\n\n              if (").concat(b,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(d,"),\n                  getX(batch, xR, xC, ").concat(d," + 1),\n                  getX(batch, xR, xC, ").concat(d," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(d,", xR, xC),\n                  getX(batch, ").concat(d," + 1, xR, xC),\n                  getX(batch, ").concat(d," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(j,"\n        ").concat(T,"\n        setOutput(result);\n      }\n    ")},xo=function t(e){wo(this,t),this.variableNames=["x","W"],this.outputShape=e.outShape;var r=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,v=e.dilationDepth,s=e.dilationHeight,c=e.dilationWidth,P=e.filterDepth,l=e.filterHeight,f=e.filterWidth,d=4*Math.floor(e.inChannels/4),p=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(o,", ").concat(i,", ").concat(u,");\n      const ivec3 pads = ivec3(").concat(r,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(P,"; wF++) {\n          int xF = xFCorner + wF * ").concat(v,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(l,"; wR++) {\n            int xR = xRCorner + wR * ").concat(s,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(f,"; wC++) {\n              int xC = xCCorner + wC * ").concat(c,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(d,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===p,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(d,") *\n                  getW(wF, wR, wC, ").concat(d,", d2);\n              } else if (").concat(2===p,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(d,"),\n                  getX(batch, xF, xR, xC, ").concat(d," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(d,", d2),\n                  getW(wF, wR, wC, ").concat(d," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===p,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(d,"),\n                  getX(batch, xF, xR, xC, ").concat(d," + 1),\n                  getX(batch, xF, xR, xC, ").concat(d," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(d,", d2),\n                  getW(wF, wR, wC, ").concat(d," + 1, d2),\n                  getW(wF, wR, wC, ").concat(d," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Oo=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var a=n.filterWidth,o=n.inChannels,i=n.strideWidth,u=n.strideHeight,v=n.padInfo,s=n.outWidth,c=n.dilationWidth,P=n.dilationHeight,l=n.dataFormat,f=v.left,d=v.top,p=o*a,b=Object(ct.a)(),h="channelsLast"===l,y=h?0:1,m=h?1:2,g="",T=0;T<=1;T++)for(var j=0;j<=1;j++)g+="\n          blockIndex = rc.y + ".concat(j,";\n          pos = rc.x + ").concat(T,";\n\n          if(blockIndex < ").concat(e[1]," && pos < ").concat(e[0],") {\n            offsetY = int(blockIndex / (").concat(s,")) * ").concat(u," - ").concat(d,";\n            d0 = offsetY + ").concat(P," * (pos / ").concat(p,");\n\n            if(d0 < ").concat(r[y]," && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ").concat(s,".) * ").concat(i,". - ").concat(f,".);\n              d1 = offsetX + ").concat(c," * (int(mod(float(pos), ").concat(p,".) / ").concat(o,".));\n\n              if(d1 < ").concat(r[m]," && d1 >= 0) {\n\n                ch = int(mod(float(pos), ").concat(o,".));\n\n                if (").concat(h,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*T+j,"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*T+j,"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(g,"\n\n        ").concat(b.output," = result;\n      }\n    ")};function Lo(t){var e,r=t.x,n=t.filter,a=t.convInfo,i=t.backend,u=t.bias,v=void 0===u?null:u,s=t.preluActivationWeights,c=void 0===s?null:s,P=t.leakyreluAlpha,l=void 0===P?0:P,f=t.activation,d=void 0===f?null:f,p=r.shape,b=i.texData.get(r.dataId),h=a.inChannels,y=p[0]*p[1]*p[2],m=a.outChannels,g="channelsLast"===a.dataFormat,T=[],j=(1===y||1===m)&&h>1e3,z=p[2]%2!=0&&!!b.isPacked;if(!j&&Object(o.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&z){var w=g?p[0]*p[1]*(p[2]+1):p[0]*p[2]*(p[3]+1),D={dataId:r.dataId,shape:[1,w,a.inChannels],dtype:r.dtype},x=b.shape;b.shape=b.shape.slice(),b.shape[b.shape.length-2]++,o.util.assert(H(b.shape,D.shape),(function(){return"packed reshape ".concat(b.shape," to ").concat(D.shape," isn't free")}));var O=Rn({inputs:{x:n},backend:i,attrs:{shape:[1,a.inChannels,a.outChannels]}});T.push(O);var L=Hn({a:D,b:O,backend:i,transposeA:!1,transposeB:!1,bias:v,activation:d,preluActivationWeights:c,leakyreluAlpha:l}),S=i.texData.get(L.dataId);o.util.assert(S.isPacked,(function(){return"batchMatMul result is expected to be packed"})),b.shape=x,S.shape=a.outShape,(e=fn({inputs:{x:L},backend:i})).shape=a.outShape,T.push(L)}else{var A=Rn({inputs:{x:r},backend:i,attrs:{shape:[1,g?p[0]*p[1]*p[2]:p[0]*p[2]*p[3],a.inChannels]}}),k=Rn({inputs:{x:n},backend:i,attrs:{shape:[1,a.inChannels,a.outChannels]}}),C=Hn({a:A,b:k,transposeA:!1,transposeB:!1,backend:i,bias:v,activation:d,preluActivationWeights:c,leakyreluAlpha:l});e=Rn({inputs:{x:C},backend:i,attrs:{shape:a.outShape}}),T.push(A),T.push(k),T.push(C)}for(var I=0,E=T;I<E.length;I++){var M=E[I];i.disposeIntermediateTensorInfo(M)}return e}function So(t){var e=t.x,r=t.filter,n=t.convInfo,a=t.backend,i=t.bias,u=void 0===i?null:i,v=t.preluActivationWeights,s=void 0===v?null:v,c=t.leakyreluAlpha,P=void 0===c?0:c,l=t.activation,f=void 0===l?null:l,d=n.filterWidth,p=n.filterHeight,b=n.inChannels,h=n.outWidth,y=n.outHeight,m="channelsLast"===n.dataFormat,g=d*p*b,T=y*h,j=[g,T],z=[],w=Rn({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),D=Rn({inputs:{x:r},backend:a,attrs:{shape:[1,g,o.util.sizeFromShape(r.shape)/g]}});z.push(w),z.push(D);var x=new Oo(j,w.shape,n),O=a.runWebGLProgram(x,[w],"float32"),L=Rn({inputs:{x:O},backend:a,attrs:{shape:[1,j[0],j[1]]}});z.push(O),z.push(L);var S=null!=u,A=null!=s,k="leakyrelu"===f,C=f?On(f,!0):null,I=new Sn(L.shape,D.shape,[1,T,n.outChannels],!0,!1,S,C,A,k),E=[L,D];if(u&&E.push(u),A&&E.push(s),k){var M=a.makeTensorInfo([],"float32",o.util.createScalarValue(P,"float32"));E.push(M),z.push(M)}var U=a.runWebGLProgram(I,E,"float32"),R=Rn({inputs:{x:U},backend:a,attrs:{shape:m?[1,y,h,n.outChannels]:[1,n.outChannels,y,h]}});z.push(U);for(var W=0,Q=z;W<Q.length;W++){var Y=Q[W];a.disposeIntermediateTensorInfo(Y)}return R}var Ao={kernelName:o.Conv2D,backendName:"webgl",kernelFunc:function(t){var e,r=t.inputs,n=t.backend,a=t.attrs,i=r.x,u=r.filter,v=a.strides,s=a.pad,c=a.dataFormat,P=a.dilations,l=a.dimRoundingMode,f=o.backend_util.convertConv2DDataFormat(c),d=o.backend_util.computeConv2DInfo(i.shape,u.shape,v,P,s,l,!1,f);if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(Object(o.env)().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])e=So({x:i,filter:u,convInfo:d,backend:n});else{var p=new Do(d);e=n.runWebGLProgram(p,[i,u],"float32")}else e=Lo({x:i,filter:u,convInfo:d,backend:n});var b=Rn({inputs:{x:e},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(e),b}};function ko(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Co=function t(e){ko(this,t),this.variableNames=["x","dy"],this.outputShape=e.filterShape;var r=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,o=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(r," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(o,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              if (").concat(i,") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Io=function t(e){ko(this,t),this.variableNames=["dy","W"],this.outputShape=e.inShape;var r=e.filterHeight,n=e.filterWidth,a=e.strideHeight,o=e.strideWidth,i="channelsLast"===e.dataFormat,u=r-1-e.padInfo.top,v=n-1-e.padInfo.left,s=i?1:2,c=i?2:3,P=i?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(u,", ").concat(v,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(P,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(s,"], coords[").concat(c,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(r," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(i,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Eo=function t(e){ko(this,t),this.variableNames=["x","dy"],this.outputShape=e.filterShape;var r=e.strideDepth,n=e.strideHeight,a=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,u=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(r," - ").concat(o,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(i,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(u,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Mo=function t(e){ko(this,t),this.variableNames=["dy","W"],this.outputShape=e.inShape;var r=e.filterDepth,n=e.filterHeight,a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,v=r-1-e.padInfo.front,s=n-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(v,", ").concat(s,", ").concat(c,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(r,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(o,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(r," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(i,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(u,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Uo={kernelName:o.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.dy,u=n.strides,v=n.pad,s=n.dataFormat,c=n.dimRoundingMode,P=n.filterShape,l=o.backend_util.convertConv2DDataFormat(s),f=o.backend_util.computeConv2DInfo(a.shape,P,u,1,v,c,!1,l),d=new Co(f);return r.runWebGLProgram(d,[a,i],"float32")}},Ro={kernelName:o.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.dy,i=e.filter,u=n.inputShape,v=n.strides,s=n.pad,c=n.dataFormat,P=n.dimRoundingMode,l=o.backend_util.convertConv2DDataFormat(c),f=o.backend_util.computeConv2DInfo(u,i.shape,v,1,s,P,!1,l),d=new Io(f);return r.runWebGLProgram(d,[a,i],"float32")}},Wo={kernelName:o.Conv3D,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.filter,u=n.strides,v=n.pad,s=n.dilations,c=o.backend_util.computeConv3DInfo(a.shape,i.shape,u,s,v),P=new xo(c);return r.runWebGLProgram(P,[a,i],"float32")}},Qo={kernelName:o.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.dy,u=n.strides,v=n.pad,s=n.filterShape,c=o.backend_util.computeConv3DInfo(a.shape,s,u,1,v),P=new Eo(c);return r.runWebGLProgram(P,[a,i],"float32")}},Yo={kernelName:o.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.dy,i=e.filter,u=n.pad,v=n.strides,s=n.inputShape,c=o.backend_util.computeConv3DInfo(s,i.shape,v,1,u),P=new Mo(c);return r.runWebGLProgram(P,[a,i],"float32")}},Go=Dn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Fo={kernelName:o.Cos,backendName:"webgl",kernelFunc:Go},No=Dn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),qo={kernelName:o.Cosh,backendName:"webgl",kernelFunc:No};function Ko(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Bo(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Bo(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Bo(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Vo=function t(e,r,n,a,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var i=Ko(e,4),u=i[0],v=i[1],s=i[2],c=i[3],P=Ko(r,1)[0],l=Ko(n,2),f=l[0],d=l[1];this.outputShape=[P,f,d,c];var p="bilinear"===a?1:0,b="".concat(v-1,".0"),h="".concat(s-1,".0"),y=Ko(f>1?["".concat((v-1)/(f-1)),"(y2-y1) * height_ratio","y1*".concat(b," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(b)],3),m=y[0],g=y[1],T=y[2],j=Ko(d>1?["".concat((s-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(h," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(h)],3),z=j[0],w=j[1],D=j[2];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(z,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(u,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(w,";\n\n        float in_y = ").concat(T,";\n        if( in_y < 0.0 || in_y > ").concat(b," ) {\n          setOutput(float(").concat(o,"));\n          return;\n        }\n        float in_x = ").concat(D,";\n        if( in_x < 0.0 || in_x > ").concat(h," ) {\n          setOutput(float(").concat(o,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(p," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")},Xo={kernelName:o.CropAndResize,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.image,o=e.boxes,i=e.boxInd,u=n.cropSize,v=n.method,s=n.extrapolationValue,c=new Vo(a.shape,o.shape,u,v,s);return r.runWebGLProgram(c,[a,o,i],"float32")}};function Zo(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Ho=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.outputShape=e;var a=e.length,o=r?"0.0":"getX(".concat(Jo(a,"coords"),")"),i=e[e.length-1],u="",v="";r?(u=n?"end != ".concat(i-1):"end != 0",v=n?"end + 1":"end - 1"):(u=n?"end + pow2 < ".concat(i):"end >= pow2",v=n?"end + pow2":"end - pow2"),this.userCode="\n      uniform float index;\n      void main() {\n        ".concat(fe(a)," coords = getOutputCoords();\n        int end = ").concat(_o(a,"coords"),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(u,") {\n          int idx = ").concat(v,";\n          ").concat(_o(a,"coords")," = idx;\n          val += getX(").concat(Jo(a,"coords"),");\n        }\n        setOutput(val);\n      }\n    ")}var e,r;return e=t,(r=[{key:"getCustomSetupFunc",value:function(t){var e=this;return function(r,n){null==e.index&&(e.index=r.getUniformLocation(n,"index")),r.gl.uniform1f(e.index,t)}}}])&&Zo(e.prototype,r),t}();function Jo(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}function _o(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}var $o={kernelName:o.Cumsum,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.axis,u=n.exclusive,v=n.reverse,s=a.shape.length,c=o.backend_util.getAxesPermutation([i],s),P=a;null!=c&&(P=Xn({inputs:{x:a},backend:r,attrs:{perm:c}}));var l=o.backend_util.getInnerMostAxes(1,s)[0];if(l!==s-1)throw new Error("WebGL cumsum shader expects an inner-most axis=".concat(a.shape.length-1," ")+"but got axis=".concat(i));for(var f=P.shape[l],d=fn({inputs:{x:P},backend:r}),p=0;p<=Math.ceil(Math.log2(f))-1;p++){var b=new Ho(P.shape,!1,v),h=b.getCustomSetupFunc(p),y=d;d=r.runWebGLProgram(b,[d],d.dtype,h),r.disposeIntermediateTensorInfo(y)}if(u){var m=new Ho(P.shape,u,v),g=d;d=r.runWebGLProgram(m,[d],d.dtype),r.disposeIntermediateTensorInfo(g)}if(null!=c){var T=Xn({inputs:{x:d},backend:r,attrs:{perm:o.backend_util.getUndoAxesPermutation(c)}});return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(P),T}return d}},ti={kernelName:o.DenseBincount,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,o=e.weights,i=n.size,u=n.binaryOutput;if(1===a.shape.length){var v=r.readSync(a.dataId),s=r.readSync(o.dataId),c=tr(v,s,o.dtype,o.shape,i);return r.makeTensorInfo([i],o.dtype,c)}if(2===a.shape.length){var P=r.bufferSync(a),l=r.bufferSync(o),f=er(P,l,i,u);return r.makeTensorInfo(f.shape,o.dtype,f.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};function ei(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var ri=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=r,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(r,";\n      int offset_h = imod(h, ").concat(r,");\n      int in_w = w / ").concat(r,";\n      int offset_w = imod(w, ").concat(r,");\n      int offset_d = (offset_h * ").concat(r," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}var e,r;return e=t,(r=[{key:"getHeightCoordString",value:function(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}},{key:"getWidthCoordString",value:function(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}},{key:"getDepthCoordString",value:function(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}},{key:"getOutputDepthSize",value:function(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}},{key:"getInputSamplingString",value:function(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}])&&ei(e.prototype,r),t}(),ni={kernelName:o.DepthToSpace,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.blockSize,u=n.dataFormat;o.util.assert(i>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: ".concat(i)}));var v=a.shape[0],s="NHWC"===u?a.shape[1]:a.shape[2],c="NHWC"===u?a.shape[2]:a.shape[3],P="NHWC"===u?a.shape[3]:a.shape[1],l=s*i,f=c*i,d=P/(i*i),p=new ri("NHWC"===u?[v,l,f,d]:[v,d,l,f],i,u);return r.runWebGLProgram(p,[a],a.dtype)}};function ai(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var oi=function t(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];ai(this,t),this.variableNames=["x","W"],this.outputShape=e.outShape;var i=e.inHeight,u=e.inWidth,v=e.padInfo.top,s=e.padInfo.left,c=e.strideHeight,P=e.strideWidth,l=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,b=e.outChannels/e.inChannels,h="",y="";n&&(h=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):o?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),y="result = activation(result);");var m=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(h,"\n\n      const ivec2 strides = ivec2(").concat(c,", ").concat(P,");\n      const ivec2 pads = ivec2(").concat(v,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(b,";\n        int q = d2 - d1 * ").concat(b,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(i,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(p,"; wC++) {\n            int xC = xCCorner + wC * ").concat(f,";\n\n            if (xC < 0 || xC >= ").concat(u,") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(m,"\n        ").concat(y,"\n        setOutput(result);\n      }\n    ")};function ii(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var ui=function t(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];ii(this,t),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;for(var u=e.inHeight,v=e.inWidth,s=e.padInfo.top,c=e.padInfo.left,P=e.strideHeight,l=e.strideWidth,f=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,b=e.filterWidth,h=b,y="int xR; int xC; int xCOffset;",m=0;m<p;m++)for(var g=0;g<b;g++)y+="\n          vec4 xTexelR".concat(m,"C").concat(2*g," = vec4(0.);\n          vec4 wR").concat(m,"C").concat(g," = vec4(0.);\n          vec4 xR").concat(m,"C").concat(g," = vec4(0.);");for(var T=0;T<p;T++)for(var j=0;j<h;j++){var z=2*j;if(y+="\n          xR = xRCorner + ".concat(T*f,";\n          xC = xCCorner + ").concat(z*d,";\n        "),1===l){if(z<b&&(y+=c%2==1?"\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ".concat(u," && xCOffset >= 0 && xCOffset < ").concat(v,") {\n                  xTexelR").concat(T,"C").concat(z," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(v,") {\n                    xTexelR").concat(T,"C").concat(z,".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR").concat(T,"C").concat(z," = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ").concat(u," && xCOffset >= 0 && xCOffset < ").concat(v,") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(v,") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR").concat(T,"C").concat(z," = vec4(previous.zw, xTexelR").concat(T,"C").concat(z,".xy);\n                } else {\n                  xR").concat(T,"C").concat(z," = vec4(0, 0, xTexelR").concat(T,"C").concat(z,".xy);\n                }\n              "):"\n                if(xR >= 0 && xR < ".concat(u," && xC >= 0 && xC < ").concat(v,") {\n                  xTexelR").concat(T,"C").concat(z," = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(T,"C").concat(z," = vec4(0.);\n                }\n\n                xR").concat(T,"C").concat(z," = xTexelR").concat(T,"C").concat(z,";\n              "),z+1<b)){var w=c%2==0?o.util.nearestLargerEven(d):d;d%2==0&&c%2==1||d%2!=0&&c%2!=1?(y+="\n                  xCOffset = xC + ".concat(c%2," + ").concat(w,";\n\n                  if(xR >= 0 && xR < ").concat(u," &&\n                    xCOffset >= 0 && xCOffset < ").concat(v,") {\n                    xTexelR").concat(T,"C").concat(z+2," = getX(batch, xR, xCOffset, d1);\n                  }\n                "),d>1&&(y+="\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ".concat(u," &&\n                      xCOffset >= 0 && xCOffset < ").concat(v,") {\n                      xTexelR").concat(T,"C").concat(z," = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR").concat(T,"C").concat(z," = vec4(0.);\n                    }\n                  ")),y+="\n                  xR".concat(T,"C").concat(z+1," = vec4(\n                    xTexelR").concat(T,"C").concat(z,".zw, xTexelR").concat(T,"C").concat(z+2,".xy);\n                ")):y+="\n                  xCOffset = xC + ".concat(w,";\n\n                  if(xR >= 0 && xR < ").concat(u," &&\n                    xCOffset >= 0 && xCOffset < ").concat(v,") {\n                    xTexelR").concat(T,"C").concat(z+2," = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR").concat(T,"C").concat(z+1," = xTexelR").concat(T,"C").concat(z+2,";\n                ")}}else z<b&&(y+="\n              if(xR >= 0 && xR < ".concat(u,") {\n            "),c%2==1?(y+="\n                xCOffset = xC + 1 - ".concat(l,";\n                if(xCOffset >= 0 && xCOffset < ").concat(v,") {\n                  xTexelR").concat(T,"C").concat(z," = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(T,"C").concat(z," = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ").concat(v,") {\n                  xTexelR").concat(T,"C").concat(z+2," = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR").concat(T,"C").concat(z+2," = vec4(0.);\n                }\n\n                xR").concat(T,"C").concat(z," = vec4(\n                  xTexelR").concat(T,"C").concat(z,".zw, xTexelR").concat(T,"C").concat(z+2,".zw);\n              "),z+1<b&&(y+="\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ".concat(l,";\n                  if(xCOffset >= 0 && xCOffset < ").concat(v,") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR").concat(T,"C").concat(z+1," = vec4(xTexelR").concat(T,"C").concat(z+2,".xy, final.xy);\n                "))):(y+="\n                if(xC >= 0 && xC < ".concat(v,") {\n                  xTexelR").concat(T,"C").concat(z," = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(T,"C").concat(z," = vec4(0.);\n                }\n\n                xCOffset = xC + ").concat(l,";\n                if(xCOffset >= 0 && xCOffset < ").concat(v,") {\n                  xTexelR").concat(T,"C").concat(z+2," = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(T,"C").concat(z+2," = vec4(0.);\n                }\n\n                xR").concat(T,"C").concat(z," = vec4(\n                  xTexelR").concat(T,"C").concat(z,".xy, xTexelR").concat(T,"C").concat(z+2,".xy);\n              "),z+1<b&&(y+="\n                  xR".concat(T,"C").concat(z+1," = vec4(\n                    xTexelR").concat(T,"C").concat(z,".zw, xTexelR").concat(T,"C").concat(z+2,".zw);\n                "))),y+="}");z<b&&(y+="\n            vec4 wTexelR".concat(T,"C").concat(z," = getW(").concat(T,", ").concat(z,", d1, q);\n            wR").concat(T,"C").concat(z," = vec4(wTexelR").concat(T,"C").concat(z,".xz, wTexelR").concat(T,"C").concat(z,".xz);\n          "),z+1<b&&(y+="\n              vec4 wTexelR".concat(T,"C").concat(z+1," = getW(").concat(T,", ").concat(z+1,", d1, q);\n              wR").concat(T,"C").concat(z+1," =\n                vec4(wTexelR").concat(T,"C").concat(z+1,".xz, wTexelR").concat(T,"C").concat(z+1,".xz);")))}for(var D=0;D<p;D++)for(var x=0;x<b;x++)y+="dotProd += xR".concat(D,"C").concat(x," * wR").concat(D,"C").concat(x,";");var O="",L="";n&&(O=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):i?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),L="result = activation(result);");var S=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(O,"\n\n      const ivec2 strides = ivec2(").concat(P,", ").concat(l,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(c,");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ").concat(y,"\n\n        vec4 result = dotProd;\n        ").concat(S,"\n        ").concat(L,"\n        setOutput(result);\n      }\n    ")},vi={kernelName:o.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.filter,u=n.strides,v=n.pad,s=n.dilations,c=n.dimRoundingMode,P=s;null==P&&(P=[1,1]),o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(u,P),(function(){return"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(u," and dilations '").concat(P,"'")}));var l,f=o.backend_util.computeConv2DInfo(a.shape,i.shape,u,P,v,c,!0);return l=Object(o.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&f.strideWidth<=2&&f.outChannels/f.inChannels==1?new ui(f):new oi(f),r.runWebGLProgram(l,[a,i],"float32")}};function si(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var ci=function t(e){si(this,t),this.variableNames=["x","dy"],this.outputShape=e.filterShape;var r=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(i," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(r," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(o,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Pi=function t(e){si(this,t),this.variableNames=["dy","W"],this.outputShape=e.inShape;var r=e.filterHeight,n=e.filterWidth,a=e.strideHeight,o=e.strideWidth,i=r-1-e.padInfo.top,u=n-1-e.padInfo.left,v=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(i,", ").concat(u,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(r,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(r," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(v,"; dm++) {\n              int d2 = d1 * ").concat(v," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},li={kernelName:o.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.dy,u=n.strides,v=n.dilations,s=n.pad,c=n.dimRoundingMode,P=n.filterShape,l=o.backend_util.computeConv2DInfo(a.shape,P,u,v,s,c,!0),f=new ci(l);return r.runWebGLProgram(f,[a,i],"float32")}},fi={kernelName:o.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.dy,i=e.filter,u=n.strides,v=n.dilations,s=n.pad,c=n.dimRoundingMode,P=n.inputShape,l=o.backend_util.computeConv2DInfo(P,i.shape,u,v,s,c,!0),f=new Pi(l);return r.runWebGLProgram(f,[a,i],"float32")}},di=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "};function pi(t){return function(t){if(Array.isArray(t))return bi(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return bi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?bi(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function bi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var hi={kernelName:o.Diag,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=e.x,a=[].concat(pi(n.shape),pi(n.shape)),i=o.util.sizeFromShape(n.shape),u=Rn({inputs:{x:n},backend:r,attrs:{shape:[i]}}),v=new di(i),s=r.runWebGLProgram(v,[u],u.dtype),c=Rn({inputs:{x:s},backend:r,attrs:{shape:a}});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(s),c}},yi=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x","W"],this.outputShape=e.outShape;var r=e.inHeight,n=e.inWidth,a=e.padInfo,o=e.strideHeight,i=e.strideWidth,u=e.filterHeight,v=e.filterWidth,s=e.dilationHeight,c=e.dilationWidth,P=a.top,l=a.left;this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(P,", ").concat(l,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(u,"; h++) {\n          int hIn = hBeg + h * ").concat(s,";\n\n          if (hIn >= 0 && hIn < ").concat(r,") {\n            for (int w = 0; w < ").concat(v,"; w++) {\n              int wIn = wBeg + w * ").concat(c,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")},mi={kernelName:o.Dilation2D,backendName:"webgl",kernelFunc:function(t){var e,r=t.inputs,n=t.backend,a=t.attrs,i=r.x,u=r.filter,v=a.strides,s=a.pad,c=a.dilations,P=o.backend_util.computeDilation2DInfo(i.shape,u.shape,v,s,"NHWC",c),l=new yi(P),f=Rn({inputs:{x:e=n.runWebGLProgram(l,[i,u],"float32")},backend:n,attrs:{shape:P.outShape}});return n.disposeIntermediateTensorInfo(e),f}},gi=Dn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ti={kernelName:o.Elu,backendName:"webgl",kernelFunc:gi},ji={kernelName:o.EluGrad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=e.dy,a=e.y,i=Object(o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ln("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",n.shape,a.shape):new cn("return (b >= 1.0) ? a : a * (b + 1.0);",n.shape,a.shape);return r.runWebGLProgram(i,[n,a],n.dtype)}},zi=xn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),wi={kernelName:o.Equal,backendName:"webgl",kernelFunc:zi},Di=Dn({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(o.backend_util.ERF_P,";\n  float a1 = ").concat(o.backend_util.ERF_A1,";\n  float a2 = ").concat(o.backend_util.ERF_A2,";\n  float a3 = ").concat(o.backend_util.ERF_A3,";\n  float a4 = ").concat(o.backend_util.ERF_A4,";\n  float a5 = ").concat(o.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),xi={kernelName:o.Erf,backendName:"webgl",kernelFunc:Di},Oi="return exp(x);",Li=Dn({opSnippet:Oi,packedOpSnippet:Oi,cpuKernelImpl:nr}),Si={kernelName:o.Exp,backendName:"webgl",kernelFunc:Li};function Ai(t){var e=t.inputs,r=t.attrs,n=t.backend,a=r.dim,i=e.input,u=i.shape.length,v=i.shape.slice(),s=a;return a<0&&(o.util.assert(-(u+1)<=a,(function(){return"Axis must be in the interval [".concat(-(u+1),", ").concat(u,"]")})),s=u+a+1),v.splice(s,0,1),Rn({inputs:{x:i},backend:n,attrs:{shape:v}})}var ki={kernelName:o.ExpandDims,backendName:"webgl",kernelFunc:Ai},Ci="return exp(x) - 1.0;",Ii=Dn({opSnippet:Ci,packedOpSnippet:Ci,cpuKernelImpl:ar}),Ei={kernelName:o.Expm1,backendName:"webgl",kernelFunc:Ii},Mi=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["real","imag"];var a=r[1];this.outputShape=r;var o,i=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),u=n?"".concat(a,".0"):"1.0";if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(i,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(u,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")};function Ui(t,e,r){var n=r.texData.get(t.dataId),a=o.util.sizeFromShape(t.shape),i=t.shape[t.shape.length-1],u=Rn({inputs:{x:t},backend:r,attrs:{shape:[a/i,i]}}),v=u.shape,s=new Mi("real",v,e),c=new Mi("imag",v,e),P=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:v},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:v}],l=r.runWebGLProgram(s,P,"float32"),f=r.runWebGLProgram(c,P,"float32"),d=pn({inputs:{real:l,imag:f},backend:r});r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(f);var p=Rn({inputs:{x:d},backend:r,attrs:{shape:t.shape}});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(d),p}var Ri={kernelName:o.FFT,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend;return Ui(e.input,!1,r)}};function Wi(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Qi=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}var e,r;return e=t,(r=[{key:"getCustomSetupFunc",value:function(t){var e=this;return function(r,n){null==e.valueLoc&&(e.valueLoc=r.getUniformLocationNoThrow(n,"value")),r.gl.uniform1f(e.valueLoc,t)}}}])&&Wi(e.prototype,r),t}();function Yi(t){var e=t.backend,r=t.attrs,n=r.shape,a=r.value,i=r.dtype;if("string"===(i=i||o.util.inferDtype(a))){var u=o.util.getArrayFromDType(i,o.util.sizeFromShape(n));return u.fill(a),e.makeTensorInfo(n,i,u)}var v=new Qi(n,a),s=v.getCustomSetupFunc(a);return e.runWebGLProgram(v,[],i,s)}var Gi={kernelName:o.Fill,backendName:"webgl",kernelFunc:Yi},Fi=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["Image"],this.outputShape=[];var r=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(r," - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(r,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")},Ni={kernelName:o.FlipLeftRight,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=e.image,a=r,o=new Fi(n.shape);return a.runWebGLProgram(o,[n],n.dtype)}},qi="return floor(x);",Ki=Dn({opSnippet:qi,packedOpSnippet:qi,cpuKernelImpl:or}),Bi={kernelName:o.Floor,backendName:"webgl",kernelFunc:Ki},Vi=xn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Xi={kernelName:o.FloorDiv,backendName:"webgl",kernelFunc:Vi};function Zi(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Hi=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"];var r=Object(ct.a)(),n=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Zi(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Zi(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),a=n[0],o=n[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(o,".0, ").concat(a,".0);\n\n        vec4 values = ").concat(r.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")},Ji=r(277);function _i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var $i,tu={kernelName:o.FromPixels,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.pixels,i=n.numChannels,u="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,v="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,s="undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap,P=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return _i(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_i(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(u?[a.videoWidth,a.videoHeight]:[a.width,a.height],2),l=P[0],f=P[1],d=[f,l],p=[f,l,i];(v||u||s)&&(null==$i&&($i=document.createElement("canvas").getContext("2d")),$i.canvas.width=l,$i.canvas.height=f,$i.drawImage(a,0,0,l,f),a=$i.canvas);var b=r.makeTensorInfo(d,"int32");r.texData.get(b.dataId).usage=c.TextureUsage.PIXELS,r.gpgpu.uploadPixelDataToTexture(r.getTexture(b.dataId),a);var h=Object(o.env)().getBool("WEBGL_PACK")?new Ji.FromPixelsPackedProgram(p):new Hi(p),y=r.runWebGLProgram(h,[b],"int32");return r.disposeData(b.dataId),y}},eu={kernelName:o.FusedConv2D,backendName:"webgl",kernelFunc:function(t){var e,r=t.inputs,n=t.backend,a=t.attrs,i=r.x,u=r.filter,v=r.bias,s=r.preluActivationWeights,c=a.strides,P=a.pad,l=a.dataFormat,f=a.dilations,d=a.dimRoundingMode,p=a.activation,b=a.leakyreluAlpha,h=o.backend_util.convertConv2DDataFormat(l),y=o.backend_util.computeConv2DInfo(i.shape,u.shape,c,f,P,d,!1,h),m=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(Object(o.env)().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])e=So({x:i,filter:u,convInfo:y,backend:n,bias:v,activation:p,preluActivationWeights:s,leakyreluAlpha:b});else{var g=null!=v,T=null!=s,j="leakyrelu"===p,z=p?On(p,!1):null,w=new Do(y,g,z,T,j),D=[i,u];if(v&&D.push(v),s&&D.push(s),j){var x=n.makeTensorInfo([],"float32",o.util.createScalarValue(b,"float32"));D.push(x),m.push(x)}e=n.runWebGLProgram(w,D,"float32")}else e=Lo({x:i,filter:u,convInfo:y,backend:n,bias:v,activation:p,preluActivationWeights:s,leakyreluAlpha:b});var O=Rn({inputs:{x:e},backend:n,attrs:{shape:y.outShape}});return m.push(e),m.forEach((function(t){return n.disposeIntermediateTensorInfo(t)})),O}},ru={kernelName:o.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.filter,u=e.bias,v=e.preluActivationWeights,s=n.strides,c=n.pad,P=n.dilations,l=n.dimRoundingMode,f=n.activation,d=n.leakyreluAlpha,p=[],b=P;null==b&&(b=[1,1]),o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(s,b),(function(){return"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(s," and dilations '").concat(b,"'")}));var h,y=o.backend_util.computeConv2DInfo(a.shape,i.shape,s,b,c,l,!0),m=Object(o.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,g=f?On(f,m):null,T=[a,i],j=null!=u,z=null!=v,w="leakyrelu"===f;if(j&&T.push(u),z&&T.push(v),w){var D=r.makeTensorInfo([],"float32",o.util.createScalarValue(d,"float32"));T.push(D),p.push(D)}h=m?new ui(y,j,g,z,w):new oi(y,j,g,z,w);var x=r.runWebGLProgram(h,T,"float32");return p.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),x}},nu=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.sliceDim=e,this.strides=r,this.variableNames=["x","indices"],this.outputShape=n;var a=fe(r.length),o=fe(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        ".concat(a," strides = ").concat(a,"(").concat(this.strides,");\n         void main() {\n          ").concat(o," coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ").concat(this.sliceDim,"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ").concat(i,";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      ")};function au(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ou={kernelName:o.GatherNd,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=e.params,a=e.indices,i=a.shape,u=i[i.length-1],v=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return au(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?au(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.prepareAndValidate(n,a),4),s=v[0],c=v[1],P=v[2],l=v[3],f=Rn({inputs:{x:a},backend:r,attrs:{shape:[c,u]}}),d=Rn({inputs:{x:n},backend:r,attrs:{shape:[o.util.sizeFromShape(n.shape)/P,P]}}),p=new nu(u,l,[c,P]),b=r.runWebGLProgram(p,[d,f],d.dtype),h=Rn({inputs:{x:b},backend:r,attrs:{shape:s}});return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),h}},iu=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A","indices"],this.outputShape=r,this.rank=r.length;var n=fe(this.rank),a=function(t,e){for(var r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[],a=0;a<t.length;a++)2===a?n.push("int(getIndices(resRC.x, resRC.z))"):n.push("".concat(r[a]));return n.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        setOutput(getA(").concat(a,"));\n      }\n    ")},uu={kernelName:o.GatherV2,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.indices,u=n.axis,v=n.batchDims,s=o.util.parseAxisParam(u,a.shape)[0],c=o.backend_util.segment_util.collectGatherOpShapeInfo(a,i,s,v),P=o.util.sizeFromShape(i.shape),l=[],f=Rn({inputs:{x:a},backend:r,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=Rn({inputs:{x:i},backend:r,attrs:{shape:[c.batchSize,P/c.batchSize]}});l.push(f),l.push(d);var p=[c.batchSize,c.outerSize,P/c.batchSize,c.sliceSize];if(r.shouldExecuteOnCPU([a,i])||"string"===a.dtype){var b=r.bufferSync(d),h=function(t,e,r){for(var n=Object(o.buffer)(r,t.dtype),a=0;a<n.size;++a){var i=n.indexToLoc(a).slice(),u=i[0],v=i[2],s=e.locToIndex([u,v]);i[2]=e.values[s];var c=t.locToIndex(i);n.values[a]=t.values[c]}return n}(r.bufferSync(f),b,p);return l.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),r.makeTensorInfo(c.outputShape,h.dtype,h.values)}var y=new iu(f.shape,p),m=r.runWebGLProgram(y,[f,d],f.dtype);l.push(m);var g=Rn({inputs:{x:m},backend:r,attrs:{shape:c.outputShape}});return l.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),g}},vu=xn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ir,dtype:"bool"}),su={kernelName:o.Greater,backendName:"webgl",kernelFunc:vu},cu=xn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Pu={kernelName:o.GreaterEqual,backendName:"webgl",kernelFunc:cu},lu={kernelName:o.IFFT,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend;return Ui(e.input,!0,r)}},fu=Dn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),du={kernelName:o.IsFinite,backendName:"webgl",kernelFunc:fu},pu=Dn({opSnippet:"return float(isinf(x));",dtype:"bool"}),bu={kernelName:o.IsInf,backendName:"webgl",kernelFunc:pu},hu=Dn({opSnippet:"return float(isnan(x));",dtype:"bool"}),yu={kernelName:o.IsNan,backendName:"webgl",kernelFunc:hu},mu=xn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:ur,dtype:"bool"}),gu={kernelName:o.Less,backendName:"webgl",kernelFunc:mu},Tu=xn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),ju={kernelName:o.LessEqual,backendName:"webgl",kernelFunc:Tu},zu={kernelName:o.LinSpace,backendName:"webgl",kernelFunc:function(t){var e=t.backend,r=t.attrs,n=r.start,a=r.stop,o=r.num,i=vr(n,a,o);return e.makeTensorInfo([i.length],"float32",i)}},wu=Dn({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:sr}),Du={kernelName:o.Log,backendName:"webgl",kernelFunc:wu},xu=Dn({opSnippet:"return log(1.0 + x);"}),Ou={kernelName:o.Log1p,backendName:"webgl",kernelFunc:xu},Lu=xn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Su={kernelName:o.LogicalAnd,backendName:"webgl",kernelFunc:Lu},Au=Dn({opSnippet:"return float(!(x >= 1.0));"}),ku={kernelName:o.LogicalNot,backendName:"webgl",kernelFunc:Au},Cu=xn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Iu={kernelName:o.LogicalOr,backendName:"webgl",kernelFunc:Cu},Eu=function t(e,r,n,a,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.outputShape=[];var i,u=r,v=e[3]-1;this.outputShape=e;var s="float(".concat(n,") + float(").concat(a,") * sum");i=.5===o?"inversesqrt(".concat(s,")"):1===o?"1.0/(".concat(s,")"):"exp(log(".concat(s,") * float(-").concat(o,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(u,"; j <= ").concat(u,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(v,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")},Mu=function t(e,r,n,a,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var i,u=r,v=e[3]-1;this.outputShape=e;var s="float(".concat(n,") + float(").concat(a,") * sum");i=.5===o?"inversesqrt(".concat(s,")"):1===o?"1.0/(".concat(s,")"):"exp(log(".concat(s,") * float(-").concat(o,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(u,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(u,"; j <= ").concat(u,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(v,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")},Uu={kernelName:o.LRN,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.depthRadius,u=n.bias,v=n.alpha,s=n.beta,c=Object(o.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Mu(a.shape,i,u,v,s):new Eu(a.shape,i,u,v,s);return r.runWebGLProgram(c,[a],a.dtype)}},Ru=function t(e,r,n,a,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=r,this.bias=n,this.alpha=a,this.beta=o,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(r,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(r," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(o,")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(o,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")},Wu={kernelName:o.LRNGrad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,o=e.y,i=e.dy,u=n.depthRadius,v=n.bias,s=n.alpha,c=n.beta,P=new Ru(a.shape,u,v,s,c);return r.runWebGLProgram(P,[a,o,i],a.dtype)}};function Qu(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Yu(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.reductionIndices,u=n.keepDims,v=a.shape.length,s=o.util.parseAxisParam(i,a.shape),c=s,P=o.backend_util.getAxesPermutation(c,v),l=null!=P,f=r.shouldExecuteOnCPU([a]),d=a;if(l){if(f){for(var p=r.texData.get(d.dataId).values,b=new Array(v),h=0;h<b.length;h++)b[h]=a.shape[P[h]];var y=Tr(p,a.shape,a.dtype,P,b);d=r.makeTensorInfo(b,a.dtype),r.texData.get(d.dataId).values=y}else d=qn(a,P,r);c=o.backend_util.getInnerMostAxes(c.length,v)}o.backend_util.assertAxesAreInnerMostDims("max",c,v);var m,g=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Qu(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Qu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(d.shape,c),2),T=g[0],j=g[1],z=T;if(u&&(z=o.backend_util.expandShapeToKeepDim(T,s)),f){var w=function(t,e,r,n){for(var a=o.util.getTypedArrayFromDType(n,o.util.sizeFromShape(r)),i=0;i<a.length;++i){for(var u=i*e,v=t[u],s=0;s<e;++s){var c=t[u+s];c>v&&(v=c)}a[i]=v}return a}(r.texData.get(d.dataId).values,o.util.sizeFromShape(j),z,a.dtype);m=r.makeTensorInfo(z,a.dtype),r.texData.get(m.dataId).values=w}else m=function(t,e,r,n){var a=o.util.sizeFromShape(e),i=Rn({inputs:{x:t},attrs:{shape:[o.util.sizeFromShape(t.shape)/a,a]},backend:n}),u=Gn(i,t.dtype,"max",n),v=Rn({inputs:{x:u},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),v}(d,j,z,r);return l&&r.disposeIntermediateTensorInfo(d),m}var Gu={kernelName:o.Max,backendName:"webgl",kernelFunc:Yu},Fu=xn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:cr}),Nu={kernelName:o.Maximum,backendName:"webgl",kernelFunc:Fu},qu={kernelName:o.MaxPool,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x;vt(a,"maxPool");var i=n.filterSize,u=n.strides,v=n.pad,s=n.dimRoundingMode;o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(u,1),(function(){return"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(u," and dilations '").concat(1,"'")}));var c=o.backend_util.computePool2DInfo(a.shape,i,u,1,v,s);if(1===c.filterWidth&&1===c.filterHeight&&o.util.arraysEqual(c.inShape,c.outShape))return fn({inputs:{x:a},backend:r});var P=new Aa(c,"max",!1);return r.runWebGLProgram(P,[a],a.dtype)}},Ku={kernelName:o.MaxPool3D,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.filterSize,u=n.strides,v=n.pad,s=n.dataFormat,c=n.dimRoundingMode,P=o.backend_util.computePool3DInfo(a.shape,i,u,[1,1,1],v,c,s),l=new ka(P,"max",!1);return r.runWebGLProgram(l,[a],a.dtype)}};function Bu(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Vu=function t(e){Bu(this,t),this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var r=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,u=o-1-e.padInfo.top,v=i-1-e.padInfo.left,s=o*i-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(u,", ").concat(v,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(o,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(i,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(s," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(i," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Xu=function t(e){Bu(this,t),this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var r=e.strideDepth,n=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,v=e.effectiveFilterDepth,s=e.effectiveFilterHeight,c=e.effectiveFilterWidth,P=v-1-e.padInfo.front,l=s-1-e.padInfo.top,f=c-1-e.padInfo.left,d=v*s*c-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(P,", ").concat(l,", ").concat(f,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(v,";\n           wD += ").concat(o,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(s,";\n              wR += ").concat(i,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(c,";\n                wC += ").concat(u,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(d," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(s," * ").concat(c," +\n                  wR * ").concat(c," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")},Zu={kernelName:o.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.dy,i=e.input,u=n.filterSize,v=n.strides,s=n.pad,c=n.dimRoundingMode,P=o.backend_util.computePool3DInfo(i.shape,u,v,[1,1,1],s,c),l=new ka(P,"max",!0),f=r.runWebGLProgram(l,[i],i.dtype),d=new Xu(P),p=r.runWebGLProgram(d,[a,f],i.dtype);return r.disposeIntermediateTensorInfo(f),p}},Hu={kernelName:o.MaxPoolGrad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.dy,i=e.input,u=i;vt([i,e.output],"maxPoolGrad");var v=n.filterSize,s=n.strides,c=n.pad,P=n.dimRoundingMode,l=o.backend_util.computePool2DInfo(u.shape,v,s,1,c,P),f=new Aa(l,"max",!0),d=r.runWebGLProgram(f,[u],u.dtype),p=new Vu(l),b=r.runWebGLProgram(p,[a,d],u.dtype);return r.disposeIntermediateTensorInfo(d),b}};function Ju(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var _u={kernelName:o.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.attrs,n=t.backend,a=e.x,i=r.filterSize,u=r.strides,v=r.pad,s=r.includeBatchInIndex,c=n;o.util.assert(4===a.shape.length,(function(){return"Error in maxPool: input must be rank 4 but got rank ".concat(a.shape.length,".")}));var P=[1,1];o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(u,P),(function(){return"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(u," and dilations '").concat(P,"'")}));var l=o.backend_util.computePool2DInfo(a.shape,i,u,P,v),f=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ju(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ju(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(function(t,e,r,n){var a=new Aa(r,"max",!1),o=n.runWebGLProgram(a,[t],"float32");return a=new Aa(r,"max",!0,!0,e),[o,n.runWebGLProgram(a,[t],"float32")]}(a,s,l,c),2);return[f[0],f[1]]}};function $u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var tv={kernelName:o.Mean,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.attrs,n=t.backend,a=e.x,i=r.keepDims,u=r.axis,v=n,s=a.shape.length,c=o.util.parseAxisParam(u,a.shape),P=c,l=o.backend_util.getAxesPermutation(P,s),f=null!=l,d=v.shouldExecuteOnCPU([a]),p=[],b=a;if(f){if(d){for(var h=v.texData.get(b.dataId).values,y=new Array(s),m=0;m<y.length;m++)y[m]=a.shape[l[m]];var g=Tr(h,a.shape,a.dtype,l,y);b=v.makeTensorInfo(y,a.dtype),v.texData.get(b.dataId).values=g}else b=qn(a,l,v);p.push(b),P=o.backend_util.getInnerMostAxes(P.length,s)}o.backend_util.assertAxesAreInnerMostDims("sum",P,s);var T=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return $u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?$u(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(b.shape,P),2),j=T[0],z=T[1],w=j;i&&(w=o.backend_util.expandShapeToKeepDim(j,c));for(var D=function(t,e,r,n){var a=o.util.sizeFromShape(e),i=Rn({inputs:{x:t},attrs:{shape:[o.util.sizeFromShape(t.shape)/a,a]},backend:n}),u=Gn(i,"float32","mean",n),v=Rn({inputs:{x:u},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),v}(b,z,w,v),x=0,O=p;x<O.length;x++){var L=O[x];v.disposeIntermediateTensorInfo(L)}return D}};function ev(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var rv={kernelName:o.Min,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.axis,u=n.keepDims,v=a.shape.length,s=o.util.parseAxisParam(i,a.shape),c=s,P=o.backend_util.getAxesPermutation(c,v),l=a;null!=P&&(l=Xn({inputs:{x:a},backend:r,attrs:{perm:P}}),c=o.backend_util.getInnerMostAxes(c.length,a.shape.length)),o.backend_util.assertAxesAreInnerMostDims("min",c,v);var f,d=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ev(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ev(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(l.shape,c),2),p=d[0],b=d[1],h=Rn({inputs:{x:l},backend:r,attrs:{shape:[-1,o.util.sizeFromShape(b)]}}),y=Gn(h,h.dtype,"min",r);return f=Rn(u?{inputs:{x:y},backend:r,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,s)}}:{inputs:{x:y},backend:r,attrs:{shape:p}}),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(y),null!=P&&r.disposeIntermediateTensorInfo(l),f}},nv=xn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Pr}),av={kernelName:o.Minimum,backendName:"webgl",kernelFunc:nv},ov=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.outputShape=r.map((function(t,r){return t[0]+e[r]+t[1]}));var a=e.length,o=fe(a),i=r.map((function(t){return t[0]})).join(","),u=r.map((function(t,r){return t[0]+e[r]})).join(","),v=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),s="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(o," start = ").concat(o,"(").concat(i,");\n      ").concat(o," end = ").concat(o,"(").concat(u,");\n\n      void main() {\n        ").concat(o," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(s,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(s,";\n          }\n        }\n        ").concat(o," coords = outC - start;\n        setOutput(getX(").concat(v,"));\n      }\n    "):"\n        int start = ".concat(i,";\n        int end = ").concat(u,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(s,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(s,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")},iv=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.map((function(t,r){return t[0]+e[r]+t[1]}));var a=e.length,o=fe(a),i=r.map((function(t){return t[0]})).join(","),u=r.map((function(t,r){return t[0]+e[r]})).join(","),v=wr("rc",a),s=wr("source",a),c="".concat(v[a-1]," < ").concat(this.outputShape[a-1]),P=1===a?"source":"vec2(".concat(s.slice(-2).join(),")"),l="reflect"===n?0:1,f="";if(1===a){var d="\n        ".concat(o," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(l,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(l,";\n        }\n        source -= start;\n      ");f="\n        ".concat(o," rc = outputLoc;\n        ").concat(d,"\n        result[0] = getChannel(getX(").concat(s.join(),"), ").concat(P,");\n        ").concat(v[a-1]," += 1;\n        if(").concat(c,") {\n          ").concat(d,"\n          result[1] = getChannel(getX(").concat(s.join(),"), ").concat(P,");\n        }\n      ")}else{var p="\n        ".concat(o," source = rc;\n        ").concat(o," lt = ").concat(o,"(lessThan(source, start));\n        ").concat(o," gte = ").concat(o,"(greaterThanEqual(source, end));\n        ").concat(o," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(l,") +\n                gte * ((end - 1) * 2 - source + ").concat(l,");\n        source -= start;\n      ");f="\n        ".concat(o," rc = outputLoc;\n        ").concat(p,"\n        result[0] = getChannel(getX(").concat(s.join(),"), ").concat(P,");\n        ").concat(v[a-1]," += 1;\n        if(").concat(c,") {\n          ").concat(p,"\n          result[1] = getChannel(getX(").concat(s.join(),"), ").concat(P,");\n        }\n        rc = outputLoc;\n        ").concat(v[a-2]," += 1;\n        if(").concat(v[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(p,"\n          result[2] = getChannel(getX(").concat(s.join(),"), ").concat(P,");\n          ").concat(v[a-1]," += 1;\n          if(").concat(c,") {\n            ").concat(p,"\n            result[3] = getChannel(getX(").concat(s.join(),"), ").concat(P,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(o," start = ").concat(o,"(").concat(i,");\n      const ").concat(o," end = ").concat(o,"(").concat(u,");\n\n      void main() {\n        ").concat(o," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")},uv={kernelName:o.MirrorPad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.paddings,u=n.mode,v=Object(o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iv(a.shape,i,u):new ov(a.shape,i,u);return r.runWebGLProgram(v,[a],a.dtype)}},vv=xn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),sv={kernelName:o.Mod,backendName:"webgl",kernelFunc:vv};function cv(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Pv=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["probs"],this.outputShape=[e,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(r-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(r-1,"));\n      }\n    ")}var e,r;return e=t,(r=[{key:"getCustomSetupFunc",value:function(t){var e=this;return function(r,n){null==e.seedLoc&&(e.seedLoc=r.getUniformLocation(n,"seed")),r.gl.uniform1f(e.seedLoc,t)}}}])&&cv(e.prototype,r),t}(),lv=xn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),fv={kernelName:o.RealDiv,backendName:"webgl",kernelFunc:lv},dv="return a - b;",pv=xn({opSnippet:dv,packedOpSnippet:dv,supportsComplex:!0,cpuKernelImpl:mr}),bv={kernelName:o.Sub,backendName:"webgl",kernelFunc:pv};function hv(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.logits,i=n.dim,u=o.util.parseAxisParam([i],a.shape),v=Yu({inputs:{x:a},backend:r,attrs:{reductionIndices:u,keepDims:!1}}),s=o.backend_util.expandShapeToKeepDim(v.shape,u),c=Rn({inputs:{x:v},backend:r,attrs:{shape:s}}),P=pv({inputs:{a:a,b:c},backend:r}),l=Li({inputs:{x:P},backend:r}),f=Bn({inputs:{x:l},backend:r,attrs:{axis:u,keepDims:!1}}),d=Rn({inputs:{x:f},backend:r,attrs:{shape:s}}),p=lv({inputs:{a:l,b:d},backend:r});return r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(d),p}var yv={kernelName:o.Softmax,backendName:"webgl",kernelFunc:hv},mv={kernelName:o.Multinomial,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.logits,o=n.numSamples,i=n.seed,u=n.normalized,v=u?a:hv({inputs:{logits:a},backend:r,attrs:{dim:a.shape.length-1}}),s=v.shape[0],c=v.shape[1],P=new Pv(s,c,o),l=P.getCustomSetupFunc(i),f=r.runWebGLProgram(P,[v],"int32",l);return u||r.disposeIntermediateTensorInfo(v),f}};function gv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Tv="return -x;",jv={kernelName:o.Neg,backendName:"webgl",kernelFunc:function(t){var e,r=t.inputs,n=t.backend,a=r.x;if(n.shouldExecuteOnCPU([a])){var i=n.texData.get(a.dataId),u=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return gv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?gv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(fr(i.values,a.shape,a.dtype),2),v=u[0],s=u[1];return n.makeTensorInfo(s,a.dtype,v)}return e=Object(o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qr(a.shape,Tv):new Er(a.shape,Tv),n.runWebGLProgram(e,[a],a.dtype)}},zv=o.kernel_impls.nonMaxSuppressionV3Impl,wv={kernelName:o.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(t){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var e=t.inputs,r=t.backend,n=t.attrs,a=e.boxes,i=e.scores,u=n.maxOutputSize,v=n.iouThreshold,s=n.scoreThreshold,c=r.readSync(a.dataId),P=r.readSync(i.dataId),l=zv(c,P,u,v,s).selectedIndices;return r.makeTensorInfo([l.length],"int32",new Int32Array(l))}},Dv=o.kernel_impls.nonMaxSuppressionV4Impl,xv={kernelName:o.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(t){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var e=t.inputs,r=t.backend,n=t.attrs,a=e.boxes,i=e.scores,u=n.maxOutputSize,v=n.iouThreshold,s=n.scoreThreshold,c=n.padToMaxOutputSize,P=r.readSync(a.dataId),l=r.readSync(i.dataId),f=Dv(P,l,u,v,s,c),d=f.selectedIndices,p=f.validOutputs;return[r.makeTensorInfo([d.length],"int32",new Int32Array(d)),r.makeTensorInfo([],"int32",new Int32Array([p]))]}},Ov=o.kernel_impls.nonMaxSuppressionV5Impl,Lv={kernelName:o.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(t){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var e=t.inputs,r=t.backend,n=t.attrs,a=e.boxes,i=e.scores,u=n.maxOutputSize,v=n.iouThreshold,s=n.scoreThreshold,c=n.softNmsSigma,P=r.readSync(a.dataId),l=r.readSync(i.dataId),f=Ov(P,l,u,v,s,c),d=f.selectedIndices,p=f.selectedScores;return[r.makeTensorInfo([d.length],"int32",new Int32Array(d)),r.makeTensorInfo([p.length],"float32",new Float32Array(p))]}},Sv=function t(e,r,n,a){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["indices"],this.outputShape=[e,r],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")};function Av(t){return function(t){if(Array.isArray(t))return kv(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return kv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?kv(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function kv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Cv={kernelName:o.OneHot,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.indices,i=n.depth,u=n.onValue,v=n.offValue,s=o.util.sizeFromShape(a.shape),c=new Sv(s,i,u,v),P=Rn({inputs:{x:a},backend:r,attrs:{shape:[s]}}),l=r.runWebGLProgram(c,[P],a.dtype);r.disposeIntermediateTensorInfo(P);var f=Rn({inputs:{x:l},backend:r,attrs:{shape:[].concat(Av(a.shape),[i])}});return r.disposeIntermediateTensorInfo(l),f}};function Iv(t){var e=t.inputs,r=t.backend,n=e.x;if("complex64"===n.dtype){var a=eo({inputs:{input:n},backend:r}),o=Iv({inputs:{x:a},backend:r}),i=mo({inputs:{input:n},backend:r}),u=Iv({inputs:{x:i},backend:r}),v=pn({inputs:{real:o,imag:u},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),v}return Yi({attrs:{shape:n.shape,dtype:n.dtype,value:"string"===n.dtype?"":0},backend:r})}var Ev={kernelName:o.ZerosLike,backendName:"webgl",kernelFunc:Iv},Mv={kernelName:o.OnesLike,backendName:"webgl",kernelFunc:function t(e){var r=e.inputs,n=e.backend,a=r.x;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){var o=eo({inputs:{input:a},backend:n}),i=t({inputs:{x:o},backend:n}),u=mo({inputs:{input:a},backend:n}),v=Iv({inputs:{x:u},backend:n}),s=pn({inputs:{real:i,imag:v},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(v),s}return Yi({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n})}},Uv={kernelName:o.Pack,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs.axis;if(1===e.length)return Ai({inputs:{input:e[0]},backend:r,attrs:{dim:n}});var a=e[0].shape,i=e[0].dtype;e.forEach((function(t){o.util.assertShapesMatch(a,t.shape,"All tensors passed to stack must have matching shapes"),o.util.assert(i===t.dtype,(function(){return"All tensors passed to stack must have matching dtypes"}))}));var u=[],v=jo({inputs:e.map((function(t){var e=Ai({inputs:{input:t},backend:r,attrs:{dim:n}});return u.push(e),e})),backend:r,attrs:{axis:n}});return u.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),v}},Rv=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.outputShape=r.map((function(t,r){return t[0]+e[r]+t[1]}));var a=e.length,o=fe(a),i=r.map((function(t){return t[0]})).join(","),u=r.map((function(t,r){return t[0]+e[r]})).join(","),v=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(o," start = ").concat(o,"(").concat(i,");\n      ").concat(o," end = ").concat(o,"(").concat(u,");\n\n      void main() {\n        ").concat(o," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(").concat(n,"));\n        } else {\n          ").concat(o," coords = outC - start;\n          setOutput(getX(").concat(v,"));\n        }\n      }\n    "):"\n        int start = ".concat(i,";\n        int end = ").concat(u,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(").concat(n,"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")},Wv=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.map((function(t,r){return t[0]+e[r]+t[1]}));for(var a=e.length,o=fe(a),i=r.map((function(t){return t[0]})).join(","),u=r.map((function(t,r){return t[0]+e[r]})).join(","),v=wr("rc",a),s=wr("source",a),c="".concat(v[a-1]," < ").concat(this.outputShape[a-1]),P=1===a?"source":"vec2(".concat(s.slice(-2).join(),")"),l=["".concat(o," rc = outputLoc;"),"".concat(v[a-1]," += 1;\n       if(").concat(c,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(v[a-2]," += 1;\n       if(").concat(v[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(v[a-1]," += 1;\n         if(").concat(c,") {")],f=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="",p=0,b=1===a?2:4;p<b;p++)d+="\n        ".concat(l[p],"\n        if (").concat(f,") {\n          result[").concat(p,"] = float(").concat(n,");\n        } else {\n          ").concat(o," source = rc - start;\n          result[").concat(p,"] = getChannel(getX(").concat(s.join(),"), ").concat(P,");\n        }\n      ");d+=1===a?"} ":"}}",this.userCode="\n      const ".concat(o," start = ").concat(o,"(").concat(i,");\n      const ").concat(o," end = ").concat(o,"(").concat(u,");\n\n      void main() {\n        ").concat(o," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")},Qv=function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.paddings,u=n.constantValue,v=Object(o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Wv(a.shape,i,u):new Rv(a.shape,i,u);return r.runWebGLProgram(v,[a],a.dtype)},Yv={kernelName:o.PadV2,backendName:"webgl",kernelFunc:Qv},Gv=xn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Fv={kernelName:o.Pow,backendName:"webgl",kernelFunc:Gv};function Nv(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var qv={kernelName:o.Prod,backendName:"webgl",kernelFunc:function(t){var e,r=t.inputs,n=t.backend,a=t.attrs,i=r.x,u=a.axis,v=a.keepDims,s=i.shape.length,c=[],P=o.util.parseAxisParam(u,i.shape),l=P,f=o.backend_util.getAxesPermutation(l,s),d=i;if(null!=f&&(d=Xn({inputs:{x:i},backend:n,attrs:{perm:f}}),l=o.backend_util.getInnerMostAxes(l.length,s),c.push(d)),o.backend_util.assertAxesAreInnerMostDims("prod",l,s),n.shouldExecuteOnCPU([d])){var p=n.texData.get(d.dataId).values,b=dr(d.shape,d.dtype,p,l),h=b.outVals,y=b.outShape,m=b.outDtype;e=n.makeTensorInfo(y,m,h)}else{var g=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Nv(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Nv(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.computeOutAndReduceShapes(d.shape,l),2),T=g[0],j=g[1],z=o.util.sizeFromShape(j),w=Rn({inputs:{x:d},backend:n,attrs:{shape:[-1,z]}}),D=Gn(w,Object(o.sumOutType)(i.dtype),"prod",n);e=Rn({inputs:{x:D},backend:n,attrs:{shape:T}}),c.push(w),c.push(D)}if(v){c.push(e);var x=o.backend_util.expandShapeToKeepDim(e.shape,P);e=Rn({inputs:{x:e},backend:n,attrs:{shape:x}})}return c.forEach((function(t){return n.disposeIntermediateTensorInfo(t)})),e}},Kv=function(t){var e=t.backend,r=t.attrs,n=r.start,a=r.stop,o=r.step,i=r.dtype,u=pr(n,a,o,i);return e.makeTensorInfo([u.length],i,u)},Bv={kernelName:o.Range,backendName:"webgl",kernelFunc:Kv},Vv=Dn({opSnippet:"return 1.0 / x;"}),Xv={kernelName:o.Reciprocal,backendName:"webgl",kernelFunc:Vv},Zv=Dn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Hv={kernelName:o.Relu,backendName:"webgl",kernelFunc:Zv},Jv=Dn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_v={kernelName:o.Relu6,backendName:"webgl",kernelFunc:Jv};function $v(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ts=function t(e,r,n,a,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.outputShape=[];var i=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return $v(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?$v(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,4),u=i[0],v=i[1],s=i[2],c=i[3];this.outputShape=[u,r,n,c];var P,l=[a&&r>1?v-1:v,a&&n>1?s-1:s],f=[a&&r>1?r-1:r,a&&n>1?n-1:n];P=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/f[0],",\n          ").concat(l[1]/f[1],");\n      const vec2 inputShapeRC = vec2(").concat(v,".0, ").concat(s,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(P,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")};function es(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var rs=function t(e,r,n,a,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var i=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return es(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?es(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,4),u=i[0],v=i[1],s=i[2],c=i[3];this.outputShape=[u,r,n,c];var P,l=[a&&r>1?v-1:v,a&&n>1?s-1:s],f=[a&&r>1?r-1:r,a&&n>1?n-1:n];P=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/f[0],",\n          ").concat(l[1]/f[1],",\n          ").concat(l[1]/f[1],");\n      const vec3 inputShapeRC = vec3(").concat(v,".0, ").concat(s,".0,\n                                     ").concat(s,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(P,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")};function ns(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var as={kernelName:o.ResizeBilinear,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.images,i=n.alignCorners,u=n.halfPixelCenters,v=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ns(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ns(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(n.size,2),s=v[0],c=v[1],P=Object(o.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new rs(a.shape,s,c,i,u):new ts(a.shape,s,c,i,u);return r.runWebGLProgram(P,[a],"float32")}};function os(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return is(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?is(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function is(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var us=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["dy"],this.outputShape=[],this.outputShape=r;var a=os(r,3),o=a[1],i=a[2],u=os(e,3),v=u[1],s=u[2],c=[n&&v>1?o-1:o,n&&s>1?i-1:i],P=[n&&v>1?v-1:v,n&&s>1?s-1:s],l=c[0]/P[0],f=c[1]/P[1],d=1/l,p=1/f,b=2*Math.ceil(d)+2,h=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(f,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(b,");\n        const int winWidth = int(").concat(h,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(v,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(o-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(i-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")},vs={kernelName:o.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.images,o=e.dy,i=n.alignCorners,u=new us(o.shape,a.shape,i);return r.runWebGLProgram(u,[o],o.dtype)}};function ss(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var cs=function t(e,r,n,a,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"],this.outputShape=[];var i=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ss(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ss(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,4),u=i[0],v=i[1],s=i[2],c=i[3];this.outputShape=[u,r,n,c];var P,l=[a&&r>1?v-1:v,a&&n>1?s-1:s],f=[a&&r>1?r-1:r,a&&n>1?n-1:n],d=a?"0.5":"0.0";P=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/f[0],",\n          ").concat(l[1]/f[1],");\n      const vec2 inputShapeRC = vec2(").concat(v,".0, ").concat(s,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(P,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")};function Ps(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ls={kernelName:o.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.images,o=n.alignCorners,i=n.halfPixelCenters,u=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Ps(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ps(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(n.size,2),v=u[0],s=u[1],c=new cs(a.shape,v,s,o,i);return r.runWebGLProgram(c,[a],a.dtype)}};function fs(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return ds(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ds(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ds(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ps=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["dy"],this.outputShape=[],this.outputShape=r;var a=fs(r,3),o=a[1],i=a[2],u=fs(e,3),v=u[1],s=u[2],c=[n&&v>1?o-1:o,n&&s>1?i-1:i],P=[n&&v>1?v-1:v,n&&s>1?s-1:s],l=c[0]/P[0],f=c[1]/P[1],d=1/l,p=1/f,b=2*Math.ceil(d)+2,h=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(f,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(b,");\n        const int winWidth = int(").concat(h,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(v,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(c[0],") *\n                (float(dyR) / float(").concat(P[0],"));\n\n            float sourceFracCol =\n                float(").concat(c[1],") *\n                  (float(dyC) / float(").concat(P[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(o,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(i,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")},bs={kernelName:o.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.images,o=e.dy,i=n.alignCorners,u=new ps(o.shape,a.shape,i);return r.runWebGLProgram(u,[o],o.dtype)}},hs=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"];var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1!==n){var a=e.map((function(t,n){return function(t){return-1!==r.indexOf(t)&&1!==e[t]?"".concat(e[t]," - coords[").concat(t,"] - 1"):"coords[".concat(t,"]")}(n)})).join(","),o=fe(n);this.userCode="\n      void main() {\n        ".concat(o," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}else this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      ")},ys=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;var a=wr("rc",n),o="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),i="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),u=fe(n);function v(t){var n=e.map((function(n,a){return function(t,n){return-1!==r.indexOf(t)&&1!==e[t]?"".concat(e[t]," - ").concat(n[t]," - 1"):"".concat(n[t])}(a,t)})),a=n.join(","),o=n.slice(-2).join(",");return"getChannel(getX(".concat(a,"), vec2(").concat(o,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(o,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(u," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(t){return v(t)}(a.slice()),";\n          if(").concat(o,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",v(t)}(a.slice()),";\n          }\n          if(").concat(i,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",v(t)}(a.slice()),";\n            if(").concat(o,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",v(t)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")},ms={kernelName:o.Reverse,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.dims,u=a.shape.length,v=o.util.parseAxisParam(i,a.shape);if(0===u)return fn({inputs:{x:a},backend:r});var s=Object(o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ys(a.shape,v):new hs(a.shape,v);return r.runWebGLProgram(s,[a],a.dtype)}};function gs(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Ts=function t(e,r,n,a){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["Image"],this.outputShape=[];var i=e[1],u=e[2],v=Math.sin(r).toFixed(3),s=Math.cos(r).toFixed(3);this.outputShape=e;var c,P=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return gs(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?gs(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(o.backend_util.getImageCenter(a,i,u),2),l=P[0],f=P[1],d=l.toFixed(3),p=f.toFixed(3);c="number"==typeof n?"float outputValue = ".concat(n.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(n.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ".concat(d,") * ").concat(s," - (float(y) - ").concat(p,") * ").concat(v,";\n          float coordYFloat = (float(x) - ").concat(d,") * ").concat(v," + (float(y) - ").concat(p,") * ").concat(s,";\n          int coordX = int(round(coordXFloat + ").concat(d,"));\n          int coordY = int(round(coordYFloat + ").concat(p,"));\n          ").concat(c,"\n          if(coordX >= 0 && coordX < ").concat(u," && coordY >= 0 && coordY < ").concat(i,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")},js={kernelName:o.RotateWithOffset,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.attrs,n=t.backend,a=e.image,o=r.radians,i=r.fillValue,u=r.center,v=n,s=new Ts(a.shape,o,i,u);return v.runWebGLProgram(s,[a],a.dtype)}},zs=Dn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ws={kernelName:o.Round,backendName:"webgl",kernelFunc:zs},Ds=Dn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:br}),xs={kernelName:o.Rsqrt,backendName:"webgl",kernelFunc:Ds},Os=function t(e,r,n,a,o,i){(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")})(this,t),this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;var u=fe(o.length),v=fe(i.length),s="";1===n?s="i":2===n&&(s="i, j");var c="getIndices(".concat(s,")"),P="";1===a?P="i":2===a&&(P="i, coords[1]");var l="getUpdates(".concat(P,")"),f=r>1?"strides[j]":"strides";this.userCode="\n        ".concat(u," strides = ").concat(u,"(").concat(o,");\n\n        void main() {\n          ").concat(v," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(r,"; j++) {\n              int index = round(").concat(c,");\n              flattenedIndex += index * ").concat(f,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(l,";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      ")},Ls={kernelName:o.ScatterNd,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.indices,i=e.updates,u=n.shape,v=o.backend_util.calculateShapes(i,a,u),s=v.sliceRank,c=v.numUpdates,P=v.sliceSize,l=v.strides,f=v.outputSize,d=[f/P,P];if(0===f)return r.makeTensorInfo(u,a.dtype);var p=Rn({inputs:{x:a},backend:r,attrs:{shape:[c,s]}}),b=Rn({inputs:{x:i},backend:r,attrs:{shape:[c,P]}}),h=r.makeTensorInfo([],"float32",new Float32Array([0])),y=new Os(c,s,p.shape.length,b.shape.length,l,d),m=r.runWebGLProgram(y,[b,p,h],b.dtype),g=Rn({inputs:{x:m},backend:r,attrs:{shape:u}});return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(h),g}},Ss=function t(e,r,n){var a,o;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["c","a","b"],this.outputShape=r,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)o="resRC",a="resRC";else{for(var i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],v=[],s=0;s<r.length;s++)v.push("".concat(i[s])),s<e&&u.push("".concat(i[s]));a=u.join(),o=v.join()}var c=fe(n);this.userCode="\n      void main() {\n        ".concat(c," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(o,"));\n        } else {\n          setOutput(getB(").concat(o,"));\n        }\n      }\n    ")},As={kernelName:o.Select,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=e.condition,a=e.t,i=e.e,u=new Ss(n.shape.length,a.shape,a.shape.length);return r.runWebGLProgram(u,[n,a,i],Object(o.upcastType)(a.dtype,i.dtype))}},ks=Dn({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(o.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(o.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),Cs={kernelName:o.Selu,backendName:"webgl",kernelFunc:ks},Is=Dn({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Es={kernelName:o.Sigmoid,backendName:"webgl",kernelFunc:Is},Ms=Dn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Us={kernelName:o.Sign,backendName:"webgl",kernelFunc:Ms},Rs=Dn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Ws={kernelName:o.Sin,backendName:"webgl",kernelFunc:Rs},Qs=Dn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Ys={kernelName:o.Sinh,backendName:"webgl",kernelFunc:Qs},Gs=Dn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Fs={kernelName:o.Softplus,backendName:"webgl",kernelFunc:Gs};function Ns(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var qs={kernelName:o.SpaceToBatchND,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.blockShape,u=n.paddings;o.util.assert(a.shape.length<=4,(function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"}));var v=i.reduce((function(t,e){return t*e})),s=[[0,0]];s.push.apply(s,function(t){return function(t){if(Array.isArray(t))return Ns(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Ns(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ns(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(u));for(var c=1+i.length;c<a.shape.length;++c)s.push([0,0]);var P=[],l=Qv({inputs:{x:a},backend:r,attrs:{paddings:s,constantValue:0}}),f=o.backend_util.getReshaped(l.shape,i,v,!1),d=o.backend_util.getPermuted(f.length,i.length,!1),p=o.backend_util.getReshapedPermuted(l.shape,i,v,!1),b=Rn({inputs:{x:l},backend:r,attrs:{shape:f}}),h=Xn({inputs:{x:b},backend:r,attrs:{perm:d}}),y=Rn({inputs:{x:h},backend:r,attrs:{shape:p}});return P.push(l),P.push(b),P.push(h),P.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),y}},Ks={kernelName:o.SparseToDense,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.sparseIndices,i=e.sparseValues,u=e.defaultValue,v=n.outputShape,s=o.backend_util.calculateShapes(i,a,v),c=s.sliceRank,P=s.numUpdates,l=s.strides,f=s.outputSize,d=new Os(P,c,a.shape.length,i.shape.length,l,[f,1],!1),p=r.runWebGLProgram(d,[i,a,u],i.dtype),b=Rn({inputs:{x:p},backend:r,attrs:{shape:v}});return r.disposeIntermediateTensorInfo(p),b}};function Bs(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Vs={kernelName:o.SplitV,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.numOrSizeSplits,u=n.axis,v=o.util.parseAxisParam(u,a.shape)[0],s=o.backend_util.prepareSplitSize(a,i,v),c=a.shape.length,P=new Array(c).fill(0),l=a.shape.slice();return s.map((function(t){var e=function(t){return function(t){if(Array.isArray(t))return Bs(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Bs(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Bs(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(l);e[v]=t;var n=Za({inputs:{x:a},backend:r,attrs:{begin:P,size:e}});return P[v]+=t,n}))}},Xs=Dn({opSnippet:"return sqrt(x);"}),Zs={kernelName:o.Sqrt,backendName:"webgl",kernelFunc:Xs},Hs=Dn({opSnippet:"return x * x;"}),Js={kernelName:o.Square,backendName:"webgl",kernelFunc:Hs},_s=xn({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),$s={kernelName:o.SquaredDifference,backendName:"webgl",kernelFunc:_s},tc={kernelName:o.Step,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.attrs,n=t.backend,a=e.x,o=Mr+"\n    return x > 0.0 ? 1.0 : float(".concat(r.alpha,");\n  "),i=new Er(a.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}},ec=function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x"],this.outputShape=n;var a=n.length,o=fe(n.length),i=fe(n.length),u="";if(1===a)u="coords * strides + begin";else{var v=0;u=n.map((function(t,e){return v++,1===n.length?"coords * strides[".concat(e,"] + begin[").concat(e,"]"):"coords[".concat(v-1,"] * strides[").concat(e,"] + begin[").concat(e,"]")})).join(",")}this.userCode="\n      ".concat(o," begin = ").concat(o,"(").concat(e,");\n      ").concat(o," strides = ").concat(o,"(").concat(r,");\n\n      void main() {\n        ").concat(i," coords = getOutputCoords();\n        setOutput(getX(").concat(u,"));\n      }\n    ")},rc={kernelName:o.StridedSlice,backendName:"webgl",kernelFunc:function(t){var e,r=t.inputs,n=t.backend,a=t.attrs,i=r.x,u=a.begin,v=a.end,s=a.strides,c=a.beginMask,P=a.endMask,l=a.ellipsisMask,f=a.newAxisMask,d=a.shrinkAxisMask,p=o.slice_util.sliceInfo(i.shape,u,v,s,c,P,l,f,d),b=p.nonStrided,h=p.$begin,y=p.$strides,m=p.size,g=p.newShape,T=p.outShape,j=Rn({inputs:{x:i},backend:n,attrs:{shape:g}});if(b){var z=Za({inputs:{x:j},backend:n,attrs:{begin:h,size:m}});e=Rn({inputs:{x:z},backend:n,attrs:{shape:T}}),n.disposeIntermediateTensorInfo(z)}else if(T.some((function(t){return 0===t})))e=n.makeTensorInfo(T,i.dtype,[]);else if(n.shouldExecuteOnCPU([j])){var w=n.texData.get(j.dataId).values,D=function(t,e,r,n){for(var a=Object(o.buffer)(t,e.dtype),i=0;i<a.size;i++){for(var u=a.indexToLoc(i),v=new Array(u.length),s=0;s<v.length;s++)v[s]=u[s]*r[s]+n[s];a.set.apply(a,[e.get.apply(e,v)].concat(Ze(u)))}return a}(T,Object(o.buffer)(j.shape,j.dtype,w),y,h);e=n.makeTensorInfo(T,j.dtype,D.values)}else{var x=new ec(h,y,T);e=n.runWebGLProgram(x,[j],j.dtype)}var O=Rn({inputs:{x:e},backend:n,attrs:{shape:T}});return n.disposeIntermediateTensorInfo(j),n.disposeIntermediateTensorInfo(e),O}},nc=Dn({opSnippet:"return tan(x);"}),ac={kernelName:o.Tan,backendName:"webgl",kernelFunc:nc},oc=Dn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ic={kernelName:o.Tanh,backendName:"webgl",kernelFunc:oc},uc=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["A"];for(var n=new Array(e.length),a=0;a<n.length;a++)n[a]=e[a]*r[a];this.outputShape=n,this.rank=n.length;var o=fe(this.rank),i=function(t){var e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");for(var r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[],a=0;a<t.length;a++)n.push("imod(".concat(r[a],", ").concat(t[a],")"));return n.join()}(e);this.userCode="\n      void main() {\n        ".concat(o," resRC = getOutputCoords();\n        setOutput(getA(").concat(i,"));\n      }\n    ")};function vc(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=n.reps;if("string"===a.dtype){var u=r.readSync(a.dataId).map((function(t){return o.util.decodeString(t)})),v=function(t,e){for(var r=new Array(t.rank),n=0;n<r.length;n++)r[n]=t.shape[n]*e[n];for(var a=Object(o.buffer)(r,t.dtype),i=0;i<a.values.length;++i){for(var u=a.indexToLoc(i),v=new Array(t.rank),s=0;s<v.length;s++)v[s]=u[s]%t.shape[s];var c=t.locToIndex(v);a.values[i]=t.values[c]}return a}(Object(o.buffer)(a.shape,a.dtype,u),i);return r.makeTensorInfo(v.shape,v.dtype,v.values)}var s=new uc(a.shape,i);return r.runWebGLProgram(s,[a],a.dtype)}var sc={kernelName:o.Tile,backendName:"webgl",kernelFunc:vc};function cc(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}for(var Pc={kernelName:o.TopK,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,o=n.k,i=(n.sorted,r.readSync(a.dataId)),u=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return cc(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?cc(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(gr(i,a.shape,a.dtype,o),2),v=u[0],s=u[1];return[r.makeTensorInfo(v.shape,v.dtype,v.values),r.makeTensorInfo(s.shape,s.dtype,s.values)]}},lc={kernelName:o.Unique,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.attrs,n=t.backend,a=r.axis,o=e.x;vt(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");var i=n.readSync(o.dataId),u=jr(i,a,o.shape,o.dtype),v=u.outputValues,s=u.outputShape,c=u.indices;return[n.makeTensorInfo(s,o.dtype,v),n.makeTensorInfo([c.length],"int32",c)]}},fc={kernelName:o.Unpack,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.value,o=n.axis;o<0&&(o+=a.shape.length);for(var i=a,u=i.shape.length,v=a.shape[o],s=new Array(u-1),c=0,P=0;P<u;P++)P!==o&&(s[c++]=i.shape[P]);var l=[],f=new Array(u).fill(0),d=i.shape.slice();d[o]=1;for(var p=new Array(v),b=0;b<p.length;b++){f[o]=b;var h=Za({inputs:{x:i},backend:r,attrs:{begin:f,size:d}}),y=Rn({inputs:{x:h},backend:r,attrs:{shape:s}});p[b]=y,l.push(h)}return l.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),p}},dc=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.variableNames=["x","segmentIds"];var n=e.windowSize,a=e.batchSize,o=e.inSize,i=e.numSegments,u=i*Math.ceil(o/n);this.outputShape=[a,u];var v=4*Math.floor(n/4),s=n%4,c="\n        sumValue += dot(values, segFilter);\n    ",P="";o%n>0&&(P="\n        if (inIdx < 0 || inIdx >= ".concat(o,") {\n          return initializationValue;\n        }\n      "));var l="";o%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(o,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(P,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(l,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(i,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(i,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(v,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(v,";\n        if (").concat(1===s,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(c,"\n        } else if (").concat(2===s,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(c,"\n        } else if (").concat(3===s,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(c,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")},pc=0,bc=[Uu,Wu,Jn,_n,ta,ra,oa,va,ca,la,ha,ya,ga,ja,xa,wa,La,Ia,Ca,Ra,Wa,Qa,Fa,Ja,_a,no,io,Po,po,bn,zo,Uo,Ro,Ao,Qo,Yo,Wo,Fo,qo,Xo,$o,ti,ni,li,fi,vi,hi,mi,Ti,ji,wi,xi,Si,ki,Ei,Ri,Gi,Ni,Bi,Xi,tu,eu,ru,ou,uu,su,Pu,dn,lu,go,du,bu,yu,mn,gu,ju,zu,Ou,Du,Su,ku,Iu,Gu,Ku,qu,Zu,Hu,_u,Nu,tv,rv,av,uv,sv,mv,En,jv,wv,xv,Lv,to,Cv,Mv,Uv,Yv,Fv,jn,qv,Bv,ro,fv,Xv,_v,Hv,Wn,as,vs,ls,bs,ms,js,ws,xs,Ls,As,Cs,Es,Us,Ws,Ys,Ha,yv,Fs,qs,Ks,Vs,Zs,Js,$s,tc,rc,bv,Vn,ac,ic,sc,Pc,Zn,lc,fc,{kernelName:o.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(t){var e=t.inputs,r=t.backend,n=t.attrs,a=e.x,i=e.segmentIds,u=n.numSegments,v=a.shape.length,s=[],c=0,P=o.backend_util.getAxesPermutation([c],v),l=a;null!=P&&(l=Xn({inputs:{x:a},backend:r,attrs:{perm:P}}),s.push(l),c=o.backend_util.getInnerMostAxes(1,v)[0]);var f=o.backend_util.segment_util.computeOutShape(l.shape,c,u),d=o.util.sizeFromShape([l.shape[c]]),p=Rn({inputs:{x:l},backend:r,attrs:{shape:[-1,d]}});s.push(p);var b=Rn({inputs:{x:function t(e,n,a,i,u){var v=e.shape[0],c=e.shape[1],P=o.backend_util.segment_util.segOpComputeOptimalWindowSize(c,u),l=new dc({windowSize:P,inSize:c,batchSize:v,numSegments:u},n),f=r.compileAndRun(l,[e,a],i);if(s.push(f),f.shape[1]===u)return f;var d=Kv({backend:r,attrs:{start:0,stop:u,step:1,dtype:"float32"}}),p=vc({inputs:{x:d},backend:r,attrs:{reps:[c/P]}});return s.push(d),s.push(p),t(f,n,p,i,u)}(p,"unsortedSegmentSum",i,Object(o.sumOutType)(a.dtype),u)},backend:r,attrs:{shape:f}}),h=b;if(null!=P){s.push(b);var y=o.backend_util.getUndoAxesPermutation(P);h=Xn({inputs:{x:h},backend:r,attrs:{perm:y}})}return s.forEach((function(t){return r.disposeIntermediateTensorInfo(t)})),h}},Ev];pc<bc.length;pc++){var hc=bc[pc];Object(o.registerKernel)(hc)}},function(t,e,r){"use strict";r.d(e,"a",(function(){return v}));var n=r(5),a=r(3);function o(t,e,r,n){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(t.shape,"."));var a=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(r.length!==o)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(r.length,", should be: ").concat(o,"."));var i=e.size;if(0!==e.rank&&(1!==e.rank||i!==a))throw new Error("sparseValues has incorrect shape "+"".concat(e.shape,", should be [] or [").concat(a,"]"));if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var i=r(1),u=r(4),v=Object(u.b)({sparseToDense_:function(t,e,r){var u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,v=Object(i.a)(t,"sparseIndices","sparseToDense","int32"),s=Object(i.a)(e,"sparseValues","sparseToDense"),c=Object(i.a)(u,"defaultValue","sparseToDense",s.dtype);o(v,s,r,c);var P={sparseIndices:v,sparseValues:s,defaultValue:c},l={outputShape:r};return n.a.runKernel(a.Ic,P,l)}})},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(t,e,r){"use strict";r.r(e),r.d(e,"json",(function(){return n}));var n=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(t,e,r){r(384),t.exports=r(586)},function(t,e,r){"use strict";(function(t){if(r(385),r(582),r(583),t._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");function e(t,e,r){t[e]||Object.defineProperty(t,e,{writable:!0,configurable:!0,value:r})}t._babelPolyfill=!0,e(String.prototype,"padLeft","".padStart),e(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(t){[][t]&&e(Array,t,Function.call.bind([][t]))}))}).call(this,r(148))},function(t,e,r){r(386),r(389),r(390),r(391),r(392),r(393),r(394),r(395),r(396),r(397),r(398),r(399),r(400),r(401),r(402),r(403),r(404),r(405),r(406),r(407),r(408),r(409),r(410),r(411),r(412),r(413),r(414),r(415),r(416),r(417),r(418),r(419),r(420),r(421),r(422),r(423),r(424),r(425),r(426),r(427),r(428),r(429),r(430),r(431),r(432),r(433),r(434),r(435),r(436),r(437),r(438),r(439),r(440),r(441),r(442),r(443),r(444),r(445),r(446),r(447),r(448),r(449),r(450),r(451),r(452),r(453),r(454),r(455),r(456),r(457),r(458),r(459),r(460),r(461),r(462),r(463),r(464),r(466),r(467),r(469),r(470),r(471),r(472),r(473),r(474),r(475),r(477),r(478),r(479),r(480),r(481),r(482),r(483),r(484),r(485),r(486),r(487),r(488),r(489),r(269),r(490),r(297),r(491),r(298),r(492),r(493),r(494),r(495),r(496),r(301),r(303),r(304),r(497),r(498),r(499),r(500),r(501),r(502),r(503),r(504),r(505),r(506),r(507),r(508),r(509),r(510),r(511),r(512),r(513),r(514),r(515),r(516),r(517),r(518),r(519),r(520),r(521),r(522),r(523),r(524),r(525),r(526),r(527),r(528),r(529),r(530),r(531),r(532),r(533),r(534),r(535),r(536),r(537),r(538),r(539),r(540),r(541),r(542),r(543),r(544),r(545),r(546),r(547),r(548),r(549),r(550),r(551),r(552),r(553),r(554),r(555),r(556),r(557),r(558),r(559),r(560),r(561),r(562),r(563),r(564),r(565),r(566),r(567),r(568),r(569),r(570),r(571),r(572),r(573),r(574),r(575),r(576),r(577),r(578),r(579),r(580),r(581),t.exports=r(84)},function(t,e,r){"use strict";function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var a=r(31),o=r(73),i=r(40),u=r(11),v=r(66),s=r(116).KEY,c=r(32),P=r(179),l=r(149),f=r(132),d=r(36),p=r(279),b=r(250),h=r(388),y=r(194),m=r(28),g=r(33),T=r(46),j=r(74),z=r(93),w=r(131),D=r(135),x=r(282),O=r(75),L=r(193),S=r(43),A=r(133),k=O.f,C=S.f,I=x.f,E=a.Symbol,M=a.JSON,U=M&&M.stringify,R=d("_hidden"),W=d("toPrimitive"),Q={}.propertyIsEnumerable,Y=P("symbol-registry"),G=P("symbols"),F=P("op-symbols"),N=Object.prototype,q="function"==typeof E&&!!L.f,K=a.QObject,B=!K||!K.prototype||!K.prototype.findChild,V=i&&c((function(){return 7!=D(C({},"a",{get:function(){return C(this,"a",{value:7}).a}})).a}))?function(t,e,r){var n=k(N,e);n&&delete N[e],C(t,e,r),n&&t!==N&&C(N,e,n)}:C,X=function(t){var e=G[t]=D(E.prototype);return e._k=t,e},Z=q&&"symbol"==n(E.iterator)?function(t){return"symbol"==n(t)}:function(t){return t instanceof E},H=function(t,e,r){return t===N&&H(F,e,r),m(t),e=z(e,!0),m(r),o(G,e)?(r.enumerable?(o(t,R)&&t[R][e]&&(t[R][e]=!1),r=D(r,{enumerable:w(0,!1)})):(o(t,R)||C(t,R,w(1,{})),t[R][e]=!0),V(t,e,r)):C(t,e,r)},J=function(t,e){m(t);for(var r,n=h(e=j(e)),a=0,o=n.length;o>a;)H(t,r=n[a++],e[r]);return t},_=function(t){var e=Q.call(this,t=z(t,!0));return!(this===N&&o(G,t)&&!o(F,t))&&(!(e||!o(this,t)||!o(G,t)||o(this,R)&&this[R][t])||e)},$=function(t,e){if(t=j(t),e=z(e,!0),t!==N||!o(G,e)||o(F,e)){var r=k(t,e);return!r||!o(G,e)||o(t,R)&&t[R][e]||(r.enumerable=!0),r}},tt=function(t){for(var e,r=I(j(t)),n=[],a=0;r.length>a;)o(G,e=r[a++])||e==R||e==s||n.push(e);return n},et=function(t){for(var e,r=t===N,n=I(r?F:j(t)),a=[],i=0;n.length>i;)!o(G,e=n[i++])||r&&!o(N,e)||a.push(G[e]);return a};q||(v((E=function(){if(this instanceof E)throw TypeError("Symbol is not a constructor!");var t=f(arguments.length>0?arguments[0]:void 0),e=function e(r){this===N&&e.call(F,r),o(this,R)&&o(this[R],t)&&(this[R][t]=!1),V(this,t,w(1,r))};return i&&B&&V(N,t,{configurable:!0,set:e}),X(t)}).prototype,"toString",(function(){return this._k})),O.f=$,S.f=H,r(136).f=x.f=tt,r(181).f=_,L.f=et,i&&!r(115)&&v(N,"propertyIsEnumerable",_,!0),p.f=function(t){return X(d(t))}),u(u.G+u.W+u.F*!q,{Symbol:E});for(var rt="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),nt=0;rt.length>nt;)d(rt[nt++]);for(var at=A(d.store),ot=0;at.length>ot;)b(at[ot++]);u(u.S+u.F*!q,"Symbol",{for:function(t){return o(Y,t+="")?Y[t]:Y[t]=E(t)},keyFor:function(t){if(!Z(t))throw TypeError(t+" is not a symbol!");for(var e in Y)if(Y[e]===t)return e},useSetter:function(){B=!0},useSimple:function(){B=!1}}),u(u.S+u.F*!q,"Object",{create:function(t,e){return void 0===e?D(t):J(D(t),e)},defineProperty:H,defineProperties:J,getOwnPropertyDescriptor:$,getOwnPropertyNames:tt,getOwnPropertySymbols:et});var it=c((function(){L.f(1)}));u(u.S+u.F*it,"Object",{getOwnPropertySymbols:function(t){return L.f(T(t))}}),M&&u(u.S+u.F*(!q||c((function(){var t=E();return"[null]"!=U([t])||"{}"!=U({a:t})||"{}"!=U(Object(t))}))),"JSON",{stringify:function(t){for(var e,r,n=[t],a=1;arguments.length>a;)n.push(arguments[a++]);if(r=e=n[1],(g(e)||void 0!==t)&&!Z(t))return y(e)||(e=function(t,e){if("function"==typeof r&&(e=r.call(this,t,e)),!Z(e))return e}),n[1]=e,U.apply(M,n)}}),E.prototype[W]||r(65)(E.prototype,W,E.prototype.valueOf),l(E,"Symbol"),l(Math,"Math",!0),l(a.JSON,"JSON",!0)},function(t,e,r){t.exports=r(179)("native-function-to-string",Function.toString)},function(t,e,r){var n=r(133),a=r(193),o=r(181);t.exports=function(t){var e=n(t),r=a.f;if(r)for(var i,u=r(t),v=o.f,s=0;u.length>s;)v.call(t,i=u[s++])&&e.push(i);return e}},function(t,e,r){var n=r(11);n(n.S,"Object",{create:r(135)})},function(t,e,r){var n=r(11);n(n.S+n.F*!r(40),"Object",{defineProperty:r(43).f})},function(t,e,r){var n=r(11);n(n.S+n.F*!r(40),"Object",{defineProperties:r(281)})},function(t,e,r){var n=r(74),a=r(75).f;r(95)("getOwnPropertyDescriptor",(function(){return function(t,e){return a(n(t),e)}}))},function(t,e,r){var n=r(46),a=r(76);r(95)("getPrototypeOf",(function(){return function(t){return a(n(t))}}))},function(t,e,r){var n=r(46),a=r(133);r(95)("keys",(function(){return function(t){return a(n(t))}}))},function(t,e,r){r(95)("getOwnPropertyNames",(function(){return r(282).f}))},function(t,e,r){var n=r(33),a=r(116).onFreeze;r(95)("freeze",(function(t){return function(e){return t&&n(e)?t(a(e)):e}}))},function(t,e,r){var n=r(33),a=r(116).onFreeze;r(95)("seal",(function(t){return function(e){return t&&n(e)?t(a(e)):e}}))},function(t,e,r){var n=r(33),a=r(116).onFreeze;r(95)("preventExtensions",(function(t){return function(e){return t&&n(e)?t(a(e)):e}}))},function(t,e,r){var n=r(33);r(95)("isFrozen",(function(t){return function(e){return!n(e)||!!t&&t(e)}}))},function(t,e,r){var n=r(33);r(95)("isSealed",(function(t){return function(e){return!n(e)||!!t&&t(e)}}))},function(t,e,r){var n=r(33);r(95)("isExtensible",(function(t){return function(e){return!!n(e)&&(!t||t(e))}}))},function(t,e,r){var n=r(11);n(n.S+n.F,"Object",{assign:r(283)})},function(t,e,r){var n=r(11);n(n.S,"Object",{is:r(284)})},function(t,e,r){var n=r(11);n(n.S,"Object",{setPrototypeOf:r(254).set})},function(t,e,r){"use strict";var n=r(150),a={};a[r(36)("toStringTag")]="z",a+""!="[object z]"&&r(66)(Object.prototype,"toString",(function(){return"[object "+n(this)+"]"}),!0)},function(t,e,r){var n=r(11);n(n.P,"Function",{bind:r(285)})},function(t,e,r){var n=r(43).f,a=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in a||r(40)&&n(a,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(t){return""}}})},function(t,e,r){"use strict";var n=r(33),a=r(76),o=r(36)("hasInstance"),i=Function.prototype;o in i||r(43).f(i,o,{value:function(t){if("function"!=typeof this||!n(t))return!1;if(!n(this.prototype))return t instanceof this;for(;t=a(t);)if(this.prototype===t)return!0;return!1}})},function(t,e,r){var n=r(11),a=r(287);n(n.G+n.F*(parseInt!=a),{parseInt:a})},function(t,e,r){var n=r(11),a=r(288);n(n.G+n.F*(parseFloat!=a),{parseFloat:a})},function(t,e,r){"use strict";var n=r(31),a=r(73),o=r(86),i=r(256),u=r(93),v=r(32),s=r(136).f,c=r(75).f,P=r(43).f,l=r(151).trim,f=n.Number,d=f,p=f.prototype,b="Number"==o(r(135)(p)),h="trim"in String.prototype,y=function(t){var e=u(t,!1);if("string"==typeof e&&e.length>2){var r,n,a,o=(e=h?e.trim():l(e,3)).charCodeAt(0);if(43===o||45===o){if(88===(r=e.charCodeAt(2))||120===r)return NaN}else if(48===o){switch(e.charCodeAt(1)){case 66:case 98:n=2,a=49;break;case 79:case 111:n=8,a=55;break;default:return+e}for(var i,v=e.slice(2),s=0,c=v.length;s<c;s++)if((i=v.charCodeAt(s))<48||i>a)return NaN;return parseInt(v,n)}}return+e};if(!f(" 0o1")||!f("0b1")||f("+0x1")){f=function(t){var e=arguments.length<1?0:t,r=this;return r instanceof f&&(b?v((function(){p.valueOf.call(r)})):"Number"!=o(r))?i(new d(y(e)),r,f):y(e)};for(var m,g=r(40)?s(d):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),T=0;g.length>T;T++)a(d,m=g[T])&&!a(f,m)&&P(f,m,c(d,m));f.prototype=p,p.constructor=f,r(66)(n,"Number",f)}},function(t,e,r){"use strict";var n=r(11),a=r(87),o=r(289),i=r(257),u=1..toFixed,v=Math.floor,s=[0,0,0,0,0,0],c="Number.toFixed: incorrect invocation!",P=function(t,e){for(var r=-1,n=e;++r<6;)n+=t*s[r],s[r]=n%1e7,n=v(n/1e7)},l=function(t){for(var e=6,r=0;--e>=0;)r+=s[e],s[e]=v(r/t),r=r%t*1e7},f=function(){for(var t=6,e="";--t>=0;)if(""!==e||0===t||0!==s[t]){var r=String(s[t]);e=""===e?r:e+i.call("0",7-r.length)+r}return e},d=function t(e,r,n){return 0===r?n:r%2==1?t(e,r-1,n*e):t(e*e,r/2,n)};n(n.P+n.F*(!!u&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!r(32)((function(){u.call({})}))),"Number",{toFixed:function(t){var e,r,n,u,v=o(this,c),s=a(t),p="",b="0";if(s<0||s>20)throw RangeError(c);if(v!=v)return"NaN";if(v<=-1e21||v>=1e21)return String(v);if(v<0&&(p="-",v=-v),v>1e-21)if(r=(e=function(t){for(var e=0,r=t;r>=4096;)e+=12,r/=4096;for(;r>=2;)e+=1,r/=2;return e}(v*d(2,69,1))-69)<0?v*d(2,-e,1):v/d(2,e,1),r*=4503599627370496,(e=52-e)>0){for(P(0,r),n=s;n>=7;)P(1e7,0),n-=7;for(P(d(10,n,1),0),n=e-1;n>=23;)l(1<<23),n-=23;l(1<<n),P(1,1),l(2),b=f()}else P(0,r),P(1<<-e,0),b=f()+i.call("0",s);return s>0?p+((u=b.length)<=s?"0."+i.call("0",s-u)+b:b.slice(0,u-s)+"."+b.slice(u-s)):p+b}})},function(t,e,r){"use strict";var n=r(11),a=r(32),o=r(289),i=1..toPrecision;n(n.P+n.F*(a((function(){return"1"!==i.call(1,void 0)}))||!a((function(){i.call({})}))),"Number",{toPrecision:function(t){var e=o(this,"Number#toPrecision: incorrect invocation!");return void 0===t?i.call(e):i.call(e,t)}})},function(t,e,r){var n=r(11);n(n.S,"Number",{EPSILON:Math.pow(2,-52)})},function(t,e,r){var n=r(11),a=r(31).isFinite;n(n.S,"Number",{isFinite:function(t){return"number"==typeof t&&a(t)}})},function(t,e,r){var n=r(11);n(n.S,"Number",{isInteger:r(290)})},function(t,e,r){var n=r(11);n(n.S,"Number",{isNaN:function(t){return t!=t}})},function(t,e,r){var n=r(11),a=r(290),o=Math.abs;n(n.S,"Number",{isSafeInteger:function(t){return a(t)&&o(t)<=9007199254740991}})},function(t,e,r){var n=r(11);n(n.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(t,e,r){var n=r(11);n(n.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(t,e,r){var n=r(11),a=r(288);n(n.S+n.F*(Number.parseFloat!=a),"Number",{parseFloat:a})},function(t,e,r){var n=r(11),a=r(287);n(n.S+n.F*(Number.parseInt!=a),"Number",{parseInt:a})},function(t,e,r){var n=r(11),a=r(291),o=Math.sqrt,i=Math.acosh;n(n.S+n.F*!(i&&710==Math.floor(i(Number.MAX_VALUE))&&i(1/0)==1/0),"Math",{acosh:function(t){return(t=+t)<1?NaN:t>94906265.62425156?Math.log(t)+Math.LN2:a(t-1+o(t-1)*o(t+1))}})},function(t,e,r){var n=r(11),a=Math.asinh;n(n.S+n.F*!(a&&1/a(0)>0),"Math",{asinh:function t(e){return isFinite(e=+e)&&0!=e?e<0?-t(-e):Math.log(e+Math.sqrt(e*e+1)):e}})},function(t,e,r){var n=r(11),a=Math.atanh;n(n.S+n.F*!(a&&1/a(-0)<0),"Math",{atanh:function(t){return 0==(t=+t)?t:Math.log((1+t)/(1-t))/2}})},function(t,e,r){var n=r(11),a=r(258);n(n.S,"Math",{cbrt:function(t){return a(t=+t)*Math.pow(Math.abs(t),1/3)}})},function(t,e,r){var n=r(11);n(n.S,"Math",{clz32:function(t){return(t>>>=0)?31-Math.floor(Math.log(t+.5)*Math.LOG2E):32}})},function(t,e,r){var n=r(11),a=Math.exp;n(n.S,"Math",{cosh:function(t){return(a(t=+t)+a(-t))/2}})},function(t,e,r){var n=r(11),a=r(259);n(n.S+n.F*(a!=Math.expm1),"Math",{expm1:a})},function(t,e,r){var n=r(11);n(n.S,"Math",{fround:r(292)})},function(t,e,r){var n=r(11),a=Math.abs;n(n.S,"Math",{hypot:function(t,e){for(var r,n,o=0,i=0,u=arguments.length,v=0;i<u;)v<(r=a(arguments[i++]))?(o=o*(n=v/r)*n+1,v=r):o+=r>0?(n=r/v)*n:r;return v===1/0?1/0:v*Math.sqrt(o)}})},function(t,e,r){var n=r(11),a=Math.imul;n(n.S+n.F*r(32)((function(){return-5!=a(4294967295,5)||2!=a.length})),"Math",{imul:function(t,e){var r=+t,n=+e,a=65535&r,o=65535&n;return 0|a*o+((65535&r>>>16)*o+a*(65535&n>>>16)<<16>>>0)}})},function(t,e,r){var n=r(11);n(n.S,"Math",{log10:function(t){return Math.log(t)*Math.LOG10E}})},function(t,e,r){var n=r(11);n(n.S,"Math",{log1p:r(291)})},function(t,e,r){var n=r(11);n(n.S,"Math",{log2:function(t){return Math.log(t)/Math.LN2}})},function(t,e,r){var n=r(11);n(n.S,"Math",{sign:r(258)})},function(t,e,r){var n=r(11),a=r(259),o=Math.exp;n(n.S+n.F*r(32)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(t){return Math.abs(t=+t)<1?(a(t)-a(-t))/2:(o(t-1)-o(-t-1))*(Math.E/2)}})},function(t,e,r){var n=r(11),a=r(259),o=Math.exp;n(n.S,"Math",{tanh:function(t){var e=a(t=+t),r=a(-t);return e==1/0?1:r==1/0?-1:(e-r)/(o(t)+o(-t))}})},function(t,e,r){var n=r(11);n(n.S,"Math",{trunc:function(t){return(t>0?Math.floor:Math.ceil)(t)}})},function(t,e,r){var n=r(11),a=r(134),o=String.fromCharCode,i=String.fromCodePoint;n(n.S+n.F*(!!i&&1!=i.length),"String",{fromCodePoint:function(t){for(var e,r=[],n=arguments.length,i=0;n>i;){if(e=+arguments[i++],a(e,1114111)!==e)throw RangeError(e+" is not a valid code point");r.push(e<65536?o(e):o(55296+((e-=65536)>>10),e%1024+56320))}return r.join("")}})},function(t,e,r){var n=r(11),a=r(74),o=r(37);n(n.S,"String",{raw:function(t){for(var e=a(t.raw),r=o(e.length),n=arguments.length,i=[],u=0;r>u;)i.push(String(e[u++])),u<n&&i.push(String(arguments[u]));return i.join("")}})},function(t,e,r){"use strict";r(151)("trim",(function(t){return function(){return t(this,3)}}))},function(t,e,r){"use strict";var n=r(195)(!0);r(260)(String,"String",(function(t){this._t=String(t),this._i=0}),(function(){var t,e=this._t,r=this._i;return r>=e.length?{value:void 0,done:!0}:(t=n(e,r),this._i+=t.length,{value:t,done:!1})}))},function(t,e,r){"use strict";var n=r(11),a=r(195)(!1);n(n.P,"String",{codePointAt:function(t){return a(this,t)}})},function(t,e,r){"use strict";var n=r(11),a=r(37),o=r(262),i="".endsWith;n(n.P+n.F*r(263)("endsWith"),"String",{endsWith:function(t){var e=o(this,t,"endsWith"),r=arguments.length>1?arguments[1]:void 0,n=a(e.length),u=void 0===r?n:Math.min(a(r),n),v=String(t);return i?i.call(e,v,u):e.slice(u-v.length,u)===v}})},function(t,e,r){"use strict";var n=r(11),a=r(262);n(n.P+n.F*r(263)("includes"),"String",{includes:function(t){return!!~a(this,t,"includes").indexOf(t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){var n=r(11);n(n.P,"String",{repeat:r(257)})},function(t,e,r){"use strict";var n=r(11),a=r(37),o=r(262),i="".startsWith;n(n.P+n.F*r(263)("startsWith"),"String",{startsWith:function(t){var e=o(this,t,"startsWith"),r=a(Math.min(arguments.length>1?arguments[1]:void 0,e.length)),n=String(t);return i?i.call(e,n,r):e.slice(r,r+n.length)===n}})},function(t,e,r){"use strict";r(67)("anchor",(function(t){return function(e){return t(this,"a","name",e)}}))},function(t,e,r){"use strict";r(67)("big",(function(t){return function(){return t(this,"big","","")}}))},function(t,e,r){"use strict";r(67)("blink",(function(t){return function(){return t(this,"blink","","")}}))},function(t,e,r){"use strict";r(67)("bold",(function(t){return function(){return t(this,"b","","")}}))},function(t,e,r){"use strict";r(67)("fixed",(function(t){return function(){return t(this,"tt","","")}}))},function(t,e,r){"use strict";r(67)("fontcolor",(function(t){return function(e){return t(this,"font","color",e)}}))},function(t,e,r){"use strict";r(67)("fontsize",(function(t){return function(e){return t(this,"font","size",e)}}))},function(t,e,r){"use strict";r(67)("italics",(function(t){return function(){return t(this,"i","","")}}))},function(t,e,r){"use strict";r(67)("link",(function(t){return function(e){return t(this,"a","href",e)}}))},function(t,e,r){"use strict";r(67)("small",(function(t){return function(){return t(this,"small","","")}}))},function(t,e,r){"use strict";r(67)("strike",(function(t){return function(){return t(this,"strike","","")}}))},function(t,e,r){"use strict";r(67)("sub",(function(t){return function(){return t(this,"sub","","")}}))},function(t,e,r){"use strict";r(67)("sup",(function(t){return function(){return t(this,"sup","","")}}))},function(t,e,r){var n=r(11);n(n.S,"Date",{now:function(){return(new Date).getTime()}})},function(t,e,r){"use strict";var n=r(11),a=r(46),o=r(93);n(n.P+n.F*r(32)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(t){var e=a(this),r=o(e);return"number"!=typeof r||isFinite(r)?e.toISOString():null}})},function(t,e,r){var n=r(11),a=r(465);n(n.P+n.F*(Date.prototype.toISOString!==a),"Date",{toISOString:a})},function(t,e,r){"use strict";var n=r(32),a=Date.prototype.getTime,o=Date.prototype.toISOString,i=function(t){return t>9?t:"0"+t};t.exports=n((function(){return"0385-07-25T07:06:39.999Z"!=o.call(new Date(-50000000000001))}))||!n((function(){o.call(new Date(NaN))}))?function(){if(!isFinite(a.call(this)))throw RangeError("Invalid time value");var t=this,e=t.getUTCFullYear(),r=t.getUTCMilliseconds(),n=e<0?"-":e>9999?"+":"";return n+("00000"+Math.abs(e)).slice(n?-6:-4)+"-"+i(t.getUTCMonth()+1)+"-"+i(t.getUTCDate())+"T"+i(t.getUTCHours())+":"+i(t.getUTCMinutes())+":"+i(t.getUTCSeconds())+"."+(r>99?r:"0"+i(r))+"Z"}:o},function(t,e,r){var n=Date.prototype,a=n.toString,o=n.getTime;new Date(NaN)+""!="Invalid Date"&&r(66)(n,"toString",(function(){var t=o.call(this);return t==t?a.call(this):"Invalid Date"}))},function(t,e,r){var n=r(36)("toPrimitive"),a=Date.prototype;n in a||r(65)(a,n,r(468))},function(t,e,r){"use strict";var n=r(28),a=r(93);t.exports=function(t){if("string"!==t&&"number"!==t&&"default"!==t)throw TypeError("Incorrect hint");return a(n(this),"number"!=t)}},function(t,e,r){var n=r(11);n(n.S,"Array",{isArray:r(194)})},function(t,e,r){"use strict";var n=r(85),a=r(11),o=r(46),i=r(293),u=r(264),v=r(37),s=r(265),c=r(266);a(a.S+a.F*!r(197)((function(t){Array.from(t)})),"Array",{from:function(t){var e,r,a,P,l=o(t),f="function"==typeof this?this:Array,d=arguments.length,p=d>1?arguments[1]:void 0,b=void 0!==p,h=0,y=c(l);if(b&&(p=n(p,d>2?arguments[2]:void 0,2)),null==y||f==Array&&u(y))for(r=new f(e=v(l.length));e>h;h++)s(r,h,b?p(l[h],h):l[h]);else for(P=y.call(l),r=new f;!(a=P.next()).done;h++)s(r,h,b?i(P,p,[a.value,h],!0):a.value);return r.length=h,r}})},function(t,e,r){"use strict";var n=r(11),a=r(265);n(n.S+n.F*r(32)((function(){function t(){}return!(Array.of.call(t)instanceof t)})),"Array",{of:function(){for(var t=0,e=arguments.length,r=new("function"==typeof this?this:Array)(e);e>t;)a(r,t,arguments[t++]);return r.length=e,r}})},function(t,e,r){"use strict";var n=r(11),a=r(74),o=[].join;n(n.P+n.F*(r(180)!=Object||!r(88)(o)),"Array",{join:function(t){return o.call(a(this),void 0===t?",":t)}})},function(t,e,r){"use strict";var n=r(11),a=r(253),o=r(86),i=r(134),u=r(37),v=[].slice;n(n.P+n.F*r(32)((function(){a&&v.call(a)})),"Array",{slice:function(t,e){var r=u(this.length),n=o(this);if(e=void 0===e?r:e,"Array"==n)return v.call(this,t,e);for(var a=i(t,r),s=i(e,r),c=u(s-a),P=new Array(c),l=0;l<c;l++)P[l]="String"==n?this.charAt(a+l):this[a+l];return P}})},function(t,e,r){"use strict";var n=r(11),a=r(58),o=r(46),i=r(32),u=[].sort,v=[1,2,3];n(n.P+n.F*(i((function(){v.sort(void 0)}))||!i((function(){v.sort(null)}))||!r(88)(u)),"Array",{sort:function(t){return void 0===t?u.call(o(this)):u.call(o(this),a(t))}})},function(t,e,r){"use strict";var n=r(11),a=r(96)(0),o=r(88)([].forEach,!0);n(n.P+n.F*!o,"Array",{forEach:function(t){return a(this,t,arguments[1])}})},function(t,e,r){var n=r(33),a=r(194),o=r(36)("species");t.exports=function(t){var e;return a(t)&&("function"!=typeof(e=t.constructor)||e!==Array&&!a(e.prototype)||(e=void 0),n(e)&&null===(e=e[o])&&(e=void 0)),void 0===e?Array:e}},function(t,e,r){"use strict";var n=r(11),a=r(96)(1);n(n.P+n.F*!r(88)([].map,!0),"Array",{map:function(t){return a(this,t,arguments[1])}})},function(t,e,r){"use strict";var n=r(11),a=r(96)(2);n(n.P+n.F*!r(88)([].filter,!0),"Array",{filter:function(t){return a(this,t,arguments[1])}})},function(t,e,r){"use strict";var n=r(11),a=r(96)(3);n(n.P+n.F*!r(88)([].some,!0),"Array",{some:function(t){return a(this,t,arguments[1])}})},function(t,e,r){"use strict";var n=r(11),a=r(96)(4);n(n.P+n.F*!r(88)([].every,!0),"Array",{every:function(t){return a(this,t,arguments[1])}})},function(t,e,r){"use strict";var n=r(11),a=r(294);n(n.P+n.F*!r(88)([].reduce,!0),"Array",{reduce:function(t){return a(this,t,arguments.length,arguments[1],!1)}})},function(t,e,r){"use strict";var n=r(11),a=r(294);n(n.P+n.F*!r(88)([].reduceRight,!0),"Array",{reduceRight:function(t){return a(this,t,arguments.length,arguments[1],!0)}})},function(t,e,r){"use strict";var n=r(11),a=r(192)(!1),o=[].indexOf,i=!!o&&1/[1].indexOf(1,-0)<0;n(n.P+n.F*(i||!r(88)(o)),"Array",{indexOf:function(t){return i?o.apply(this,arguments)||0:a(this,t,arguments[1])}})},function(t,e,r){"use strict";var n=r(11),a=r(74),o=r(87),i=r(37),u=[].lastIndexOf,v=!!u&&1/[1].lastIndexOf(1,-0)<0;n(n.P+n.F*(v||!r(88)(u)),"Array",{lastIndexOf:function(t){if(v)return u.apply(this,arguments)||0;var e=a(this),r=i(e.length),n=r-1;for(arguments.length>1&&(n=Math.min(n,o(arguments[1]))),n<0&&(n=r+n);n>=0;n--)if(n in e&&e[n]===t)return n||0;return-1}})},function(t,e,r){var n=r(11);n(n.P,"Array",{copyWithin:r(295)}),r(117)("copyWithin")},function(t,e,r){var n=r(11);n(n.P,"Array",{fill:r(268)}),r(117)("fill")},function(t,e,r){"use strict";var n=r(11),a=r(96)(5),o=!0;"find"in[]&&Array(1).find((function(){o=!1})),n(n.P+n.F*o,"Array",{find:function(t){return a(this,t,arguments.length>1?arguments[1]:void 0)}}),r(117)("find")},function(t,e,r){"use strict";var n=r(11),a=r(96)(6),o="findIndex",i=!0;o in[]&&Array(1)[o]((function(){i=!1})),n(n.P+n.F*i,"Array",{findIndex:function(t){return a(this,t,arguments.length>1?arguments[1]:void 0)}}),r(117)(o)},function(t,e,r){r(137)("Array")},function(t,e,r){var n=r(31),a=r(256),o=r(43).f,i=r(136).f,u=r(196),v=r(182),s=n.RegExp,c=s,P=s.prototype,l=/a/g,f=/a/g,d=new s(l)!==l;if(r(40)&&(!d||r(32)((function(){return f[r(36)("match")]=!1,s(l)!=l||s(f)==f||"/a/i"!=s(l,"i")})))){s=function(t,e){var r=this instanceof s,n=u(t),o=void 0===e;return!r&&n&&t.constructor===s&&o?t:a(d?new c(n&&!o?t.source:t,e):c((n=t instanceof s)?t.source:t,n&&o?v.call(t):e),r?this:P,s)};for(var p=function(t){t in s||o(s,t,{configurable:!0,get:function(){return c[t]},set:function(e){c[t]=e}})},b=i(c),h=0;b.length>h;)p(b[h++]);P.constructor=s,s.prototype=P,r(66)(n,"RegExp",s)}r(137)("RegExp")},function(t,e,r){"use strict";r(298);var n=r(28),a=r(182),o=r(40),i=/./.toString,u=function(t){r(66)(RegExp.prototype,"toString",t,!0)};r(32)((function(){return"/a/b"!=i.call({source:"a",flags:"b"})}))?u((function(){var t=n(this);return"/".concat(t.source,"/","flags"in t?t.flags:!o&&t instanceof RegExp?a.call(t):void 0)})):"toString"!=i.name&&u((function(){return i.call(this)}))},function(t,e,r){"use strict";var n=r(28),a=r(37),o=r(271),i=r(198);r(199)("match",1,(function(t,e,r,u){return[function(r){var n=t(this),a=null==r?void 0:r[e];return void 0!==a?a.call(r,n):new RegExp(r)[e](String(n))},function(t){var e=u(r,t,this);if(e.done)return e.value;var v=n(t),s=String(this);if(!v.global)return i(v,s);var c=v.unicode;v.lastIndex=0;for(var P,l=[],f=0;null!==(P=i(v,s));){var d=String(P[0]);l[f]=d,""===d&&(v.lastIndex=o(s,a(v.lastIndex),c)),f++}return 0===f?null:l}]}))},function(t,e,r){"use strict";var n=r(28),a=r(46),o=r(37),i=r(87),u=r(271),v=r(198),s=Math.max,c=Math.min,P=Math.floor,l=/\$([$&`']|\d\d?|<[^>]*>)/g,f=/\$([$&`']|\d\d?)/g;r(199)("replace",2,(function(t,e,r,d){return[function(n,a){var o=t(this),i=null==n?void 0:n[e];return void 0!==i?i.call(n,o,a):r.call(String(o),n,a)},function(t,e){var a=d(r,t,this,e);if(a.done)return a.value;var P=n(t),l=String(this),f="function"==typeof e;f||(e=String(e));var b=P.global;if(b){var h=P.unicode;P.lastIndex=0}for(var y=[];;){var m=v(P,l);if(null===m)break;if(y.push(m),!b)break;""===String(m[0])&&(P.lastIndex=u(l,o(P.lastIndex),h))}for(var g,T="",j=0,z=0;z<y.length;z++){m=y[z];for(var w=String(m[0]),D=s(c(i(m.index),l.length),0),x=[],O=1;O<m.length;O++)x.push(void 0===(g=m[O])?g:String(g));var L=m.groups;if(f){var S=[w].concat(x,D,l);void 0!==L&&S.push(L);var A=String(e.apply(void 0,S))}else A=p(w,l,D,x,L,e);D>=j&&(T+=l.slice(j,D)+A,j=D+w.length)}return T+l.slice(j)}];function p(t,e,n,o,i,u){var v=n+t.length,s=o.length,c=f;return void 0!==i&&(i=a(i),c=l),r.call(u,c,(function(r,a){var u;switch(a.charAt(0)){case"$":return"$";case"&":return t;case"`":return e.slice(0,n);case"'":return e.slice(v);case"<":u=i[a.slice(1,-1)];break;default:var c=+a;if(0===c)return r;if(c>s){var l=P(c/10);return 0===l?r:l<=s?void 0===o[l-1]?a.charAt(1):o[l-1]+a.charAt(1):r}u=o[c-1]}return void 0===u?"":u}))}}))},function(t,e,r){"use strict";var n=r(28),a=r(284),o=r(198);r(199)("search",1,(function(t,e,r,i){return[function(r){var n=t(this),a=null==r?void 0:r[e];return void 0!==a?a.call(r,n):new RegExp(r)[e](String(n))},function(t){var e=i(r,t,this);if(e.done)return e.value;var u=n(t),v=String(this),s=u.lastIndex;a(s,0)||(u.lastIndex=0);var c=o(u,v);return a(u.lastIndex,s)||(u.lastIndex=s),null===c?-1:c.index}]}))},function(t,e,r){"use strict";var n=r(196),a=r(28),o=r(183),i=r(271),u=r(37),v=r(198),s=r(270),c=r(32),P=Math.min,l=[].push,f="length",d=!c((function(){RegExp(4294967295,"y")}));r(199)("split",2,(function(t,e,r,c){var p;return p="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[f]||2!="ab".split(/(?:ab)*/)[f]||4!=".".split(/(.?)(.?)/)[f]||".".split(/()()/)[f]>1||"".split(/.?/)[f]?function(t,e){var a=String(this);if(void 0===t&&0===e)return[];if(!n(t))return r.call(a,t,e);for(var o,i,u,v=[],c=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),P=0,d=void 0===e?4294967295:e>>>0,p=new RegExp(t.source,c+"g");(o=s.call(p,a))&&!((i=p.lastIndex)>P&&(v.push(a.slice(P,o.index)),o[f]>1&&o.index<a[f]&&l.apply(v,o.slice(1)),u=o[0][f],P=i,v[f]>=d));)p.lastIndex===o.index&&p.lastIndex++;return P===a[f]?!u&&p.test("")||v.push(""):v.push(a.slice(P)),v[f]>d?v.slice(0,d):v}:"0".split(void 0,0)[f]?function(t,e){return void 0===t&&0===e?[]:r.call(this,t,e)}:r,[function(r,n){var a=t(this),o=null==r?void 0:r[e];return void 0!==o?o.call(r,a,n):p.call(String(a),r,n)},function(t,e){var n=c(p,t,this,e,p!==r);if(n.done)return n.value;var s=a(t),l=String(this),f=o(s,RegExp),b=s.unicode,h=(s.ignoreCase?"i":"")+(s.multiline?"m":"")+(s.unicode?"u":"")+(d?"y":"g"),y=new f(d?s:"^(?:"+s.source+")",h),m=void 0===e?4294967295:e>>>0;if(0===m)return[];if(0===l.length)return null===v(y,l)?[l]:[];for(var g=0,T=0,j=[];T<l.length;){y.lastIndex=d?T:0;var z,w=v(y,d?l:l.slice(T));if(null===w||(z=P(u(y.lastIndex+(d?0:T)),l.length))===g)T=i(l,T,b);else{if(j.push(l.slice(g,T)),j.length===m)return j;for(var D=1;D<=w.length-1;D++)if(j.push(w[D]),j.length===m)return j;T=g=z}}return j.push(l.slice(g)),j}]}))},function(t,e,r){"use strict";var n,a,o,i,u=r(115),v=r(31),s=r(85),c=r(150),P=r(11),l=r(33),f=r(58),d=r(138),p=r(139),b=r(183),h=r(272).set,y=r(273)(),m=r(274),g=r(299),T=r(200),j=r(300),z=v.TypeError,w=v.process,D=w&&w.versions,x=D&&D.v8||"",O=v.Promise,L="process"==c(w),S=function(){},A=a=m.f,k=!!function(){try{var t=O.resolve(1),e=(t.constructor={})[r(36)("species")]=function(t){t(S,S)};return(L||"function"==typeof PromiseRejectionEvent)&&t.then(S)instanceof e&&0!==x.indexOf("6.6")&&-1===T.indexOf("Chrome/66")}catch(t){}}(),C=function(t){var e;return!(!l(t)||"function"!=typeof(e=t.then))&&e},I=function(t,e){if(!t._n){t._n=!0;var r=t._c;y((function(){for(var n=t._v,a=1==t._s,o=0,i=function(e){var r,o,i,u=a?e.ok:e.fail,v=e.resolve,s=e.reject,c=e.domain;try{u?(a||(2==t._h&&U(t),t._h=1),!0===u?r=n:(c&&c.enter(),r=u(n),c&&(c.exit(),i=!0)),r===e.promise?s(z("Promise-chain cycle")):(o=C(r))?o.call(r,v,s):v(r)):s(n)}catch(t){c&&!i&&c.exit(),s(t)}};r.length>o;)i(r[o++]);t._c=[],t._n=!1,e&&!t._h&&E(t)}))}},E=function(t){h.call(v,(function(){var e,r,n,a=t._v,o=M(t);if(o&&(e=g((function(){L?w.emit("unhandledRejection",a,t):(r=v.onunhandledrejection)?r({promise:t,reason:a}):(n=v.console)&&n.error&&n.error("Unhandled promise rejection",a)})),t._h=L||M(t)?2:1),t._a=void 0,o&&e.e)throw e.v}))},M=function(t){return 1!==t._h&&0===(t._a||t._c).length},U=function(t){h.call(v,(function(){var e;L?w.emit("rejectionHandled",t):(e=v.onrejectionhandled)&&e({promise:t,reason:t._v})}))},R=function(t){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=t,e._s=2,e._a||(e._a=e._c.slice()),I(e,!0))},W=function t(e){var r,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw z("Promise can't be resolved itself");(r=C(e))?y((function(){var a={_w:n,_d:!1};try{r.call(e,s(t,a,1),s(R,a,1))}catch(t){R.call(a,t)}})):(n._v=e,n._s=1,I(n,!1))}catch(t){R.call({_w:n,_d:!1},t)}}};k||(O=function(t){d(this,O,"Promise","_h"),f(t),n.call(this);try{t(s(W,this,1),s(R,this,1))}catch(t){R.call(this,t)}},(n=function(t){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(140)(O.prototype,{then:function(t,e){var r=A(b(this,O));return r.ok="function"!=typeof t||t,r.fail="function"==typeof e&&e,r.domain=L?w.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&I(this,!1),r.promise},catch:function(t){return this.then(void 0,t)}}),o=function(){var t=new n;this.promise=t,this.resolve=s(W,t,1),this.reject=s(R,t,1)},m.f=A=function(t){return t===O||t===i?new o(t):a(t)}),P(P.G+P.W+P.F*!k,{Promise:O}),r(149)(O,"Promise"),r(137)("Promise"),i=r(84).Promise,P(P.S+P.F*!k,"Promise",{reject:function(t){var e=A(this);return(0,e.reject)(t),e.promise}}),P(P.S+P.F*(u||!k),"Promise",{resolve:function(t){return j(u&&this===i?O:this,t)}}),P(P.S+P.F*!(k&&r(197)((function(t){O.all(t).catch(S)}))),"Promise",{all:function(t){var e=this,r=A(e),n=r.resolve,a=r.reject,o=g((function(){var r=[],o=0,i=1;p(t,!1,(function(t){var u=o++,v=!1;r.push(void 0),i++,e.resolve(t).then((function(t){v||(v=!0,r[u]=t,--i||n(r))}),a)})),--i||n(r)}));return o.e&&a(o.v),r.promise},race:function(t){var e=this,r=A(e),n=r.reject,a=g((function(){p(t,!1,(function(t){e.resolve(t).then(r.resolve,n)}))}));return a.e&&n(a.v),r.promise}})},function(t,e,r){"use strict";var n=r(305),a=r(141);r(201)("WeakSet",(function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(t){return n.def(a(this,"WeakSet"),t,!0)}},n,!1,!0)},function(t,e,r){"use strict";var n=r(11),a=r(202),o=r(275),i=r(28),u=r(134),v=r(37),s=r(33),c=r(31).ArrayBuffer,P=r(183),l=o.ArrayBuffer,f=o.DataView,d=a.ABV&&c.isView,p=l.prototype.slice,b=a.VIEW;n(n.G+n.W+n.F*(c!==l),{ArrayBuffer:l}),n(n.S+n.F*!a.CONSTR,"ArrayBuffer",{isView:function(t){return d&&d(t)||s(t)&&b in t}}),n(n.P+n.U+n.F*r(32)((function(){return!new l(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(t,e){if(void 0!==p&&void 0===e)return p.call(i(this),t);for(var r=i(this).byteLength,n=u(t,r),a=u(void 0===e?r:e,r),o=new(P(this,l))(v(a-n)),s=new f(this),c=new f(o),d=0;n<a;)c.setUint8(d++,s.getUint8(n++));return o}}),r(137)("ArrayBuffer")},function(t,e,r){var n=r(11);n(n.G+n.W+n.F*!r(202).ABV,{DataView:r(275).DataView})},function(t,e,r){r(110)("Int8",1,(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(110)("Uint8",1,(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(110)("Uint8",1,(function(t){return function(e,r,n){return t(this,e,r,n)}}),!0)},function(t,e,r){r(110)("Int16",2,(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(110)("Uint16",2,(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(110)("Int32",4,(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(110)("Uint32",4,(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(110)("Float32",4,(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(110)("Float64",8,(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){var n=r(11),a=r(58),o=r(28),i=(r(31).Reflect||{}).apply,u=Function.apply;n(n.S+n.F*!r(32)((function(){i((function(){}))})),"Reflect",{apply:function(t,e,r){var n=a(t),v=o(r);return i?i(n,e,v):u.call(n,e,v)}})},function(t,e,r){var n=r(11),a=r(135),o=r(58),i=r(28),u=r(33),v=r(32),s=r(285),c=(r(31).Reflect||{}).construct,P=v((function(){function t(){}return!(c((function(){}),[],t)instanceof t)})),l=!v((function(){c((function(){}))}));n(n.S+n.F*(P||l),"Reflect",{construct:function(t,e){o(t),i(e);var r=arguments.length<3?t:o(arguments[2]);if(l&&!P)return c(t,e,r);if(t==r){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var n=[null];return n.push.apply(n,e),new(s.apply(t,n))}var v=r.prototype,f=a(u(v)?v:Object.prototype),d=Function.apply.call(t,f,e);return u(d)?d:f}})},function(t,e,r){var n=r(43),a=r(11),o=r(28),i=r(93);a(a.S+a.F*r(32)((function(){Reflect.defineProperty(n.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(t,e,r){o(t),e=i(e,!0),o(r);try{return n.f(t,e,r),!0}catch(t){return!1}}})},function(t,e,r){var n=r(11),a=r(75).f,o=r(28);n(n.S,"Reflect",{deleteProperty:function(t,e){var r=a(o(t),e);return!(r&&!r.configurable)&&delete t[e]}})},function(t,e,r){"use strict";var n=r(11),a=r(28),o=function(t){this._t=a(t),this._i=0;var e,r=this._k=[];for(e in t)r.push(e)};r(261)(o,"Object",(function(){var t,e=this._k;do{if(this._i>=e.length)return{value:void 0,done:!0}}while(!((t=e[this._i++])in this._t));return{value:t,done:!1}})),n(n.S,"Reflect",{enumerate:function(t){return new o(t)}})},function(t,e,r){var n=r(75),a=r(76),o=r(73),i=r(11),u=r(33),v=r(28);i(i.S,"Reflect",{get:function t(e,r){var i,s,c=arguments.length<3?e:arguments[2];return v(e)===c?e[r]:(i=n.f(e,r))?o(i,"value")?i.value:void 0!==i.get?i.get.call(c):void 0:u(s=a(e))?t(s,r,c):void 0}})},function(t,e,r){var n=r(75),a=r(11),o=r(28);a(a.S,"Reflect",{getOwnPropertyDescriptor:function(t,e){return n.f(o(t),e)}})},function(t,e,r){var n=r(11),a=r(76),o=r(28);n(n.S,"Reflect",{getPrototypeOf:function(t){return a(o(t))}})},function(t,e,r){var n=r(11);n(n.S,"Reflect",{has:function(t,e){return e in t}})},function(t,e,r){var n=r(11),a=r(28),o=Object.isExtensible;n(n.S,"Reflect",{isExtensible:function(t){return a(t),!o||o(t)}})},function(t,e,r){var n=r(11);n(n.S,"Reflect",{ownKeys:r(307)})},function(t,e,r){var n=r(11),a=r(28),o=Object.preventExtensions;n(n.S,"Reflect",{preventExtensions:function(t){a(t);try{return o&&o(t),!0}catch(t){return!1}}})},function(t,e,r){var n=r(43),a=r(75),o=r(76),i=r(73),u=r(11),v=r(131),s=r(28),c=r(33);u(u.S,"Reflect",{set:function t(e,r,u){var P,l,f=arguments.length<4?e:arguments[3],d=a.f(s(e),r);if(!d){if(c(l=o(e)))return t(l,r,u,f);d=v(0)}if(i(d,"value")){if(!1===d.writable||!c(f))return!1;if(P=a.f(f,r)){if(P.get||P.set||!1===P.writable)return!1;P.value=u,n.f(f,r,P)}else n.f(f,r,v(0,u));return!0}return void 0!==d.set&&(d.set.call(f,u),!0)}})},function(t,e,r){var n=r(11),a=r(254);a&&n(n.S,"Reflect",{setPrototypeOf:function(t,e){a.check(t,e);try{return a.set(t,e),!0}catch(t){return!1}}})},function(t,e,r){"use strict";var n=r(11),a=r(192)(!0);n(n.P,"Array",{includes:function(t){return a(this,t,arguments.length>1?arguments[1]:void 0)}}),r(117)("includes")},function(t,e,r){"use strict";var n=r(11),a=r(308),o=r(46),i=r(37),u=r(58),v=r(267);n(n.P,"Array",{flatMap:function(t){var e,r,n=o(this);return u(t),e=i(n.length),r=v(n,0),a(r,n,n,e,0,1,t,arguments[1]),r}}),r(117)("flatMap")},function(t,e,r){"use strict";var n=r(11),a=r(308),o=r(46),i=r(37),u=r(87),v=r(267);n(n.P,"Array",{flatten:function(){var t=arguments[0],e=o(this),r=i(e.length),n=v(e,0);return a(n,e,e,r,0,void 0===t?1:u(t)),n}}),r(117)("flatten")},function(t,e,r){"use strict";var n=r(11),a=r(195)(!0),o=r(32)((function(){return"𠮷"!=="𠮷".at(0)}));n(n.P+n.F*o,"String",{at:function(t){return a(this,t)}})},function(t,e,r){"use strict";var n=r(11),a=r(309),o=r(200),i=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);n(n.P+n.F*i,"String",{padStart:function(t){return a(this,t,arguments.length>1?arguments[1]:void 0,!0)}})},function(t,e,r){"use strict";var n=r(11),a=r(309),o=r(200),i=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);n(n.P+n.F*i,"String",{padEnd:function(t){return a(this,t,arguments.length>1?arguments[1]:void 0,!1)}})},function(t,e,r){"use strict";r(151)("trimLeft",(function(t){return function(){return t(this,1)}}),"trimStart")},function(t,e,r){"use strict";r(151)("trimRight",(function(t){return function(){return t(this,2)}}),"trimEnd")},function(t,e,r){"use strict";var n=r(11),a=r(94),o=r(37),i=r(196),u=r(182),v=RegExp.prototype,s=function(t,e){this._r=t,this._s=e};r(261)(s,"RegExp String",(function(){var t=this._r.exec(this._s);return{value:t,done:null===t}})),n(n.P,"String",{matchAll:function(t){if(a(this),!i(t))throw TypeError(t+" is not a regexp!");var e=String(this),r="flags"in v?String(t.flags):u.call(t),n=new RegExp(t.source,~r.indexOf("g")?r:"g"+r);return n.lastIndex=o(t.lastIndex),new s(n,e)}})},function(t,e,r){r(250)("asyncIterator")},function(t,e,r){r(250)("observable")},function(t,e,r){var n=r(11),a=r(307),o=r(74),i=r(75),u=r(265);n(n.S,"Object",{getOwnPropertyDescriptors:function(t){for(var e,r,n=o(t),v=i.f,s=a(n),c={},P=0;s.length>P;)void 0!==(r=v(n,e=s[P++]))&&u(c,e,r);return c}})},function(t,e,r){var n=r(11),a=r(310)(!1);n(n.S,"Object",{values:function(t){return a(t)}})},function(t,e,r){var n=r(11),a=r(310)(!0);n(n.S,"Object",{entries:function(t){return a(t)}})},function(t,e,r){"use strict";var n=r(11),a=r(46),o=r(58),i=r(43);r(40)&&n(n.P+r(203),"Object",{__defineGetter__:function(t,e){i.f(a(this),t,{get:o(e),enumerable:!0,configurable:!0})}})},function(t,e,r){"use strict";var n=r(11),a=r(46),o=r(58),i=r(43);r(40)&&n(n.P+r(203),"Object",{__defineSetter__:function(t,e){i.f(a(this),t,{set:o(e),enumerable:!0,configurable:!0})}})},function(t,e,r){"use strict";var n=r(11),a=r(46),o=r(93),i=r(76),u=r(75).f;r(40)&&n(n.P+r(203),"Object",{__lookupGetter__:function(t){var e,r=a(this),n=o(t,!0);do{if(e=u(r,n))return e.get}while(r=i(r))}})},function(t,e,r){"use strict";var n=r(11),a=r(46),o=r(93),i=r(76),u=r(75).f;r(40)&&n(n.P+r(203),"Object",{__lookupSetter__:function(t){var e,r=a(this),n=o(t,!0);do{if(e=u(r,n))return e.set}while(r=i(r))}})},function(t,e,r){var n=r(11);n(n.P+n.R,"Map",{toJSON:r(311)("Map")})},function(t,e,r){var n=r(11);n(n.P+n.R,"Set",{toJSON:r(311)("Set")})},function(t,e,r){r(204)("Map")},function(t,e,r){r(204)("Set")},function(t,e,r){r(204)("WeakMap")},function(t,e,r){r(204)("WeakSet")},function(t,e,r){r(205)("Map")},function(t,e,r){r(205)("Set")},function(t,e,r){r(205)("WeakMap")},function(t,e,r){r(205)("WeakSet")},function(t,e,r){var n=r(11);n(n.G,{global:r(31)})},function(t,e,r){var n=r(11);n(n.S,"System",{global:r(31)})},function(t,e,r){var n=r(11),a=r(86);n(n.S,"Error",{isError:function(t){return"Error"===a(t)}})},function(t,e,r){var n=r(11);n(n.S,"Math",{clamp:function(t,e,r){return Math.min(r,Math.max(e,t))}})},function(t,e,r){var n=r(11);n(n.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(t,e,r){var n=r(11),a=180/Math.PI;n(n.S,"Math",{degrees:function(t){return t*a}})},function(t,e,r){var n=r(11),a=r(313),o=r(292);n(n.S,"Math",{fscale:function(t,e,r,n,i){return o(a(t,e,r,n,i))}})},function(t,e,r){var n=r(11);n(n.S,"Math",{iaddh:function(t,e,r,n){var a=t>>>0,o=r>>>0;return(e>>>0)+(n>>>0)+((a&o|(a|o)&~(a+o>>>0))>>>31)|0}})},function(t,e,r){var n=r(11);n(n.S,"Math",{isubh:function(t,e,r,n){var a=t>>>0,o=r>>>0;return(e>>>0)-(n>>>0)-((~a&o|~(a^o)&a-o>>>0)>>>31)|0}})},function(t,e,r){var n=r(11);n(n.S,"Math",{imulh:function(t,e){var r=+t,n=+e,a=65535&r,o=65535&n,i=r>>16,u=n>>16,v=(i*o>>>0)+(a*o>>>16);return i*u+(v>>16)+((a*u>>>0)+(65535&v)>>16)}})},function(t,e,r){var n=r(11);n(n.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(t,e,r){var n=r(11),a=Math.PI/180;n(n.S,"Math",{radians:function(t){return t*a}})},function(t,e,r){var n=r(11);n(n.S,"Math",{scale:r(313)})},function(t,e,r){var n=r(11);n(n.S,"Math",{umulh:function(t,e){var r=+t,n=+e,a=65535&r,o=65535&n,i=r>>>16,u=n>>>16,v=(i*o>>>0)+(a*o>>>16);return i*u+(v>>>16)+((a*u>>>0)+(65535&v)>>>16)}})},function(t,e,r){var n=r(11);n(n.S,"Math",{signbit:function(t){return(t=+t)!=t?t:0==t?1/t==1/0:t>0}})},function(t,e,r){"use strict";var n=r(11),a=r(84),o=r(31),i=r(183),u=r(300);n(n.P+n.R,"Promise",{finally:function(t){var e=i(this,a.Promise||o.Promise),r="function"==typeof t;return this.then(r?function(r){return u(e,t()).then((function(){return r}))}:t,r?function(r){return u(e,t()).then((function(){throw r}))}:t)}})},function(t,e,r){"use strict";var n=r(11),a=r(274),o=r(299);n(n.S,"Promise",{try:function(t){var e=a.f(this),r=o(t);return(r.e?e.reject:e.resolve)(r.v),e.promise}})},function(t,e,r){var n=r(111),a=r(28),o=n.key,i=n.set;n.exp({defineMetadata:function(t,e,r,n){i(t,e,a(r),o(n))}})},function(t,e,r){var n=r(111),a=r(28),o=n.key,i=n.map,u=n.store;n.exp({deleteMetadata:function(t,e){var r=arguments.length<3?void 0:o(arguments[2]),n=i(a(e),r,!1);if(void 0===n||!n.delete(t))return!1;if(n.size)return!0;var v=u.get(e);return v.delete(r),!!v.size||u.delete(e)}})},function(t,e,r){var n=r(111),a=r(28),o=r(76),i=n.has,u=n.get,v=n.key,s=function t(e,r,n){if(i(e,r,n))return u(e,r,n);var a=o(r);return null!==a?t(e,a,n):void 0};n.exp({getMetadata:function(t,e){return s(t,a(e),arguments.length<3?void 0:v(arguments[2]))}})},function(t,e,r){var n=r(303),a=r(312),o=r(111),i=r(28),u=r(76),v=o.keys,s=o.key,c=function t(e,r){var o=v(e,r),i=u(e);if(null===i)return o;var s=t(i,r);return s.length?o.length?a(new n(o.concat(s))):s:o};o.exp({getMetadataKeys:function(t){return c(i(t),arguments.length<2?void 0:s(arguments[1]))}})},function(t,e,r){var n=r(111),a=r(28),o=n.get,i=n.key;n.exp({getOwnMetadata:function(t,e){return o(t,a(e),arguments.length<3?void 0:i(arguments[2]))}})},function(t,e,r){var n=r(111),a=r(28),o=n.keys,i=n.key;n.exp({getOwnMetadataKeys:function(t){return o(a(t),arguments.length<2?void 0:i(arguments[1]))}})},function(t,e,r){var n=r(111),a=r(28),o=r(76),i=n.has,u=n.key,v=function t(e,r,n){if(i(e,r,n))return!0;var a=o(r);return null!==a&&t(e,a,n)};n.exp({hasMetadata:function(t,e){return v(t,a(e),arguments.length<3?void 0:u(arguments[2]))}})},function(t,e,r){var n=r(111),a=r(28),o=n.has,i=n.key;n.exp({hasOwnMetadata:function(t,e){return o(t,a(e),arguments.length<3?void 0:i(arguments[2]))}})},function(t,e,r){var n=r(111),a=r(28),o=r(58),i=n.key,u=n.set;n.exp({metadata:function(t,e){return function(r,n){u(t,e,(void 0!==n?a:o)(r),i(n))}}})},function(t,e,r){var n=r(11),a=r(273)(),o=r(31).process,i="process"==r(86)(o);n(n.G,{asap:function(t){var e=i&&o.domain;a(e?e.bind(t):t)}})},function(t,e,r){"use strict";var n=r(11),a=r(31),o=r(84),i=r(273)(),u=r(36)("observable"),v=r(58),s=r(28),c=r(138),P=r(140),l=r(65),f=r(139),d=f.RETURN,p=function(t){return null==t?void 0:v(t)},b=function(t){var e=t._c;e&&(t._c=void 0,e())},h=function(t){return void 0===t._o},y=function(t){h(t)||(t._o=void 0,b(t))},m=function(t,e){s(t),this._c=void 0,this._o=t,t=new g(this);try{var r=e(t),n=r;null!=r&&("function"==typeof r.unsubscribe?r=function(){n.unsubscribe()}:v(r),this._c=r)}catch(e){return void t.error(e)}h(this)&&b(this)};m.prototype=P({},{unsubscribe:function(){y(this)}});var g=function(t){this._s=t};g.prototype=P({},{next:function(t){var e=this._s;if(!h(e)){var r=e._o;try{var n=p(r.next);if(n)return n.call(r,t)}catch(t){try{y(e)}finally{throw t}}}},error:function(t){var e=this._s;if(h(e))throw t;var r=e._o;e._o=void 0;try{var n=p(r.error);if(!n)throw t;t=n.call(r,t)}catch(t){try{b(e)}finally{throw t}}return b(e),t},complete:function(t){var e=this._s;if(!h(e)){var r=e._o;e._o=void 0;try{var n=p(r.complete);t=n?n.call(r,t):void 0}catch(t){try{b(e)}finally{throw t}}return b(e),t}}});var T=function(t){c(this,T,"Observable","_f")._f=v(t)};P(T.prototype,{subscribe:function(t){return new m(t,this._f)},forEach:function(t){var e=this;return new(o.Promise||a.Promise)((function(r,n){v(t);var a=e.subscribe({next:function(e){try{return t(e)}catch(t){n(t),a.unsubscribe()}},error:n,complete:r})}))}}),P(T,{from:function(t){var e="function"==typeof this?this:T,r=p(s(t)[u]);if(r){var n=s(r.call(t));return n.constructor===e?n:new e((function(t){return n.subscribe(t)}))}return new e((function(e){var r=!1;return i((function(){if(!r){try{if(f(t,!1,(function(t){if(e.next(t),r)return d}))===d)return}catch(t){if(r)throw t;return void e.error(t)}e.complete()}})),function(){r=!0}}))},of:function(){for(var t=0,e=arguments.length,r=new Array(e);t<e;)r[t]=arguments[t++];return new("function"==typeof this?this:T)((function(t){var e=!1;return i((function(){if(!e){for(var n=0;n<r.length;++n)if(t.next(r[n]),e)return;t.complete()}})),function(){e=!0}}))}}),l(T.prototype,u,(function(){return this})),n(n.G,{Observable:T}),r(137)("Observable")},function(t,e,r){var n=r(31),a=r(11),o=r(200),i=[].slice,u=/MSIE .\./.test(o),v=function(t){return function(e,r){var n=arguments.length>2,a=!!n&&i.call(arguments,2);return t(n?function(){("function"==typeof e?e:Function(e)).apply(this,a)}:e,r)}};a(a.G+a.B+a.F*u,{setTimeout:v(n.setTimeout),setInterval:v(n.setInterval)})},function(t,e,r){var n=r(11),a=r(272);n(n.G+n.B,{setImmediate:a.set,clearImmediate:a.clear})},function(t,e,r){for(var n=r(269),a=r(133),o=r(66),i=r(31),u=r(65),v=r(152),s=r(36),c=s("iterator"),P=s("toStringTag"),l=v.Array,f={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},d=a(f),p=0;p<d.length;p++){var b,h=d[p],y=f[h],m=i[h],g=m&&m.prototype;if(g&&(g[c]||u(g,c,l),g[P]||u(g,P,h),v[h]=l,y))for(b in n)g[b]||o(g,b,n[b],!0)}},function(t,e,r){(function(t,e){function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t){"use strict";var n=Object.prototype,a=n.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",u=o.asyncIterator||"@@asyncIterator",v=o.toStringTag||"@@toStringTag",s="object"===r(e),c=t.regeneratorRuntime;if(c)s&&(e.exports=c);else{(c=t.regeneratorRuntime=s?e.exports:{}).wrap=b;var P={},l={};l[i]=function(){return this};var f=Object.getPrototypeOf,d=f&&f(f(O([])));d&&d!==n&&a.call(d,i)&&(l=d);var p=g.prototype=y.prototype=Object.create(l);m.prototype=p.constructor=g,g.constructor=m,g[v]=m.displayName="GeneratorFunction",c.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===m||"GeneratorFunction"===(e.displayName||e.name))},c.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,g):(t.__proto__=g,v in t||(t[v]="GeneratorFunction")),t.prototype=Object.create(p),t},c.awrap=function(t){return{__await:t}},T(j.prototype),j.prototype[u]=function(){return this},c.AsyncIterator=j,c.async=function(t,e,r,n){var a=new j(b(t,e,r,n));return c.isGeneratorFunction(e)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},T(p),p[v]="Generator",p[i]=function(){return this},p.toString=function(){return"[object Generator]"},c.keys=function(t){var e=[];for(var r in t)e.push(r);return e.reverse(),function r(){for(;e.length;){var n=e.pop();if(n in t)return r.value=n,r.done=!1,r}return r.done=!0,r}},c.values=O,x.prototype={constructor:x,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(D),!t)for(var e in this)"t"===e.charAt(0)&&a.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(r,n){return i.type="throw",i.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var u=a.call(o,"catchLoc"),v=a.call(o,"finallyLoc");if(u&&v){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(u){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!v)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&a.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=t,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,P):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),P},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),D(r),P}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var a=n.arg;D(r)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:O(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),P}}}function b(t,e,r,n){var a=e&&e.prototype instanceof y?e:y,o=Object.create(a.prototype),i=new x(n||[]);return o._invoke=function(t,e,r){var n="suspendedStart";return function(a,o){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===a)throw o;return{value:void 0,done:!0}}for(r.method=a,r.arg=o;;){var i=r.delegate;if(i){var u=z(i,r);if(u){if(u===P)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var v=h(t,e,r);if("normal"===v.type){if(n=r.done?"completed":"suspendedYield",v.arg===P)continue;return{value:v.arg,done:r.done}}"throw"===v.type&&(n="completed",r.method="throw",r.arg=v.arg)}}}(t,r,i),o}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}function y(){}function m(){}function g(){}function T(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function j(e){function n(t,o,i,u){var v=h(e[t],e,o);if("throw"!==v.type){var s=v.arg,c=s.value;return c&&"object"===r(c)&&a.call(c,"__await")?Promise.resolve(c.__await).then((function(t){n("next",t,i,u)}),(function(t){n("throw",t,i,u)})):Promise.resolve(c).then((function(t){s.value=t,i(s)}),u)}u(v.arg)}var o;"object"===r(t.process)&&t.process.domain&&(n=t.process.domain.bind(n)),this._invoke=function(t,e){function r(){return new Promise((function(r,a){n(t,e,r,a)}))}return o=o?o.then(r,r):r()}}function z(t,e){var r=t.iterator[e.method];if(void 0===r){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,z(t,e),"throw"===e.method))return P;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return P}var n=h(r,t.iterator,e.arg);if("throw"===n.type)return e.method="throw",e.arg=n.arg,e.delegate=null,P;var a=n.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,P):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,P)}function w(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function D(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function x(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(w,this),this.reset(!0)}function O(t){if(t){var e=t[i];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,n=function e(){for(;++r<t.length;)if(a.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return n.next=n}}return{next:L}}function L(){return{value:void 0,done:!0}}}("object"===(void 0===t?"undefined":r(t))?t:"object"===("undefined"==typeof window?"undefined":r(window))?window:"object"===("undefined"==typeof self?"undefined":r(self))?self:this)}).call(this,r(148),r(118)(t))},function(t,e,r){r(584),t.exports=r(84).RegExp.escape},function(t,e,r){var n=r(11),a=r(585)(/[\\^$*+?.()|[\]{}]/g,"\\$&");n(n.S,"RegExp",{escape:function(t){return a(t)}})},function(t,e){t.exports=function(t,e){var r=e===Object(e)?function(t){return e[t]}:e;return function(e){return String(e).replace(t,r)}}},function(t,e,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),a=this&&this.__exportStar||function(t,e){for(var r in t)"default"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.Mask=e.VideoEffectProvider=e.getVersion=e.MaskPropagationRenderer=e.DilateRenderer=e.Globals=e.ConfigProvider=e.BlurRenderer=void 0,a(r(206),e);var o=r(314);Object.defineProperty(e,"BlurRenderer",{enumerable:!0,get:function(){return o.BlurRenderer}});var i=r(315);Object.defineProperty(e,"ConfigProvider",{enumerable:!0,get:function(){return i.ConfigProvider}});var u=r(316);Object.defineProperty(e,"Globals",{enumerable:!0,get:function(){return u.Globals}});var v=r(317);Object.defineProperty(e,"DilateRenderer",{enumerable:!0,get:function(){return v.DilateRenderer}});var s=r(318);Object.defineProperty(e,"MaskPropagationRenderer",{enumerable:!0,get:function(){return s.MaskPropagationRenderer}});var c=r(319);Object.defineProperty(e,"getVersion",{enumerable:!0,get:function(){return c.getVersion}});var P=r(588);Object.defineProperty(e,"VideoEffectProvider",{enumerable:!0,get:function(){return P.VideoEffectProvider}});var l=r(363);Object.defineProperty(e,"Mask",{enumerable:!0,get:function(){return l.Mask}})},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.EventSourceImpl=void 0;var n=r(184),a=function(){function t(t){this.subscriptions=[],this.eventLogger=t}return t.prototype.subscribe=function(t){return new o(this.subscriptions,t)},t.prototype.dispose=function(t){this.subscriptions=[]},t.prototype.raiseEvents=function(t){var e=this;this.subscriptions.slice().forEach((function(r){try{void 0!==r.eventHandler&&t(r.eventHandler)}catch(t){e.eventLogger&&e.eventLogger.warn&&e.eventLogger.warn("Event handler exception caught!",t)}}))},t}();e.EventSourceImpl=a;var o=function(){function t(t,e){this.subscriptions=t,this.eventHandler=e,this.subscriptions.push(this)}return t.prototype.dispose=function(){var t=this;n.remove(this.subscriptions,(function(e){return e===t})),this.eventHandler=void 0},t}()},function(t,e,r){"use strict";var n,a=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),o=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(a,o){function i(t){try{v(n.next(t))}catch(t){o(t)}}function u(t){try{v(n.throw(t))}catch(t){o(t)}}function v(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,u)}v((n=n.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var r,n,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,n=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=e.call(t,i)}catch(t){o=[6,t],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.VideoEffectProvider=void 0;var u=r(206),v=r(315),s=r(276),c=r(319),P=r(589),l=r(591),f=r(608),d=r(621),p=r(623),b=function(t){function e(e){var r=t.call(this)||this;return r.logger=e,r.streamProcessorId=0,r.configProvider=new v.ConfigProvider,r.stats=new l.Statistics(r.configProvider,r.logger.createChild("Stats")),r.sourceRegistry=new p.SourceRegistry(r.logger.createChild("Registry")),r.qualityMonitor=new P.QualityMonitor(r.stats,r.configProvider,r.logger.createChild("QualityMonitor")),r.currentEffect=r.getEffectForType(u.VideoEffectType.Off),r.qualityMonitor.on("onQualityChanged",(function(t){return r.onQualityChanged(t)})),r}return a(e,t),e.prototype.disposeAsync=function(){return o(this,void 0,void 0,(function(){return i(this,(function(t){return this.logger.info("API called: DisposeAsync called"),this.currentEffect.dispose(),this.qualityMonitor.dispose(),this.stopProcessorIfAny(),[2]}))}))},e.prototype.configureModel=function(t){return o(this,void 0,void 0,(function(){return i(this,(function(e){return this.logger.info("API called: ConfigureModel called with config: "+JSON.stringify(t)),this.configProvider.setModelConfig(t),[2]}))}))},e.prototype.configureEffect=function(t){return o(this,void 0,void 0,(function(){return i(this,(function(e){return this.logger.info("API called: ConfigureEffect called with config: "+JSON.stringify(t)),this.configProvider.setEffectConfig(t),[2]}))}))},e.prototype.configureStreamProcessor=function(t){return o(this,void 0,void 0,(function(){return i(this,(function(e){return this.logger.info("API called: ConfigureStreamProcessor called with config: "+JSON.stringify(t)),this.configProvider.setQualityConfig(t),[2]}))}))},e.prototype.configure=function(t){return o(this,void 0,void 0,(function(){return i(this,(function(e){return this.logger.info("API called: configureWebcv called with config: "+JSON.stringify(t)),this.configProvider.setConfig(t),[2]}))}))},e.prototype.configureGlobals=function(t,e){return o(this,void 0,void 0,(function(){return i(this,(function(r){return[2,this.configProvider.globals.update(t,e)]}))}))},e.prototype.getCapability=function(){return o(this,void 0,void 0,(function(){return i(this,(function(t){return this.logger.info("API called: GetCapability called"),[2,[u.VideoEffectType.BackgroundBlur,u.VideoEffectType.BackgroundReplacement,u.VideoEffectType.Off]]}))}))},e.prototype.setEffectAsync=function(t){return o(this,void 0,void 0,(function(){var e;return i(this,(function(r){return this.logger.info("API called: SetEffectAsync called with effectType: "+t),this.currentEffect.effectType===t?(this.logger.debug("Effect with type "+t+" is already set"),[2]):(e=this.currentEffect.effectType,this.currentEffect.dispose(),this.currentEffect=this.getEffectForType(t),this.currentEffect.effectType===u.VideoEffectType.Off&&this.stopProcessorIfAny(),this.streamProcessor&&this.streamProcessor.setEffect(this.currentEffect),(e===u.VideoEffectType.Off&&this.currentEffect.effectType!==u.VideoEffectType.Off||e!==u.VideoEffectType.Off&&this.currentEffect.effectType===u.VideoEffectType.Off)&&this.event("onEffectApplied").raise(this.currentEffect.effectType),[2])}))}))},e.prototype.setSourceAsync=function(t){return o(this,void 0,void 0,(function(){var e;return i(this,(function(r){switch(r.label){case 0:return this.logger.info("API called: SetSourceAsync called with streamId: "+(t?t.id:"Null")),this.currentEffect.effectType===u.VideoEffectType.Off?(this.logger.info("Effect is not provided"),this.stopProcessorIfAny(),[2,t]):this.sourceRegistry.isCurrentSourceUsed(t.id)?(this.logger.debug("Current source is already used, "+t.id),[2,t]):(this.stopProcessorIfAny(),[4,this.ensureStreamProcessorInitialized()]);case 1:return r.sent(),this.streamProcessor.setEffect(this.currentEffect),[4,this.streamProcessor.start(t)];case 2:return e=r.sent(),this.sourceRegistry.registerSource(t.id,e.id),[2,e]}}))}))},e.prototype.removeSourceAsync=function(t){return o(this,void 0,void 0,(function(){return i(this,(function(e){return this.logger.info("API called: RemoveSourceAsync called with streamId: "+(t?t.id:"Null")),this.sourceRegistry.isCurrentSourceUsed(t.id)?(this.logger.debug("Removing processor for currently used stream: "+t.id),this.stopProcessorIfAny(),[2]):(this.logger.debug("Source is not in current use: "+t.id),[2])}))}))},e.prototype.getStatsAsync=function(){return o(this,void 0,void 0,(function(){return i(this,(function(t){return[2,this.stats.getLatestStats()]}))}))},e.prototype.getStats=function(){return this.stats.getLatestStats()},e.prototype.getCurrentStats=function(){return this.stats.getCurrentStats()},e.prototype.getVersion=function(){return c.getVersion()},e.prototype.stopProcessorIfAny=function(){this.streamProcessor?(this.streamProcessor.dispose(),this.streamProcessor=null,this.logger.info("Stream processor is stopped"),this.event("onEffectStopped").raise()):this.logger.info("Stream processor is already stopped")},e.prototype.ensureStreamProcessorInitialized=function(){return o(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return this.streamProcessor?[2]:(this.logger.info("Starting video effect processor"),this.streamProcessor=new f.StreamProcessor(this.stats,this.configProvider,this.logger.createChild("StreamProcessor:"+this.streamProcessorId++),this.qualityMonitor),[4,this.streamProcessor.init()]);case 1:return t.sent(),[2]}}))}))},e.prototype.getEffectForType=function(t){return d.VideoEffectFactory.getEffectForType(t,this.configProvider,this.logger)},e.prototype.onQualityChanged=function(t){this.event("onVideoEffectQualityChanged").raise({message:t.message,effectType:this.currentEffect.effectType})},e}(s.ObservableBase);e.VideoEffectProvider=b},function(t,e,r){"use strict";var n,a=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)});Object.defineProperty(e,"__esModule",{value:!0}),e.QualityMonitor=void 0;var o=r(276),i=r(590),u=function(t){function e(e,r,n){var a=t.call(this)||this;return a.stats=e,a.configProvider=r,a.logger=n,a.intervalDuration=1e3,a.counterLimit=0,a.avgFps=0,a.counter=0,a.fpsStats=0,a.qualityNotificationSent=!1,a.improvementFpsThresholdPercent=0,a.checkStats=function(){var t;if(a.counter===a.counterLimit)a.avgFps=a.fpsStats/a.counter,a.counter=0,a.fpsStats=0,a.checkQuality();else{var e=null===(t=a.stats.getCurrentSession())||void 0===t?void 0:t.getStats().processor.fps;e>0&&(a.fpsStats+=e,a.counter++)}},a.checkQuality=function(){var t=a.profileGenerator.getActiveProfileLevel();if(t)if(a.logger.debug("QualityMonitor: current profile "+JSON.stringify(t)),a.avgFps<t.fps.min)a.reduceQuality(t);else{var e=t.fps.max-t.fps.max*a.improvementFpsThresholdPercent/100;a.avgFps>=e&&!a.configProvider.globals.document.hidden&&a.improveQuality()}},a.profileGenerator=new i.ProfileLevelGenerator(a.configProvider,a.logger.createChild("ProfileGtor")),a.updateConfig(),a.configSub=a.configProvider.on("onConfigChanged",(function(){return a.updateConfig()})),a}return a(e,t),e.prototype.setStreamResolution=function(t){this.profileGenerator.setStreamResolution(t)},e.prototype.getCurrentProfile=function(){return this.profileGenerator.getActiveProfileLevel()},e.prototype.start=function(){this.logger.debug("Starting..."),this.qualityStats=this.stats.getCurrentSession().getProcessorStats().getQualityStats(),this.statsTimeout=this.configProvider.globals.window.setInterval(this.checkStats,this.intervalDuration)},e.prototype.stop=function(){this.configProvider.globals.window.clearInterval(this.statsTimeout),this.resetStats(),this.logger.debug("Stopped")},e.prototype.dispose=function(){var t;this.profileGenerator.dispose(),null===(t=this.configSub)||void 0===t||t.dispose()},e.prototype.resetStats=function(){this.avgFps=0,this.counter=0,this.fpsStats=0,this.qualityNotificationSent=!1},e.prototype.updateCurrentProfile=function(){var t,e=this.profileGenerator.getActiveProfileLevel();null===(t=this.qualityStats)||void 0===t||t.logProfileLevel(e),this.logger.debug("QualityMonitor: Setting new profile: "+JSON.stringify(e)),this.event("onReconfigureRequired").raise({profile:e})},e.prototype.reduceQuality=function(t){var e,r;if(this.profileGenerator.selectLowerProfile())null===(e=this.qualityStats)||void 0===e||e.logQualityReduced(),this.updateCurrentProfile();else if(null===(r=this.qualityStats)||void 0===r||r.logLowestHit(),!this.qualityNotificationSent){var n="Not compliant to the lowest profile: "+JSON.stringify(t);this.logger.error(n),this.event("onQualityChanged").raise({message:n}),this.qualityNotificationSent=!0}},e.prototype.improveQuality=function(){var t,e;this.profileGenerator.selectHigherProfile()?(null===(t=this.qualityStats)||void 0===t||t.logQualityImproved(),this.qualityNotificationSent=!1,this.updateCurrentProfile()):null===(e=this.qualityStats)||void 0===e||e.logHighestHit()},e.prototype.updateConfig=function(){var t=this.configProvider.webcvConfig.qualityConfig;this.counterLimit=t.statsIntervalSec,this.improvementFpsThresholdPercent=t.improvementFpsThresholdPercent,this.updateCurrentProfile()},e}(o.ObservableBase);e.QualityMonitor=u},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ProfileLevelGenerator=void 0;var n=function(){function t(t,e){var r=this;this.configProvider=t,this.logger=e,this.isPortrait=!1,this.maxResolutionHeight=1080,this.updateConfig(),this.configSub=t.on("onConfigChanged",(function(){return r.updateConfig()}))}return t.prototype.dispose=function(){var t;null===(t=this.configSub)||void 0===t||t.dispose()},t.prototype.setStreamResolution=function(t){this.isPortrait=t.width<t.height,this.updateLadder(t.height),this.setProfileLadder(),this.logger.debug("Set stream resolution: "+JSON.stringify(t))},t.prototype.getActiveProfileLevel=function(){var t=this.profileLadder[this.currentProfileIndex];return{resolution:t.resolution,fps:t.fps}},t.prototype.selectLowerProfile=function(){return this.currentProfileIndex!==this.profileLadder.length-1&&(this.currentProfileIndex++,!0)},t.prototype.selectHigherProfile=function(){return 0!==this.currentProfileIndex&&(this.currentProfileIndex--,!0)},t.prototype.setProfileLadder=function(){var t=this;this.profileLadder=this.configLadder.filter((function(e){return e.resolution.height<=t.maxResolutionHeight})),this.profileLadder.length||(this.profileLadder=[this.configLadder[this.configLadder.length-1]]),this.currentProfileIndex=this.profileLadder.findIndex((function(e){return e.resolution.height===t.initialLadderResolution})),this.currentProfileIndex<0&&(this.currentProfileIndex=0),this.logger.debug("Profile ladder is set to "+JSON.stringify(this.profileLadder))},t.prototype.updateConfig=function(){this.updateLadder(this.maxResolutionHeight),this.setProfileLadder()},t.prototype.updateLadder=function(t){var e,r,n=this;this.maxResolutionHeight=this.configProvider.webcvConfig.qualityConfig.outputResolution,this.initialLadderResolution=this.configProvider.webcvConfig.qualityConfig.initialLadderResolution,this.configLadder=this.configProvider.webcvConfig.qualityConfig.degradationLadder,this.isPortrait&&(this.maxResolutionHeight=(null===(e=this.configLadder.find((function(t){return t.resolution.height===n.maxResolutionHeight})))||void 0===e?void 0:e.resolution.width)||this.configLadder[0].resolution.width,this.initialLadderResolution=(null===(r=this.configLadder.find((function(t){return t.resolution.height===n.initialLadderResolution})))||void 0===r?void 0:r.resolution.width)||this.configLadder[0].resolution.width,this.configLadder=this.configLadder.map((function(t){return{fps:t.fps,resolution:{width:t.resolution.height,height:t.resolution.width}}}))),this.maxResolutionHeight=Math.min(this.maxResolutionHeight,t)},t}();e.ProfileLevelGenerator=n},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StreamProcessorStats=e.QualityStats=e.MemoryStats=e.SessionStats=e.Statistics=void 0;var n=r(0),a=r(184),o=function(){function t(){this.prev=0,this.ticks=0,this.crate=0,this.total=0,this.count=0}return t.prototype.tick=function(){var t=Date.now(),e=t-t%1e3;e>this.prev?(this.prev=e,this.crate=this.ticks,this.ticks=1,this.total+=this.crate,this.count++):this.ticks++},t.prototype.getRate=function(){return this.crate},t.prototype.getAvgRate=function(){return this.count>0?Math.round(this.total/this.count*10)/10:0},t}(),i=function(){function t(){this.delta=0,this.start=0,this.counter=0}return t.prototype.startTimer=function(){this.start=Date.now()},t.prototype.stopTimer=function(){this.delta+=Date.now()-this.start,this.counter++},t.prototype.getAvgTimer=function(){return this.counter?Math.round(this.delta/this.counter*10)/10:0},t}(),u=function(){function t(t,e){this.configProvider=t,this.logger=e}return t.prototype.setConfig=function(t){this.profile=t},t.prototype.startSession=function(t){this.logger.debug("New stats session"),this.currentSession=new v(t,this.profile,this.configProvider)},t.prototype.stopSession=function(){this.currentSession&&(this.latestReport=this.currentSession.getStats(),this.currentSession=null,this.logger.debug("End stats session. Stats: "+JSON.stringify(this.latestReport)))},t.prototype.getCurrentSession=function(){return this.currentSession},t.prototype.getCurrentStats=function(){return this.currentSession.getStats()},t.prototype.getLatestStats=function(){return this.latestReport},t}();e.Statistics=u;var v=function(){function t(t,e,r){this.effectType=t,this.profile=e,this.configProvider=r,this.memoryStats=new s,this.processorStats=new P(this.configProvider),this.startTime=Date.now()}return t.prototype.getProcessorStats=function(){return this.processorStats},t.prototype.getMemoryStats=function(){return this.memoryStats},t.prototype.gatherFrameRate=function(){return this.processorStats.gatherRate()},t.prototype.startProcessingTimer=function(){this.processorStats.startTimer()},t.prototype.stopProcessingTimer=function(){this.processorStats.stopTimer()},t.prototype.startInit=function(){this.processorStats.startInit()},t.prototype.stopInit=function(){this.processorStats.stopInit()},t.prototype.setRenderer=function(t){this.renderer=t},t.prototype.getStats=function(){var t;return{startTime:this.startTime,duration:Date.now()-this.startTime,effect:this.effectType,profile:this.profile,memory:this.memoryStats.getStats(),processor:this.processorStats.getStats(),hardwareConcurrency:null===(t=this.configProvider.globals.window.navigator)||void 0===t?void 0:t.hardwareConcurrency,useInsertableStreams:this.configProvider.webcvConfig.useInsertableStreams,powerPreference:this.configProvider.webcvConfig.powerPreference,renderer:this.renderer,isMaskPropagationEnabled:this.configProvider.webcvConfig.qualityConfig.enableMaskPropagation,maskInterval:this.configProvider.webcvConfig.qualityConfig.maskPropagationFramesInterval}},t}();e.SessionStats=v;var s=function(){function t(){}return t.prototype.getStats=function(){var t=n.memory();return{memoryInBytes:t.numBytes,gpuInBytes:t.numBytesInGPU,tensors:t.numTensors}},t}();e.MemoryStats=s;var c=function(){function t(t){this.qualityImprovedTimes=0,this.qualityReducedTimes=0,this.highestProfileHitsTimes=0,this.lowestProfileHitsTimes=0,this.resolution={height:0,width:0},this.pLevelMax=t.baseConfig.stats.qualityStats.pLevelMax,this.pLevelMin=t.baseConfig.stats.qualityStats.pLevelMin}return t.prototype.logProfileLevel=function(t){var e=a.deepClone(t);t.resolution.height<this.pLevelMin.resolution.height&&(this.pLevelMin=e),t.resolution.height>this.pLevelMax.resolution.height&&(this.pLevelMax=e)},t.prototype.logHighestHit=function(){this.highestProfileHitsTimes++},t.prototype.logLowestHit=function(){this.lowestProfileHitsTimes++},t.prototype.logQualityReduced=function(){this.qualityReducedTimes++},t.prototype.logQualityImproved=function(){this.qualityImprovedTimes++},t.prototype.logResolution=function(t){this.resolution=a.deepClone(t)},t.prototype.getQualityReducedTimes=function(){return this.qualityReducedTimes},t.prototype.getQualityImprovedTimes=function(){return this.qualityImprovedTimes},t.prototype.getHighestHits=function(){return this.highestProfileHitsTimes},t.prototype.getLowestHits=function(){return this.lowestProfileHitsTimes},t.prototype.getMinProfile=function(){return this.pLevelMin},t.prototype.getMaxProfile=function(){return this.pLevelMax},t.prototype.getResolution=function(){return this.resolution},t}();e.QualityStats=c;var P=function(){function t(t){this.configProvider=t,this.rateCounter=new o,this.timeCounter=new i,this.initTimeCounter=new i,this.qualityStats=new c(t)}return t.prototype.gatherRate=function(){this.rateCounter.tick()},t.prototype.startTimer=function(){this.timeCounter.startTimer()},t.prototype.stopTimer=function(){this.timeCounter.stopTimer()},t.prototype.startInit=function(){this.initTimeCounter.startTimer()},t.prototype.stopInit=function(){this.initTimeCounter.stopTimer()},t.prototype.getQualityStats=function(){return this.qualityStats},t.prototype.getStats=function(){return{initTimeMs:this.initTimeCounter.getAvgTimer(),fps:this.rateCounter.getRate(),fpsAvg:this.rateCounter.getAvgRate(),processTimeAvgMs:this.timeCounter.getAvgTimer(),qualityImprovedTimes:this.qualityStats.getQualityImprovedTimes(),qualityReducedTimes:this.qualityStats.getQualityReducedTimes(),highestProfileHitsTimes:this.qualityStats.getHighestHits(),lowestProfileHitsTimes:this.qualityStats.getLowestHits(),pLevelMax:this.qualityStats.getMaxProfile(),pLevelMin:this.qualityStats.getMinProfile(),resolution:this.qualityStats.getResolution(),isOnBackground:this.configProvider.globals.document.hidden}},t}();e.StreamProcessorStats=P},function(t,e,r){"use strict";e.byteLength=function(t){var e=s(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){var e,r,n=s(t),i=n[0],u=n[1],v=new o(function(t,e,r){return 3*(e+r)/4-r}(0,i,u)),c=0,P=u>0?i-4:i;for(r=0;r<P;r+=4)e=a[t.charCodeAt(r)]<<18|a[t.charCodeAt(r+1)]<<12|a[t.charCodeAt(r+2)]<<6|a[t.charCodeAt(r+3)],v[c++]=e>>16&255,v[c++]=e>>8&255,v[c++]=255&e;return 2===u&&(e=a[t.charCodeAt(r)]<<2|a[t.charCodeAt(r+1)]>>4,v[c++]=255&e),1===u&&(e=a[t.charCodeAt(r)]<<10|a[t.charCodeAt(r+1)]<<4|a[t.charCodeAt(r+2)]>>2,v[c++]=e>>8&255,v[c++]=255&e),v},e.fromByteArray=function(t){for(var e,r=t.length,a=r%3,o=[],i=0,u=r-a;i<u;i+=16383)o.push(c(t,i,i+16383>u?u:i+16383));return 1===a?(e=t[r-1],o.push(n[e>>2]+n[e<<4&63]+"==")):2===a&&(e=(t[r-2]<<8)+t[r-1],o.push(n[e>>10]+n[e>>4&63]+n[e<<2&63]+"=")),o.join("")};for(var n=[],a=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,v=i.length;u<v;++u)n[u]=i[u],a[i.charCodeAt(u)]=u;function s(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function c(t,e,r){for(var a,o,i=[],u=e;u<r;u+=3)a=(t[u]<<16&16711680)+(t[u+1]<<8&65280)+(255&t[u+2]),i.push(n[(o=a)>>18&63]+n[o>>12&63]+n[o>>6&63]+n[63&o]);return i.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,r,n,a){var o,i,u=8*a-n-1,v=(1<<u)-1,s=v>>1,c=-7,P=r?a-1:0,l=r?-1:1,f=t[e+P];for(P+=l,o=f&(1<<-c)-1,f>>=-c,c+=u;c>0;o=256*o+t[e+P],P+=l,c-=8);for(i=o&(1<<-c)-1,o>>=-c,c+=n;c>0;i=256*i+t[e+P],P+=l,c-=8);if(0===o)o=1-s;else{if(o===v)return i?NaN:1/0*(f?-1:1);i+=Math.pow(2,n),o-=s}return(f?-1:1)*i*Math.pow(2,o-n)},e.write=function(t,e,r,n,a,o){var i,u,v,s=8*o-a-1,c=(1<<s)-1,P=c>>1,l=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:o-1,d=n?1:-1,p=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(u=isNaN(e)?1:0,i=c):(i=Math.floor(Math.log(e)/Math.LN2),e*(v=Math.pow(2,-i))<1&&(i--,v*=2),(e+=i+P>=1?l/v:l*Math.pow(2,1-P))*v>=2&&(i++,v/=2),i+P>=c?(u=0,i=c):i+P>=1?(u=(e*v-1)*Math.pow(2,a),i+=P):(u=e*Math.pow(2,P-1)*Math.pow(2,a),i=0));a>=8;t[r+f]=255&u,f+=d,u/=256,a-=8);for(i=i<<a|u,s+=a;s>0;t[r+f]=255&i,f+=d,i/=256,s-=8);t[r+f-d]|=128*p}},function(t,e){var r={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==r.call(t)}},function(t,e,r){"use strict";(function(t){var e=r(24);function n(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var a,o=function(){return r(596)},i=function(){function i(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),this.util=r(597),this.textEncoder=new this.util.TextEncoder}var u,v;return u=i,(v=[{key:"fetch",value:function(t,r){return null!=Object(e.c)().global.fetch?Object(e.c)().global.fetch(t,r):(null==a&&(a=o()),a(t,r))}},{key:"now",value:function(){var e=t.hrtime();return 1e3*e[0]+e[1]/1e6}},{key:"encode",value:function(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}},{key:"decode",value:function(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}])&&n(u.prototype,v),i}();Object(e.c)().get("IS_NODE")&&Object(e.c)().setPlatform("node",new i)}).call(this,r(208))},function(t,e){},function(t,e){},function(t,e,r){(function(t){var n;function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t,o,i){function u(t){var e,r=this,n=(e=4022871197,function(t){t=t.toString();for(var r=0;r<t.length;r++){var n=.02519603282416938*(e+=t.charCodeAt(r));n-=e=n>>>0,e=(n*=e)>>>0,e+=4294967296*(n-=e)}return 2.3283064365386963e-10*(e>>>0)});r.next=function(){var t=2091639*r.s0+2.3283064365386963e-10*r.c;return r.s0=r.s1,r.s1=r.s2,r.s2=t-(r.c=0|t)},r.c=1,r.s0=n(" "),r.s1=n(" "),r.s2=n(" "),r.s0-=n(t),r.s0<0&&(r.s0+=1),r.s1-=n(t),r.s1<0&&(r.s1+=1),r.s2-=n(t),r.s2<0&&(r.s2+=1),n=null}function v(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function s(t,e){var r=new u(t),n=e&&e.state,o=r.next;return o.int32=function(){return 4294967296*r.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,n&&("object"==a(n)&&v(n,r),o.state=function(){return v(r,{})}),o}o&&o.exports?o.exports=s:r(77)&&r(153)?void 0===(n=function(){return s}.call(e,r,e,o))||(o.exports=n):this.alea=s}(0,"object"==a(t)&&t,r(77))}).call(this,r(118)(t))},function(t,e,r){(function(t){var n;function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t,o,i){function u(t){var e=this,r="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:r+=t;for(var n=0;n<r.length+64;n++)e.x^=0|r.charCodeAt(n),e.next()}function v(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function s(t,e){var r=new u(t),n=e&&e.state,o=function(){return(r.next()>>>0)/4294967296};return o.double=function(){do{var t=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=r.next,o.quick=o,n&&("object"==a(n)&&v(n,r),o.state=function(){return v(r,{})}),o}o&&o.exports?o.exports=s:r(77)&&r(153)?void 0===(n=function(){return s}.call(e,r,e,o))||(o.exports=n):this.xor128=s}(0,"object"==a(t)&&t,r(77))}).call(this,r(118)(t))},function(t,e,r){(function(t){var n;function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t,o,i){function u(t){var e=this,r="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:r+=t;for(var n=0;n<r.length+64;n++)e.x^=0|r.charCodeAt(n),n==r.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function v(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function s(t,e){var r=new u(t),n=e&&e.state,o=function(){return(r.next()>>>0)/4294967296};return o.double=function(){do{var t=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=r.next,o.quick=o,n&&("object"==a(n)&&v(n,r),o.state=function(){return v(r,{})}),o}o&&o.exports?o.exports=s:r(77)&&r(153)?void 0===(n=function(){return s}.call(e,r,e,o))||(o.exports=n):this.xorwow=s}(0,"object"==a(t)&&t,r(77))}).call(this,r(118)(t))},function(t,e,r){(function(t){var n;function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t,a,o){function i(t){var e=this;e.next=function(){var t,r,n=e.x,a=e.i;return t=n[a],r=(t^=t>>>7)^t<<24,r^=(t=n[a+1&7])^t>>>10,r^=(t=n[a+3&7])^t>>>3,r^=(t=n[a+4&7])^t<<7,t=n[a+7&7],r^=(t^=t<<13)^t<<9,n[a]=r,e.i=a+1&7,r},function(t,e){var r,n=[];if(e===(0|e))n[0]=e;else for(e=""+e,r=0;r<e.length;++r)n[7&r]=n[7&r]<<15^e.charCodeAt(r)+n[r+1&7]<<13;for(;n.length<8;)n.push(0);for(r=0;r<8&&0===n[r];++r);for(8==r?n[7]=-1:n[r],t.x=n,t.i=0,r=256;r>0;--r)t.next()}(e,t)}function u(t,e){return e.x=t.x.slice(),e.i=t.i,e}function v(t,e){null==t&&(t=+new Date);var r=new i(t),n=e&&e.state,a=function(){return(r.next()>>>0)/4294967296};return a.double=function(){do{var t=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=r.next,a.quick=a,n&&(n.x&&u(n,r),a.state=function(){return u(r,{})}),a}a&&a.exports?a.exports=v:r(77)&&r(153)?void 0===(n=function(){return v}.call(e,r,e,a))||(a.exports=n):this.xorshift7=v}(0,"object"==a(t)&&t,r(77))}).call(this,r(118)(t))},function(t,e,r){(function(t){var n;function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t,a,o){function i(t){var e=this;e.next=function(){var t,r,n=e.w,a=e.X,o=e.i;return e.w=n=n+1640531527|0,r=a[o+34&127],t=a[o=o+1&127],r^=r<<13,t^=t<<17,r^=r>>>15,t^=t>>>12,r=a[o]=r^t,e.i=o,r+(n^n>>>16)|0},function(t,e){var r,n,a,o,i,u=[],v=128;for(e===(0|e)?(n=e,e=null):(e+="\0",n=0,v=Math.max(v,e.length)),a=0,o=-32;o<v;++o)e&&(n^=e.charCodeAt((o+32)%e.length)),0===o&&(i=n),n^=n<<10,n^=n>>>15,n^=n<<4,n^=n>>>13,o>=0&&(i=i+1640531527|0,a=0==(r=u[127&o]^=n+i)?a+1:0);for(a>=128&&(u[127&(e&&e.length||0)]=-1),a=127,o=512;o>0;--o)n=u[a+34&127],r=u[a=a+1&127],n^=n<<13,r^=r<<17,n^=n>>>15,r^=r>>>12,u[a]=n^r;t.w=i,t.X=u,t.i=a}(e,t)}function u(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function v(t,e){null==t&&(t=+new Date);var r=new i(t),n=e&&e.state,a=function(){return(r.next()>>>0)/4294967296};return a.double=function(){do{var t=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=r.next,a.quick=a,n&&(n.X&&u(n,r),a.state=function(){return u(r,{})}),a}a&&a.exports?a.exports=v:r(77)&&r(153)?void 0===(n=function(){return v}.call(e,r,e,a))||(a.exports=n):this.xor4096=v}(0,"object"==a(t)&&t,r(77))}).call(this,r(118)(t))},function(t,e,r){(function(t){var n;function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t,o,i){function u(t){var e=this,r="";e.next=function(){var t=e.b,r=e.c,n=e.d,a=e.a;return t=t<<25^t>>>7^r,r=r-n|0,n=n<<24^n>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^r,e.c=r=r-n|0,e.d=n<<16^r>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):r+=t;for(var n=0;n<r.length+20;n++)e.b^=0|r.charCodeAt(n),e.next()}function v(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function s(t,e){var r=new u(t),n=e&&e.state,o=function(){return(r.next()>>>0)/4294967296};return o.double=function(){do{var t=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=r.next,o.quick=o,n&&("object"==a(n)&&v(n,r),o.state=function(){return v(r,{})}),o}o&&o.exports?o.exports=s:r(77)&&r(153)?void 0===(n=function(){return s}.call(e,r,e,o))||(o.exports=n):this.tychei=s}(0,"object"==a(t)&&t,r(77))}).call(this,r(118)(t))},function(t,e,r){(function(t){var n;function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(o,i){var u,v=this,s=i.pow(256,6),c=i.pow(2,52),P=2*c;function l(t,e,r){var n=[],l=p(function t(e,r){var n,o=[],i=a(e);if(r&&"object"==i)for(n in e)try{o.push(t(e[n],r-1))}catch(t){}return o.length?o:"string"==i?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(o)]:null==t?function(){try{var t;return u&&(t=u.randomBytes)?t=t(256):(t=new Uint8Array(256),(v.crypto||v.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=v.navigator,r=e&&e.plugins;return[+new Date,v,r,v.screen,b(o)]}}():t,3),n),h=new f(n),y=function(){for(var t=h.g(6),e=s,r=0;t<c;)t=256*(t+r),e*=256,r=h.g(1);for(;t>=P;)t/=2,e/=2,r>>>=1;return(t+r)/e};return y.int32=function(){return 0|h.g(4)},y.quick=function(){return h.g(4)/4294967296},y.double=y,p(b(h.S),o),(e.pass||r||function(t,e,r,n){return n&&(n.S&&d(n,h),t.state=function(){return d(h,{})}),r?(i.random=t,e):t})(y,l,"global"in e?e.global:this==i,e.state)}function f(t){var e,r=t.length,n=this,a=0,o=n.i=n.j=0,i=n.S=[];for(r||(t=[r++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[o=255&o+t[a%r]+(e=i[a])],i[o]=e;(n.g=function(t){for(var e,r=0,a=n.i,o=n.j,i=n.S;t--;)e=i[a=255&a+1],r=256*r+i[255&(i[a]=i[o=255&o+e])+(i[o]=e)];return n.i=a,n.j=o,r})(256)}function d(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function p(t,e){for(var r,n=t+"",a=0;a<n.length;)e[255&a]=255&(r^=19*e[255&a])+n.charCodeAt(a++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=l,p(i.random(),o),"object"==a(t)&&t.exports){t.exports=l;try{u=r(605)}catch(t){}}else void 0===(n=function(){return l}.call(e,r,e,t))||(t.exports=n)}([],Math)}).call(this,r(118)(t))},function(t,e){},function(t,e,r){(function(t){var n=void 0!==t&&t||"undefined"!=typeof self&&self||window,a=Function.prototype.apply;function o(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new o(a.call(setTimeout,n,arguments),clearTimeout)},e.setInterval=function(){return new o(a.call(setInterval,n,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(n,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),e))},r(607),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,r(148))},function(t,e,r){(function(t,e){!function(t,r){"use strict";if(!t.setImmediate){var n,a,o,i,u,v=1,s={},c=!1,P=t.document,l=Object.getPrototypeOf&&Object.getPrototypeOf(t);l=l&&l.setTimeout?l:t,"[object process]"==={}.toString.call(t.process)?n=function(t){e.nextTick((function(){d(t)}))}:function(){if(t.postMessage&&!t.importScripts){var e=!0,r=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=r,e}}()?(i="setImmediate$"+Math.random()+"$",u=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(i)&&d(+e.data.slice(i.length))},t.addEventListener?t.addEventListener("message",u,!1):t.attachEvent("onmessage",u),n=function(e){t.postMessage(i+e,"*")}):t.MessageChannel?((o=new MessageChannel).port1.onmessage=function(t){d(t.data)},n=function(t){o.port2.postMessage(t)}):P&&"onreadystatechange"in P.createElement("script")?(a=P.documentElement,n=function(t){var e=P.createElement("script");e.onreadystatechange=function(){d(t),e.onreadystatechange=null,a.removeChild(e),e=null},a.appendChild(e)}):n=function(t){setTimeout(d,0,t)},l.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),r=0;r<e.length;r++)e[r]=arguments[r+1];var a={callback:t,args:e};return s[v]=a,n(v),v++},l.clearImmediate=f}function f(t){delete s[t]}function d(t){if(c)setTimeout(d,0,t);else{var e=s[t];if(e){c=!0;try{!function(t){var e=t.callback,r=t.args;switch(r.length){case 0:e();break;case 1:e(r[0]);break;case 2:e(r[0],r[1]);break;case 3:e(r[0],r[1],r[2]);break;default:e.apply(void 0,r)}}(e)}finally{f(t),c=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,r(148),r(208))},function(t,e,r){"use strict";var n=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(a,o){function i(t){try{v(n.next(t))}catch(t){o(t)}}function u(t){try{v(n.throw(t))}catch(t){o(t)}}function v(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,u)}v((n=n.apply(t,e||[])).next())}))},a=this&&this.__generator||function(t,e){var r,n,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,n=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=e.call(t,i)}catch(t){o=[6,t],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.StreamProcessor=void 0;var o=r(0),i=r(609),u=r(612),v=r(363),s=function(){function t(t,e,r,o){var i=this;this.stats=t,this.configProvider=e,this.logger=r,this.qualityMonitor=o,this.isDisposed=!1,this.onVideoFrame=function(t){return n(i,void 0,void 0,(function(){var e,r;return a(this,(function(n){switch(n.label){case 0:return this.isDisposed?[2]:t?[4,this.getTextureFromFrame(t)]:[3,2];case 1:return e=n.sent(),[3,4];case 2:return[4,this.getTextureFromVideo()];case 3:e=n.sent(),n.label=4;case 4:return e?((r=this.stats.getCurrentSession()).startProcessingTimer(),this.compositor.render(),r.stopProcessingTimer(),r.gatherFrameRate(),[2]):[2]}}))}))},this.maskWidth=this.configProvider.baseConfig.mask.maskWidth,this.maskHeight=this.configProvider.baseConfig.mask.maskHeight,this.maskPropagationEnabled=this.configProvider.webcvConfig.qualityConfig.enableMaskPropagation,this.maskPropagationFramesInterval=this.configProvider.webcvConfig.qualityConfig.maskPropagationFramesInterval,this.useInsertableStreams=this.configProvider.webcvConfig.useInsertableStreams,this.frameProvider=u.FrameProviderFactory.getFrameProvider(this.useInsertableStreams,this.logger,this.configProvider),this.configSub=this.configProvider.on("onConfigChanged",(function(){return i.updateConfig()}))}return t.prototype.init=function(){return n(this,void 0,void 0,(function(){var t=this;return a(this,(function(e){return this.logger.info("Init called with model config: "+JSON.stringify(this.configProvider.modelConfig)),this.qmSubs=this.qualityMonitor.on("onReconfigureRequired",(function(e){return t.onReconfigureRequired(e)})),[2]}))}))},t.prototype.setEffect=function(t){this.effect=t,this.compositor&&this.effect.initialize(this.compositor,this.currentResolution),this.stats.stopSession(),this.stats.startSession(this.effect.effectType)},t.prototype.start=function(t){return n(this,void 0,void 0,(function(){var e,r=this;return a(this,(function(n){switch(n.label){case 0:return this.logger.info("Start called with stream: "+t.id),this.stats.getCurrentSession().startInit(),this.currentResolution=this.getResolution(t),e=this.currentResolution.width<this.currentResolution.height,this.outputCanvas=this.createCanvasForOutputStream(this.currentResolution),this.compositor=new i.BabylonCompositor(this.outputCanvas,e?this.maskHeight:this.maskWidth,e?this.maskWidth:this.maskHeight,this.maskPropagationEnabled,this.maskPropagationFramesInterval),this.mask=new v.Mask(this.compositor.getEngine(),this.logger.createChild("Mask"),this.configProvider,this.stats),[4,this.mask.init(this.configProvider.modelConfig)];case 1:return n.sent(),this.compositor.addNewMaskRequestedCallback((function(t){r.mask.videoFrame(t,r.compositor.getMaskTexture())})),[4,this.effect.initialize(this.compositor,this.currentResolution)];case 2:return n.sent(),this.useInsertableStreams||this.compositor.setInputVideoStream(t,this.configProvider.globals),this.frameProvider.start(t,this.onVideoFrame),this.qualityMonitor.start(),this.stats.getCurrentSession().stopInit(),[2,this.outputCanvas.captureStream()]}}))}))},t.prototype.dispose=function(){this.logger.info("Dispose called"),this.isDisposed=!0,this.qmSubs.dispose(),this.qmSubs=null,this.qualityMonitor.stop(),this.qualityMonitor.dispose(),this.stats.stopSession(),this.stats=null,this.frameProvider.dispose(),this.frameProvider=null,this.mask.dispose(),this.mask=null,this.compositor.dispose(),this.compositor=null,this.configSub.dispose(),this.configSub=null,o.dispose(),this.effect=null,this.outputCanvas=null},t.prototype.updateConfig=function(){var t=this.configProvider.webcvConfig;this.useInsertableStreams=t.useInsertableStreams},t.prototype.onReconfigureRequired=function(t){var e=t.profile;this.logger.debug("New profile to apply: "+JSON.stringify(e)),e&&(this.outputCanvas.width=e.resolution.width,this.outputCanvas.height=e.resolution.height,this.frameProvider.setConfiguration(e.fps.max),this.stats.getCurrentSession().getProcessorStats().getQualityStats().logResolution(e.resolution))},t.prototype.createCanvasForOutputStream=function(t){var e=this.configProvider.globals.document.createElement("canvas");return e.width=t.width,e.height=t.height,e},t.prototype.getStreamResolution=function(t){var e=t.getVideoTracks()[0].getSettings();return e?{width:e.width,height:e.height}:(this.logger.error("Settings are not defined for media stream: "+t.id),null)},t.prototype.getResolution=function(t){var e=this.getStreamResolution(t);this.qualityMonitor.setStreamResolution(e);var r=this.qualityMonitor.getCurrentProfile();return this.stats.getCurrentSession().getProcessorStats().getQualityStats().logResolution(r.resolution),r.resolution},t.prototype.getTextureFromFrame=function(t){return n(this,void 0,void 0,(function(){var e,r;return a(this,(function(n){switch(n.label){case 0:return[4,createImageBitmap(t)];case 1:return e=n.sent(),r=this.compositor.uploadVideoBitmap(e),e.close(),[2,r]}}))}))},t.prototype.getTextureFromVideo=function(){return n(this,void 0,void 0,(function(){return a(this,(function(t){return[2,this.compositor.uploadVideo()]}))}))},t}();e.StreamProcessor=s},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BabylonCompositor=void 0,r(610),r(207),r(611);var n=r(83),a=r(154),o=r(63),i=r(186),u=r(71),v=r(184),s=r(314),c=r(317),P=r(318),l=r(359),f=r(360),d=r(361),p={x:.3,y:.8},b=function(){function t(t,e,r,o,i){this.framesUntilNextMask=0,this.compositingWrapper=null,this.videoTexture=null,this.propagationEnabled=o,this.maskPropagationFramesInterval=i,this.newMaskRequestedObserver=new u.Observable,this.engine=new n.ThinEngine(t,!1,{premultipliedAlpha:!1,stencil:!1,disableWebGL2Support:!1,preserveDrawingBuffer:!1}),this.engine.getCaps().parallelShaderCompile=null,this.stateManager=new f.BabylonStateManager(this.engine),this.effectRenderer=new a.EffectRenderer(this.engine),this.createRenderPipeline(e,r)}return t.IsSupported=function(){return n.ThinEngine.isSupported()},Object.defineProperty(t.prototype,"newMaskNeeded",{get:function(){return--this.framesUntilNextMask<=0&&(this.framesUntilNextMask=this.maskPropagationFramesInterval,!0)},enumerable:!1,configurable:!0}),t.prototype.dispose=function(){var t,e,r,n,a,o,i;null===(t=this.compositingWrapper)||void 0===t||t.dispose(),null===(e=this.effectRenderer)||void 0===e||e.dispose(),null===(r=this.videoTexture)||void 0===r||r.dispose(),null===(n=this.blurRenderer)||void 0===n||n.dispose(),null===(a=this.resizeRenderer)||void 0===a||a.dispose(),null===(o=this.engine)||void 0===o||o.dispose(),null===(i=this.backgroundTexture)||void 0===i||i.dispose(),this.videoElement&&this.videoElement.srcObject&&(this.videoElement.srcObject.getTracks().forEach((function(t){return t.stop()})),this.videoElement.srcObject=null),this.videoElement=null},t.prototype.setBackgroundImageType=function(t){this.backgroundImageType=t},t.prototype.setInputVideoStream=function(t,e){this.videoTexture&&this.videoTexture.dispose(),this.videoElement=v.createVideoElementForStream(t,e.document);var r=t.getVideoTracks()[0].getSettings(),n=r.width,a=r.height,o=this.engine.createDynamicTexture(n,a,!1,2);this.videoTexture=new i.ThinTexture(o),this.videoTexture.wrapU=0,this.videoTexture.wrapV=0},t.prototype.setBackgroundImage=function(t){this.backgroundTexture&&this.backgroundTexture.dispose();var e=this.engine.createTexture("bgImage",!0,!1,void 0,void 0,void 0,void 0,t);this.backgroundTexture=new i.ThinTexture(e)},t.prototype.uploadVideo=function(){if(this.videoTexture&&(this.engine.updateVideoTexture(this.videoTexture.getInternalTexture(),this.videoElement,!0),this.videoTexture.isReady()))return this.videoTexture},t.prototype.uploadVideoBitmap=function(t){if(!this.videoTexture){var e=this.engine.createTexture(null,!0,!1,null,2,void 0,void 0,t);this.videoTexture=new i.ThinTexture(e)}if(this.engine.updateDynamicTexture(this.videoTexture.getInternalTexture(),t),this.videoTexture.isReady())return this.videoTexture},t.prototype.render=function(){this.stateManager.resetBabylonState();var t,e=this.shapeTexture;if(this.maskPropagation?(this.newMaskNeeded?(this.newMaskRequestedObserver.notifyObservers(this.videoTexture),this.maskPropagation.bootstrap(this.videoTexture,e)):this.maskPropagation.update(this.videoTexture),e=this.maskPropagation.maskTexture,this.dilateRenderer.dilate(e,!1),this.dilateRenderer.dilate(e,!1),this.dilateRenderer.dilate(e,!0),this.dilateRenderer.dilate(e,!0)):this.newMaskRequestedObserver.notifyObservers(this.videoTexture),this.backgroundImageType===d.BackgroundTypes.Blur&&(t=this.blurRenderer.blur(this.videoTexture,this.shapeTexture)),this.maskPropagation&&this.blurRenderer.blur(e,void 0,!0,!0),this.effectRenderer.applyEffectWrapper(this.compositingWrapper),this.effectRenderer.setViewport(),this.compositingWrapper.effect.setVector2("contrastLimits",p),this.compositingWrapper.effect.setTexture("videoSampler",this.videoTexture),this.compositingWrapper.effect.setTexture("shapeSampler",e),this.backgroundImageType===d.BackgroundTypes.None)throw Error("Without backgrounds, recording the video directly would be faster");this.backgroundImageType===d.BackgroundTypes.Image?this.compositingWrapper.effect.setTexture("backgroundSampler",this.backgroundTexture):this.backgroundImageType===d.BackgroundTypes.Blur&&this.compositingWrapper.effect.setTexture("backgroundSampler",t),this.effectRenderer.draw()},t.prototype.getEngine=function(){return this.engine},t.prototype.getMaskTexture=function(){return this.shapeTexture},t.prototype.addNewMaskRequestedCallback=function(t){return this.newMaskRequestedObserver.add(t)},t.prototype.createRenderPipeline=function(t,e){this.resizeRenderer=new l.ResizeRenderer({engine:this.engine,effectRenderer:this.effectRenderer,width:t,height:e}),this.blurRenderer=new s.BlurRenderer({engine:this.engine,effectRenderer:this.effectRenderer,contrastLimits:p,blurTextureRatioPerPass:.5,blurWidth:2}),this.propagationEnabled&&(this.maskPropagation=new P.MaskPropagationRenderer({engine:this.engine,effectRenderer:this.effectRenderer}),this.dilateRenderer=new c.DilateRenderer({engine:this.engine,effectRenderer:this.effectRenderer,resolution:P.MaskPropagationRenderer.MaskResolution})),this.compositingWrapper=new a.EffectWrapper({engine:this.engine,name:"compositing",fragmentShader:"\n            varying vec2 vUV;\n\n            uniform sampler2D videoSampler;\n            uniform sampler2D shapeSampler;\n            uniform sampler2D backgroundSampler;\n\n            uniform vec2 contrastLimits;\n\n            void main(void) {\n                vec3 background = texture2D(backgroundSampler, vUV).rgb;\n                vec3 video = texture2D(videoSampler, vUV).rgb;\n\n                float limit = texture2D(shapeSampler, vUV).r;\n                limit = smoothstep(contrastLimits.x, contrastLimits.y, limit);\n\n                vec3 color = mix(background, video, limit);\n                gl_FragColor = vec4(color, 1.);\n            }\n        ",vertexShader:"\n            attribute vec2 position;\n\n            varying vec2 vUV;\n\n            const vec2 madd = vec2(0.5, 0.5);\n\n            void main(void) {\n                vUV = position * madd + madd;\n                vUV = vec2(vUV.x, 1. - vUV.y);\n                gl_Position = vec4(position, 0.0, 1.0);\n            }\n        ",samplerNames:["videoSampler","shapeSampler","backgroundSampler"],uniformNames:["contrastLimits"]});var r=new o.InternalTexture(this.engine,o.InternalTextureSource.Unknown,!0);this.shapeTexture=new i.ThinTexture(r)},t}();e.BabylonCompositor=b},function(t,e,r){"use strict";r.r(e);var n=r(83),a=r(63);n.ThinEngine.prototype.createDynamicTexture=function(t,e,r,o){var i=new a.InternalTexture(this,a.InternalTextureSource.Dynamic);return i.baseWidth=t,i.baseHeight=e,r&&(t=this.needPOTTextures?n.ThinEngine.GetExponentOfTwo(t,this._caps.maxTextureSize):t,e=this.needPOTTextures?n.ThinEngine.GetExponentOfTwo(e,this._caps.maxTextureSize):e),i.width=t,i.height=e,i.isReady=!1,i.generateMipMaps=r,i.samplingMode=o,this.updateTextureSamplingMode(o,i),this._internalTexturesCache.push(i),i},n.ThinEngine.prototype.updateDynamicTexture=function(t,e,r,n,a,o){if(void 0===n&&(n=!1),void 0===o&&(o=!1),t){var i=this._gl,u=i.TEXTURE_2D,v=this._bindTextureDirectly(u,t,!0,o);this._unpackFlipY(void 0===r?t.invertY:r),n&&i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1);var s=this._getWebGLTextureType(t.type),c=this._getInternalFormat(a||t.format),P=this._getRGBABufferInternalSizedFormat(t.type,c);i.texImage2D(u,0,P,c,s,e),t.generateMipMaps&&i.generateMipmap(u),v||this._bindTextureDirectly(u,null),n&&i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,0),t.isReady=!0}}},function(t,e,r){"use strict";r.r(e);var n=r(83),a=r(178);n.ThinEngine.prototype.updateVideoTexture=function(t,e,r){if(t&&!t._isDisabled){var n=this._bindTextureDirectly(this._gl.TEXTURE_2D,t,!0);this._unpackFlipY(!r);try{if(void 0===this._videoTextureSupported&&(this._gl.getError(),this._gl.texImage2D(this._gl.TEXTURE_2D,0,this._gl.RGBA,this._gl.RGBA,this._gl.UNSIGNED_BYTE,e),0!==this._gl.getError()?this._videoTextureSupported=!1:this._videoTextureSupported=!0),this._videoTextureSupported)this._gl.texImage2D(this._gl.TEXTURE_2D,0,this._gl.RGBA,this._gl.RGBA,this._gl.UNSIGNED_BYTE,e);else{if(!t._workingCanvas){t._workingCanvas=a.a.CreateCanvas(t.width,t.height);var o=t._workingCanvas.getContext("2d");if(!o)throw new Error("Unable to get 2d context");t._workingContext=o,t._workingCanvas.width=t.width,t._workingCanvas.height=t.height}t._workingContext.clearRect(0,0,t.width,t.height),t._workingContext.drawImage(e,0,0,e.videoWidth,e.videoHeight,0,0,t.width,t.height),this._gl.texImage2D(this._gl.TEXTURE_2D,0,this._gl.RGBA,this._gl.RGBA,this._gl.UNSIGNED_BYTE,t._workingCanvas)}t.generateMipMaps&&this._gl.generateMipmap(this._gl.TEXTURE_2D),n||this._bindTextureDirectly(this._gl.TEXTURE_2D,null),t.isReady=!0}catch(e){t._isDisabled=!0}}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FrameProviderFactory=void 0;var n=r(613),a=r(614);e.FrameProviderFactory={getFrameProvider:function(t,e,r){return t&&n.InsertableStreamsFrameProvider.isSupported(r.globals)?new n.InsertableStreamsFrameProvider(e.createChild("ISFrameProvider"),r):new a.RequestVideoFrameProvider(e.createChild("RVFrameProvider"),r)}}},function(t,e,r){"use strict";var n=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(a,o){function i(t){try{v(n.next(t))}catch(t){o(t)}}function u(t){try{v(n.throw(t))}catch(t){o(t)}}function v(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,u)}v((n=n.apply(t,e||[])).next())}))},a=this&&this.__generator||function(t,e){var r,n,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,n=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=e.call(t,i)}catch(t){o=[6,t],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.InsertableStreamsFrameProvider=void 0;var o=r(362),i=function(){function t(t,e){var r=this;this.logger=t,this.configProvider=e,this.paceController=new o.PaceController(this.logger),this.isDisposed=!1,this.readNextFrame=function(){return n(r,void 0,void 0,(function(){var t,e;return a(this,(function(r){switch(r.label){case 0:return this.paceController.shouldSkipFrame(Date.now())?[2]:[4,this.frameReader.read()];case 1:if(t=r.sent(),e=t.value,this.isDisposed)return e.close(),[2];try{this.callback(t.value)}finally{e.close()}return this.readNextFrame(),[2]}}))}))},this.logger.debug("Created"),this.setConfiguration(this.configProvider.webcvConfig.qualityConfig.outputFps.max)}return t.isSupported=function(t){return!!t.window.MediaStreamTrackProcessor},t.prototype.setConfiguration=function(t){var e=Math.round(1e3/t);this.paceController.setConfiguration(e)},t.prototype.start=function(t,e){var r=t.getVideoTracks()[0];this.videoTrackProcessor=new this.configProvider.globals.window.MediaStreamTrackProcessor({track:r,maxBufferSize:1}),this.frameReader=this.videoTrackProcessor.readable.getReader(),this.callback=e,this.readNextFrame()},t.prototype.dispose=function(){this.isDisposed=!0,this.callback=null,this.videoTrackProcessor=null,this.frameReader=null},t}();e.InsertableStreamsFrameProvider=i},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.RequestVideoFrameProvider=void 0;var n=r(184),a=r(362),o=r(615),i=function(){function t(t,e){this.globals=t,this.logger=e,this.logger.debug("Created");var r=o.WorkerBasedTimer.isSupported(this.globals);r?this.logger.debug("Worker based override setTimeout/clearTimeout is supported"):this.logger.debug("Cannot override setTimeout/clearTimeout. Fallback to window based. Delays may occure"),this.setIntervalProvider=r&&this.tryCreateWorker()||this.globals.window}return t.prototype.start=function(t,e){this.frameTimeout=e,this.callback=t,this.timeoutHandler=this.setIntervalProvider.setInterval(t,e)},t.prototype.stop=function(){this.setIntervalProvider.clearInterval(this.timeoutHandler)},t.prototype.setConfiguration=function(t){this.frameTimeout!==t&&(this.stop(),this.start(this.callback,t))},t.prototype.tryCreateWorker=function(){var t;try{t=new o.WorkerBasedTimer(this.globals,this.logger.createChild("Wrkr"))}catch(t){this.logger.error("Failed to initialize worker: "+JSON.stringify(t))}return t},t}(),u=function(){function t(t,e){this.globals=t,this.logger=e,this.paceController=new a.PaceController(this.logger)}return t.prototype.start=function(t,e){this.logger.debug("Started"),this.paceController.setConfiguration(e),this.callback=t,this.scheduleNextAnimatioFrame()},t.prototype.stop=function(){this.globals.window.cancelAnimationFrame(this.rafHandler),this.paceController=null,this.logger.debug("Stopped")},t.prototype.setConfiguration=function(t){this.paceController.setConfiguration(t)},t.prototype.scheduleNextAnimatioFrame=function(){var t=this;this.rafHandler=this.globals.window.requestAnimationFrame((function(e){t.paceController.shouldSkipFrame(e)||t.callback(),t.scheduleNextAnimatioFrame()}))},t}(),v=function(){function t(t,e){var r=this;this.logger=t,this.configProvider=e,this.visibilityListener=function(){r.currentTechnique&&r.currentTechnique.stop(),r.currentTechnique=r.configProvider.globals.document.hidden?new i(r.configProvider.globals,r.logger.createChild("Interval")):new u(r.configProvider.globals,r.logger.createChild("RAF")),r.currentTechnique.start(r.callback,r.frameTimeout)},this.currentTechnique=new u(this.configProvider.globals,this.logger),this.setConfiguration(this.configProvider.webcvConfig.qualityConfig.outputFps.max)}return t.prototype.setConfiguration=function(t){this.frameTimeout=Math.round(1e3/t),this.currentTechnique.setConfiguration(this.frameTimeout)},t.prototype.start=function(t,e){var r=this;if(e){var a=n.createVideoElementForStream(t,this.configProvider.globals.document);this.callback=e,this.configProvider.globals.document.addEventListener("visibilitychange",this.visibilityListener),a.requestVideoFrameCallback((function(){return r.currentTechnique.start(r.callback,r.frameTimeout)}))}else this.logger.error("Frame callback is not set. Skipping process")},t.prototype.dispose=function(){this.configProvider.globals.document.removeEventListener("visibilitychange",this.visibilityListener),this.currentTechnique.stop(),this.currentTechnique=null,this.callback=null},t}();e.RequestVideoFrameProvider=v},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.WorkerBasedTimer=void 0;var n=function(){function t(t,e){var r=this;this.globals=t,this.logger=e,this.timerId=1,this.workerMessageHandler=function(t){switch(t.data.type){case"ping":return r.onPing();case"setIntervalCompleted":return r.onSetIntervalCompleted(t.data.id);case"clearTimeoutCompleted":return r.onTimeoutClearCompleted(t.data.id);default:return void r.logger.debug("Msg from worker: "+JSON.stringify(t))}},this.workerErrorHandler=function(t){r.logger.error("Error from worker: "+JSON.stringify(t))},this.createWorker()}return t.isSupported=function(t){return Boolean(t.window.Worker&&Blob&&t.window.URL&&t.window.URL.createObjectURL)},t.prototype.setInterval=function(t,e,r){return this.timerData?(this.logger.error("Worker based timer is already in use"),null):(this.logger.debug("Starting id: "+this.timerId),this.timerData={id:this.timerId,callback:t,args:r},this.timeout=e,this.doWork.postMessage({next:!0,id:this.timerId,ms:this.timeout}),this.timerId)},t.prototype.clearInterval=function(t){t&&(this.logger.debug("Stopping id: "+t),this.doWork.postMessage({stop:!0,id:t}))},t.prototype.onSetIntervalCompleted=function(t){this.logger.debug("setInterval completed id: "+t)},t.prototype.onTimeoutClearCompleted=function(t){this.doWork?(this.timerData=null,this.doWork.removeEventListener("message",this.workerMessageHandler),this.doWork.removeEventListener("error",this.workerErrorHandler),this.doWork.terminate(),this.doWork=null,this.logger.debug("Stopped id: "+t)):this.logger.error("Worker is already terminated")},t.prototype.onPing=function(){var t;(null===(t=this.timerData)||void 0===t?void 0:t.callback)&&(this.timerData.callback(this.timerData.args),this.doWork.postMessage({next:!0,id:this.timerId,ms:this.timeout}))},t.prototype.createWorker=function(){try{var t=new Blob(["'use strict';\n                        var internalId;\n                        var externalId;\n                        (function () {\n                            onmessage = function (event) {\n                                if (event.data.next) {\n                                    externalId = event.data.id;\n                                    internalId = setTimeout(function () {\n                                        postMessage({ type: 'ping', id: externalId });\n                                    }, event.data.ms);\n                                } else if (event.data.stop) {\n                                    if (event.data.id === externalId) {\n                                        clearTimeout(internalId);\n                                    }\n                                    postMessage({ type: 'clearTimeoutCompleted', id: externalId });\n                                }\n                            };\n                        })();"],{type:"text/javascript"});this.doWork=new this.globals.window.Worker(this.globals.window.URL.createObjectURL(t)),this.doWork.addEventListener("message",this.workerMessageHandler),this.doWork.addEventListener("error",this.workerErrorHandler),this.logger.debug("Initialized")}catch(t){throw this.logger.debug("Worker creation failed: "+JSON.stringify(t)),t}},t}();e.WorkerBasedTimer=n},function(t,e,r){"use strict";var n=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(a,o){function i(t){try{v(n.next(t))}catch(t){o(t)}}function u(t){try{v(n.throw(t))}catch(t){o(t)}}function v(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,u)}v((n=n.apply(t,e||[])).next())}))},a=this&&this.__generator||function(t,e){var r,n,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,n=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=e.call(t,i)}catch(t){o=[6,t],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.SharedModelLoader=void 0;var o=r(364),i=r(624),u=r(0),v=r(617).default,s=r(618),c=function(){function t(){}return t.prototype.loadModel=function(t){return n(this,void 0,void 0,(function(){var e,r;return a(this,(function(n){switch(n.label){case 0:return e=this,t&&t.modelUrl?[4,this.loadRemoteModel(t)]:[3,2];case 1:return r=n.sent(),[3,4];case 2:return[4,this.loadEmbedModel()];case 3:r=n.sent(),n.label=4;case 4:return e.model=r,[2,this.model]}}))}))},t.prototype.unloadModel=function(){this.model&&(this.model.dispose(),this.model=null)},t.prototype.initializeBackend=function(t,e,r){return n(this,void 0,void 0,(function(){var n,i,v;return a(this,(function(a){switch(a.label){case 0:return n=t.getContext("webgl2",{powerPreference:e}),i=n&&n.getExtension("WEBGL_debug_renderer_info"),v=i&&n.getParameter(i.UNMASKED_RENDERER_WEBGL),null==r||r.getCurrentSession().setRenderer(v),o.setWebGLContext(2,n),[4,u.setBackend("webgl")];case 1:return a.sent(),[2]}}))}))},t.prototype.resetBackend=function(){u.engine().reset()},t.prototype.loadRemoteModel=function(t){return n(this,void 0,void 0,(function(){return a(this,(function(e){return[2,i.loadGraphModel(t.modelUrl,{weightPathPrefix:t.weightPathPrefix})]}))}))},t.prototype.loadEmbedModel=function(){return n(this,void 0,void 0,(function(){var t,e,r,n;return a(this,(function(a){return t=JSON.stringify(s),e=(new TextEncoder).encode(t),r=new Blob([e],{type:"application/json;charset=utf-8"}),n=URL.createObjectURL(r),[2,i.loadGraphModel(n,{weightUrlConverter:function(){return Promise.resolve(v)}})]}))}))},t}();e.SharedModelLoader=c},function(t,e,r){"use strict";r.r(e),e.default="data:application/octet-stream;base64,"},function(t){t.exports=JSON.parse('{"format":"graph-model","generatedBy":"2.1.0","convertedBy":"TensorFlow.js Converter v1.7.2","userDefinedMetadata":{"signature":{"outputs":{"output_tensor":{"name":"output_tensor"}}}},"modelTopology":{"node":[{"name":"person_mask/upsample_to_4x/ResizeBilinear/size","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_INT32","tensorShape":{"dim":[{"size":"2"}]}}},"dtype":{"type":"DT_INT32"}}},{"name":"person_mask/upsample_to_2x/ResizeBilinear/size","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_INT32","tensorShape":{"dim":[{"size":"2"}]}}},"dtype":{"type":"DT_INT32"}}},{"name":"input_tensor","op":"Placeholder","attr":{"dtype":{"type":"DT_FLOAT"},"shape":{"shape":{"dim":[{"size":"1"},{"size":"4"},{"size":"96"},{"size":"160"}]}}}},{"name":"transpose_to_nhwc/perm","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_INT32","tensorShape":{"dim":[{"size":"4"}]}}},"dtype":{"type":"DT_INT32"}}},{"name":"person_mask/upsample_to_2x/concat/axis","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_INT32","tensorShape":{}}},"dtype":{"type":"DT_INT32"}}},{"name":"person_mask/logits/weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"8"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/logits/biases","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"ResizeBilinear/size","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_INT32","tensorShape":{"dim":[{"size":"2"}]}}},"dtype":{"type":"DT_INT32"}}},{"name":"reshape_to_nchw/shape","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_INT32","tensorShape":{"dim":[{"size":"4"}]}}},"dtype":{"type":"DT_INT32"}}},{"name":"MobilenetV2/Conv/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"4"},{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/Conv/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_12/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"192"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv/depthwise/depthwise_weights","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"24"},{"size":"1"}]}}}}},{"name":"MobilenetV2/expanded_conv/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv/project/Conv2D_weights","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"24"},{"size":"12"}]}}}}},{"name":"MobilenetV2/expanded_conv/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"12"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_1/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"12"},{"size":"72"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_12/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"192"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_1/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"72"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/ll_conv/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"12"},{"size":"4"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/ll_conv/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"4"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_12/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"192"},{"size":"48"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_1/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"72"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_1/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"72"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_1/project/Conv2D_weights","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"72"},{"size":"12"}]}}}}},{"name":"MobilenetV2/expanded_conv_1/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"12"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_2/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"12"},{"size":"72"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_12/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"48"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_2/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"72"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_2/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"72"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_2/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"72"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_2/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"72"},{"size":"12"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_2/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"12"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_3/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"12"},{"size":"72"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"aspp/conv/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"48"},{"size":"192"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_3/expand/Conv2D_bn_offset","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"72"}]}}}}},{"name":"person_mask/upsample_to_2x/conv_1/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"8"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/ll_conv/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"12"},{"size":"16"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"aspp/conv/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"192"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/ll_conv/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"16"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_3/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"72"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_3/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"72"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_3/project/Conv2D_weights","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"72"},{"size":"24"}]}}}}},{"name":"MobilenetV2/expanded_conv_3/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_4/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"24"},{"size":"144"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/conv_0/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"192"},{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_4/expand/Conv2D_bn_offset","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"144"}]}}}}},{"name":"MobilenetV2/expanded_conv_4/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"144"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_4/depthwise/depthwise_bn_offset","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"144"}]}}}}},{"name":"MobilenetV2/expanded_conv_4/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"144"},{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/conv_0/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_4/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_5/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"24"},{"size":"144"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/conv_2/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"8"},{"size":"8"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_5/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"144"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_5/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"144"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_5/depthwise/depthwise_bn_offset","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"144"}]}}}}},{"name":"MobilenetV2/expanded_conv_5/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"144"},{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_5/project/Conv2D_bn_offset","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"24"}]}}}}},{"name":"MobilenetV2/expanded_conv_6/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"24"},{"size":"144"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_6/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"144"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/conv_1/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"40"},{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_6/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"144"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_6/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"144"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_6/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"144"},{"size":"36"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_6/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"36"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_7/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"36"},{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/conv_1/Conv2D_bn_offset","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"24"}]}}}}},{"name":"MobilenetV2/expanded_conv_7/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/conv_2/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"8"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_7/depthwise/depthwise_weights","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"216"},{"size":"1"}]}}}}},{"name":"MobilenetV2/expanded_conv_7/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_7/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"216"},{"size":"36"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_7/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"36"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_8/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"36"},{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/conv_2/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"24"},{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_8/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_8/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"216"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_8/depthwise/depthwise_bn_offset","op":"Const","attr":{"dtype":{"type":"DT_FLOAT"},"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"216"}]}}}}},{"name":"MobilenetV2/expanded_conv_8/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"216"},{"size":"36"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/conv_2/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"24"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_8/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"36"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_9/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"36"},{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_9/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_9/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"216"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_9/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_9/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"216"},{"size":"36"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_9/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"36"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_10/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"36"},{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/conv_0/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"24"},{"size":"8"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_10/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_10/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"216"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_10/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"216"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_10/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"216"},{"size":"48"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/conv_0/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"8"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_10/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"48"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"48"},{"size":"192"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"192"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/depthwise/depthwise_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"192"},{"size":"1"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/depthwise/depthwise_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"192"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/project/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"192"},{"size":"48"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/project/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"48"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_12/expand/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"1"},{"size":"1"},{"size":"48"},{"size":"192"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_12/expand/Conv2D_bn_offset","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"192"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/conv_1/Conv2D_weights","op":"Const","attr":{"value":{"tensor":{"dtype":"DT_FLOAT","tensorShape":{"dim":[{"size":"3"},{"size":"3"},{"size":"12"},{"size":"8"}]}}},"dtype":{"type":"DT_FLOAT"}}},{"name":"transpose_to_nhwc","op":"Transpose","input":["input_tensor","transpose_to_nhwc/perm"],"attr":{"T":{"type":"DT_FLOAT"},"Tperm":{"type":"DT_INT32"}}},{"name":"MobilenetV2/Conv/Relu","op":"_FusedConv2D","input":["transpose_to_nhwc","MobilenetV2/Conv/Conv2D_weights","MobilenetV2/Conv/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","2","2","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="}}},{"name":"MobilenetV2/expanded_conv/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/Conv/Relu","MobilenetV2/expanded_conv/depthwise/depthwise_weights","MobilenetV2/expanded_conv/depthwise/depthwise_bn_offset"],"attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv/depthwise/depthwise","MobilenetV2/expanded_conv/project/Conv2D_weights","MobilenetV2/expanded_conv/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}}}},{"name":"MobilenetV2/expanded_conv_1/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_1/expand/Conv2D_weights","MobilenetV2/expanded_conv_1/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"person_mask/upsample_to_2x/ll_conv/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm","person_mask/upsample_to_2x/ll_conv/Conv2D_weights","person_mask/upsample_to_2x/ll_conv/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_1/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_1/expand/Relu","MobilenetV2/expanded_conv_1/depthwise/depthwise_weights","MobilenetV2/expanded_conv_1/depthwise/depthwise_bn_offset"],"attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","2","2","1"]}},"data_format":{"s":"TkhXQw=="},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_1/depthwise/depthwise","MobilenetV2/expanded_conv_1/project/Conv2D_weights","MobilenetV2/expanded_conv_1/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}}}},{"name":"MobilenetV2/expanded_conv_2/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_2/expand/Conv2D_weights","MobilenetV2/expanded_conv_2/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_2/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_2/expand/Relu","MobilenetV2/expanded_conv_2/depthwise/depthwise_weights","MobilenetV2/expanded_conv_2/depthwise/depthwise_bn_offset"],"attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_2/depthwise/depthwise","MobilenetV2/expanded_conv_2/project/Conv2D_weights","MobilenetV2/expanded_conv_2/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}}}},{"name":"MobilenetV2/expanded_conv_2/add","op":"Add","input":["MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_3/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_2/add","MobilenetV2/expanded_conv_3/expand/Conv2D_weights","MobilenetV2/expanded_conv_3/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"person_mask/upsample_to_4x/ll_conv/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_2/add","person_mask/upsample_to_4x/ll_conv/Conv2D_weights","person_mask/upsample_to_4x/ll_conv/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_3/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_3/expand/Relu","MobilenetV2/expanded_conv_3/depthwise/depthwise_weights","MobilenetV2/expanded_conv_3/depthwise/depthwise_bn_offset"],"attr":{"strides":{"list":{"i":["1","2","2","1"]}},"data_format":{"s":"TkhXQw=="},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_3/depthwise/depthwise","MobilenetV2/expanded_conv_3/project/Conv2D_weights","MobilenetV2/expanded_conv_3/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}}}},{"name":"MobilenetV2/expanded_conv_4/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_4/expand/Conv2D_weights","MobilenetV2/expanded_conv_4/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_4/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_4/expand/Relu","MobilenetV2/expanded_conv_4/depthwise/depthwise_weights","MobilenetV2/expanded_conv_4/depthwise/depthwise_bn_offset"],"attr":{"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="}}},{"name":"MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_4/depthwise/depthwise","MobilenetV2/expanded_conv_4/project/Conv2D_weights","MobilenetV2/expanded_conv_4/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}}}},{"name":"MobilenetV2/expanded_conv_4/add","op":"Add","input":["MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_5/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_4/add","MobilenetV2/expanded_conv_5/expand/Conv2D_weights","MobilenetV2/expanded_conv_5/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_5/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_5/expand/Relu","MobilenetV2/expanded_conv_5/depthwise/depthwise_weights","MobilenetV2/expanded_conv_5/depthwise/depthwise_bn_offset"],"attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_5/depthwise/depthwise","MobilenetV2/expanded_conv_5/project/Conv2D_weights","MobilenetV2/expanded_conv_5/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"}}},{"name":"MobilenetV2/expanded_conv_5/add","op":"Add","input":["MobilenetV2/expanded_conv_4/add","MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_6/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_5/add","MobilenetV2/expanded_conv_6/expand/Conv2D_weights","MobilenetV2/expanded_conv_6/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="}}},{"name":"MobilenetV2/expanded_conv_6/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_6/expand/Relu","MobilenetV2/expanded_conv_6/depthwise/depthwise_weights","MobilenetV2/expanded_conv_6/depthwise/depthwise_bn_offset"],"attr":{"strides":{"list":{"i":["1","2","2","1"]}},"data_format":{"s":"TkhXQw=="},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_6/depthwise/depthwise","MobilenetV2/expanded_conv_6/project/Conv2D_weights","MobilenetV2/expanded_conv_6/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}},"dilations":{"list":{"i":["1","1","1","1"]}}}},{"name":"MobilenetV2/expanded_conv_7/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_7/expand/Conv2D_weights","MobilenetV2/expanded_conv_7/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="}}},{"name":"MobilenetV2/expanded_conv_7/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_7/expand/Relu","MobilenetV2/expanded_conv_7/depthwise/depthwise_weights","MobilenetV2/expanded_conv_7/depthwise/depthwise_bn_offset"],"attr":{"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="}}},{"name":"MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_7/depthwise/depthwise","MobilenetV2/expanded_conv_7/project/Conv2D_weights","MobilenetV2/expanded_conv_7/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="}}},{"name":"MobilenetV2/expanded_conv_7/add","op":"Add","input":["MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_8/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_7/add","MobilenetV2/expanded_conv_8/expand/Conv2D_weights","MobilenetV2/expanded_conv_8/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_8/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_8/expand/Relu","MobilenetV2/expanded_conv_8/depthwise/depthwise_weights","MobilenetV2/expanded_conv_8/depthwise/depthwise_bn_offset"],"attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_8/depthwise/depthwise","MobilenetV2/expanded_conv_8/project/Conv2D_weights","MobilenetV2/expanded_conv_8/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="}}},{"name":"MobilenetV2/expanded_conv_8/add","op":"Add","input":["MobilenetV2/expanded_conv_7/add","MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_9/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_8/add","MobilenetV2/expanded_conv_9/expand/Conv2D_weights","MobilenetV2/expanded_conv_9/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0}}},{"name":"MobilenetV2/expanded_conv_9/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_9/expand/Relu","MobilenetV2/expanded_conv_9/depthwise/depthwise_weights","MobilenetV2/expanded_conv_9/depthwise/depthwise_bn_offset"],"attr":{"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}}}},{"name":"MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_9/depthwise/depthwise","MobilenetV2/expanded_conv_9/project/Conv2D_weights","MobilenetV2/expanded_conv_9/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}}}},{"name":"MobilenetV2/expanded_conv_9/add","op":"Add","input":["MobilenetV2/expanded_conv_8/add","MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_10/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_9/add","MobilenetV2/expanded_conv_10/expand/Conv2D_weights","MobilenetV2/expanded_conv_10/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}}}},{"name":"MobilenetV2/expanded_conv_10/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_10/expand/Relu","MobilenetV2/expanded_conv_10/depthwise/depthwise_weights","MobilenetV2/expanded_conv_10/depthwise/depthwise_bn_offset"],"attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_10/depthwise/depthwise","MobilenetV2/expanded_conv_10/project/Conv2D_weights","MobilenetV2/expanded_conv_10/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_11/expand/Conv2D_weights","MobilenetV2/expanded_conv_11/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_11/expand/Relu","MobilenetV2/expanded_conv_11/depthwise/depthwise_weights","MobilenetV2/expanded_conv_11/depthwise/depthwise_bn_offset"],"attr":{"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_11/depthwise/depthwise","MobilenetV2/expanded_conv_11/project/Conv2D_weights","MobilenetV2/expanded_conv_11/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}}}},{"name":"MobilenetV2/expanded_conv_11/add","op":"Add","input":["MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm","MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"MobilenetV2/expanded_conv_12/expand/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_11/add","MobilenetV2/expanded_conv_12/expand/Conv2D_weights","MobilenetV2/expanded_conv_12/expand/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_12/depthwise/depthwise","op":"FusedDepthwiseConv2dNative","input":["MobilenetV2/expanded_conv_12/expand/Relu","MobilenetV2/expanded_conv_12/depthwise/depthwise_weights","MobilenetV2/expanded_conv_12/depthwise/depthwise_bn_offset"],"attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"num_args":{"i":"1"},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_12/depthwise/depthwise","MobilenetV2/expanded_conv_12/project/Conv2D_weights","MobilenetV2/expanded_conv_12/project/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}}}},{"name":"MobilenetV2/expanded_conv_12/add","op":"Add","input":["MobilenetV2/expanded_conv_11/add","MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"aspp/conv/Relu","op":"_FusedConv2D","input":["MobilenetV2/expanded_conv_12/add","aspp/conv/Conv2D_weights","aspp/conv/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0}}},{"name":"person_mask/upsample_to_4x/conv_0/Relu","op":"_FusedConv2D","input":["aspp/conv/Relu","person_mask/upsample_to_4x/conv_0/Conv2D_weights","person_mask/upsample_to_4x/conv_0/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"}}},{"name":"person_mask/upsample_to_4x/ResizeBilinear","op":"ResizeBilinear","input":["person_mask/upsample_to_4x/conv_0/Relu","person_mask/upsample_to_4x/ResizeBilinear/size"],"attr":{"T":{"type":"DT_FLOAT"},"align_corners":{"b":false},"half_pixel_centers":{"b":false}}},{"name":"person_mask/upsample_to_4x/concat","op":"ConcatV2","input":["person_mask/upsample_to_4x/ResizeBilinear","person_mask/upsample_to_4x/ll_conv/Relu","person_mask/upsample_to_2x/concat/axis"],"attr":{"T":{"type":"DT_FLOAT"},"N":{"i":"2"},"Tidx":{"type":"DT_INT32"}}},{"name":"person_mask/upsample_to_4x/conv_1/Relu","op":"_FusedConv2D","input":["person_mask/upsample_to_4x/concat","person_mask/upsample_to_4x/conv_1/Conv2D_weights","person_mask/upsample_to_4x/conv_1/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"person_mask/upsample_to_4x/conv_2/Relu","op":"_FusedConv2D","input":["person_mask/upsample_to_4x/conv_1/Relu","person_mask/upsample_to_4x/conv_2/Conv2D_weights","person_mask/upsample_to_4x/conv_2/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_4x/add","op":"Add","input":["person_mask/upsample_to_4x/ResizeBilinear","person_mask/upsample_to_4x/conv_2/Relu"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/conv_0/Relu","op":"_FusedConv2D","input":["person_mask/upsample_to_4x/add","person_mask/upsample_to_2x/conv_0/Conv2D_weights","person_mask/upsample_to_2x/conv_0/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/ResizeBilinear","op":"ResizeBilinear","input":["person_mask/upsample_to_2x/conv_0/Relu","person_mask/upsample_to_2x/ResizeBilinear/size"],"attr":{"align_corners":{"b":false},"half_pixel_centers":{"b":false},"T":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/concat","op":"ConcatV2","input":["person_mask/upsample_to_2x/ResizeBilinear","person_mask/upsample_to_2x/ll_conv/Relu","person_mask/upsample_to_2x/concat/axis"],"attr":{"T":{"type":"DT_FLOAT"},"N":{"i":"2"},"Tidx":{"type":"DT_INT32"}}},{"name":"person_mask/upsample_to_2x/conv_1/Relu","op":"_FusedConv2D","input":["person_mask/upsample_to_2x/concat","person_mask/upsample_to_2x/conv_1/Conv2D_weights","person_mask/upsample_to_2x/conv_1/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"use_cudnn_on_gpu":{"b":true},"explicit_paddings":{"list":{}},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}}}},{"name":"person_mask/upsample_to_2x/conv_2/Relu","op":"_FusedConv2D","input":["person_mask/upsample_to_2x/conv_1/Relu","person_mask/upsample_to_2x/conv_2/Conv2D_weights","person_mask/upsample_to_2x/conv_2/Conv2D_bn_offset"],"device":"/device:CPU:0","attr":{"data_format":{"s":"TkhXQw=="},"strides":{"list":{"i":["1","1","1","1"]}},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"},"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA==","UmVsdQ=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"}}},{"name":"person_mask/upsample_to_2x/add","op":"Add","input":["person_mask/upsample_to_2x/ResizeBilinear","person_mask/upsample_to_2x/conv_2/Relu"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"person_mask/logits/BiasAdd","op":"_FusedConv2D","input":["person_mask/upsample_to_2x/add","person_mask/logits/weights","person_mask/logits/biases"],"device":"/device:CPU:0","attr":{"epsilon":{"f":0},"padding":{"s":"U0FNRQ=="},"fused_ops":{"list":{"s":["Qmlhc0FkZA=="]}},"dilations":{"list":{"i":["1","1","1","1"]}},"T":{"type":"DT_FLOAT"},"strides":{"list":{"i":["1","1","1","1"]}},"data_format":{"s":"TkhXQw=="},"explicit_paddings":{"list":{}},"use_cudnn_on_gpu":{"b":true},"num_args":{"i":"1"}}},{"name":"ResizeBilinear","op":"ResizeBilinear","input":["person_mask/logits/BiasAdd","ResizeBilinear/size"],"attr":{"align_corners":{"b":false},"half_pixel_centers":{"b":false},"T":{"type":"DT_FLOAT"}}},{"name":"Sigmoid","op":"Sigmoid","input":["ResizeBilinear"],"attr":{"T":{"type":"DT_FLOAT"}}},{"name":"reshape_to_nchw","op":"Reshape","input":["Sigmoid","reshape_to_nchw/shape"],"attr":{"T":{"type":"DT_FLOAT"},"Tshape":{"type":"DT_INT32"}}},{"name":"output_tensor","op":"Identity","input":["reshape_to_nchw"],"attr":{"T":{"type":"DT_FLOAT"}}}],"versions":{}},"weightsManifest":[{"paths":["group1-shard1of1.bin"],"weights":[{"name":"person_mask/upsample_to_4x/ResizeBilinear/size","shape":[2],"dtype":"int32"},{"name":"person_mask/upsample_to_2x/ResizeBilinear/size","shape":[2],"dtype":"int32"},{"name":"transpose_to_nhwc/perm","shape":[4],"dtype":"int32"},{"name":"person_mask/upsample_to_2x/concat/axis","shape":[],"dtype":"int32"},{"name":"person_mask/logits/weights","shape":[1,1,8,1],"dtype":"float32"},{"name":"person_mask/logits/biases","shape":[1],"dtype":"float32"},{"name":"ResizeBilinear/size","shape":[2],"dtype":"int32"},{"name":"reshape_to_nchw/shape","shape":[4],"dtype":"int32"},{"name":"MobilenetV2/Conv/Conv2D_weights","shape":[3,3,4,24],"dtype":"float32"},{"name":"MobilenetV2/Conv/Conv2D_bn_offset","shape":[24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_12/depthwise/depthwise_weights","shape":[3,3,192,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv/depthwise/depthwise_weights","shape":[3,3,24,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv/depthwise/depthwise_bn_offset","shape":[24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv/project/Conv2D_weights","shape":[1,1,24,12],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv/project/Conv2D_bn_offset","shape":[12],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_1/expand/Conv2D_weights","shape":[1,1,12,72],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_12/depthwise/depthwise_bn_offset","shape":[192],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_1/expand/Conv2D_bn_offset","shape":[72],"dtype":"float32"},{"name":"person_mask/upsample_to_2x/ll_conv/Conv2D_weights","shape":[1,1,12,4],"dtype":"float32"},{"name":"person_mask/upsample_to_2x/ll_conv/Conv2D_bn_offset","shape":[4],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_12/project/Conv2D_weights","shape":[1,1,192,48],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_1/depthwise/depthwise_weights","shape":[3,3,72,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_1/depthwise/depthwise_bn_offset","shape":[72],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_1/project/Conv2D_weights","shape":[1,1,72,12],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_1/project/Conv2D_bn_offset","shape":[12],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_2/expand/Conv2D_weights","shape":[1,1,12,72],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_12/project/Conv2D_bn_offset","shape":[48],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_2/expand/Conv2D_bn_offset","shape":[72],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_2/depthwise/depthwise_weights","shape":[3,3,72,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_2/depthwise/depthwise_bn_offset","shape":[72],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_2/project/Conv2D_weights","shape":[1,1,72,12],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_2/project/Conv2D_bn_offset","shape":[12],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_3/expand/Conv2D_weights","shape":[1,1,12,72],"dtype":"float32"},{"name":"aspp/conv/Conv2D_weights","shape":[1,1,48,192],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_3/expand/Conv2D_bn_offset","shape":[72],"dtype":"float32"},{"name":"person_mask/upsample_to_2x/conv_1/Conv2D_bn_offset","shape":[8],"dtype":"float32"},{"name":"person_mask/upsample_to_4x/ll_conv/Conv2D_weights","shape":[1,1,12,16],"dtype":"float32"},{"name":"aspp/conv/Conv2D_bn_offset","shape":[192],"dtype":"float32"},{"name":"person_mask/upsample_to_4x/ll_conv/Conv2D_bn_offset","shape":[16],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_3/depthwise/depthwise_weights","shape":[3,3,72,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_3/depthwise/depthwise_bn_offset","shape":[72],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_3/project/Conv2D_weights","shape":[1,1,72,24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_3/project/Conv2D_bn_offset","shape":[24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_4/expand/Conv2D_weights","shape":[1,1,24,144],"dtype":"float32"},{"name":"person_mask/upsample_to_4x/conv_0/Conv2D_weights","shape":[1,1,192,24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_4/expand/Conv2D_bn_offset","shape":[144],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_4/depthwise/depthwise_weights","shape":[3,3,144,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_4/depthwise/depthwise_bn_offset","shape":[144],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_4/project/Conv2D_weights","shape":[1,1,144,24],"dtype":"float32"},{"name":"person_mask/upsample_to_4x/conv_0/Conv2D_bn_offset","shape":[24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_4/project/Conv2D_bn_offset","shape":[24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_5/expand/Conv2D_weights","shape":[1,1,24,144],"dtype":"float32"},{"name":"person_mask/upsample_to_2x/conv_2/Conv2D_weights","shape":[3,3,8,8],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_5/expand/Conv2D_bn_offset","shape":[144],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_5/depthwise/depthwise_weights","shape":[3,3,144,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_5/depthwise/depthwise_bn_offset","shape":[144],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_5/project/Conv2D_weights","shape":[1,1,144,24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_5/project/Conv2D_bn_offset","shape":[24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_6/expand/Conv2D_weights","shape":[1,1,24,144],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_6/expand/Conv2D_bn_offset","shape":[144],"dtype":"float32"},{"name":"person_mask/upsample_to_4x/conv_1/Conv2D_weights","shape":[3,3,40,24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_6/depthwise/depthwise_weights","shape":[3,3,144,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_6/depthwise/depthwise_bn_offset","shape":[144],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_6/project/Conv2D_weights","shape":[1,1,144,36],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_6/project/Conv2D_bn_offset","shape":[36],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_7/expand/Conv2D_weights","shape":[1,1,36,216],"dtype":"float32"},{"name":"person_mask/upsample_to_4x/conv_1/Conv2D_bn_offset","shape":[24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_7/expand/Conv2D_bn_offset","shape":[216],"dtype":"float32"},{"name":"person_mask/upsample_to_2x/conv_2/Conv2D_bn_offset","shape":[8],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_7/depthwise/depthwise_weights","shape":[3,3,216,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_7/depthwise/depthwise_bn_offset","shape":[216],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_7/project/Conv2D_weights","shape":[1,1,216,36],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_7/project/Conv2D_bn_offset","shape":[36],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_8/expand/Conv2D_weights","shape":[1,1,36,216],"dtype":"float32"},{"name":"person_mask/upsample_to_4x/conv_2/Conv2D_weights","shape":[3,3,24,24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_8/expand/Conv2D_bn_offset","shape":[216],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_8/depthwise/depthwise_weights","shape":[3,3,216,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_8/depthwise/depthwise_bn_offset","shape":[216],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_8/project/Conv2D_weights","shape":[1,1,216,36],"dtype":"float32"},{"name":"person_mask/upsample_to_4x/conv_2/Conv2D_bn_offset","shape":[24],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_8/project/Conv2D_bn_offset","shape":[36],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_9/expand/Conv2D_weights","shape":[1,1,36,216],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_9/expand/Conv2D_bn_offset","shape":[216],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_9/depthwise/depthwise_weights","shape":[3,3,216,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_9/depthwise/depthwise_bn_offset","shape":[216],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_9/project/Conv2D_weights","shape":[1,1,216,36],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_9/project/Conv2D_bn_offset","shape":[36],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_10/expand/Conv2D_weights","shape":[1,1,36,216],"dtype":"float32"},{"name":"person_mask/upsample_to_2x/conv_0/Conv2D_weights","shape":[1,1,24,8],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_10/expand/Conv2D_bn_offset","shape":[216],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_10/depthwise/depthwise_weights","shape":[3,3,216,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_10/depthwise/depthwise_bn_offset","shape":[216],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_10/project/Conv2D_weights","shape":[1,1,216,48],"dtype":"float32"},{"name":"person_mask/upsample_to_2x/conv_0/Conv2D_bn_offset","shape":[8],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_10/project/Conv2D_bn_offset","shape":[48],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_11/expand/Conv2D_weights","shape":[1,1,48,192],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_11/expand/Conv2D_bn_offset","shape":[192],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_11/depthwise/depthwise_weights","shape":[3,3,192,1],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_11/depthwise/depthwise_bn_offset","shape":[192],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_11/project/Conv2D_weights","shape":[1,1,192,48],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_11/project/Conv2D_bn_offset","shape":[48],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_12/expand/Conv2D_weights","shape":[1,1,48,192],"dtype":"float32"},{"name":"MobilenetV2/expanded_conv_12/expand/Conv2D_bn_offset","shape":[192],"dtype":"float32"},{"name":"person_mask/upsample_to_2x/conv_1/Conv2D_weights","shape":[3,3,12,8],"dtype":"float32"}]}]}')},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getRawTexture=e.swapHardwareTexture=void 0;var n=r(0);e.swapHardwareTexture=function(t,e,r){var n=r.getInternalTexture();n._webGLTexture=e,n.isReady=!0,t.updateTextureSamplingMode(2,n,!1)},e.getRawTexture=function(t){var e=n.backend(),r=t.dataId;return e.texData.get(r).texture}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Segmenter=void 0;var n=r(277),a=r(21),o=r(0),i=function(){function t(t,e,r,n){this.model=t,this.canvas=e,this.config=r,this.logger=n,this.contrastLut=new Uint8Array(256),this.fromTextureInShape=[this.config.maskHeight,this.config.maskWidth],this.fromTextureOutShape=[this.config.maskHeight,this.config.maskWidth,3],this.fromTextureTempInfo=new Array(1),this.initialize()}return t.prototype.dispose=function(){this.prevPrediction&&(this.prevPrediction.dispose(),this.prevPrediction=null),this.model=null,this.mask=null,this.contrastLut=null},t.prototype.getMask=function(){return this.mask},t.prototype.runPrediction=function(t){var e=this,r=o.tidy((function(){var r=e.fromTexture(t);r=o.sub(o.div(r,o.scalar(127)),o.scalar(1)),r=o.transpose(r,[2,0,1]),r=o.expandDims(r,0);var n=e.prevPrediction;return n||(n=o.zeros([1,1,e.config.maskHeight,e.config.maskWidth],"float32")),r=o.concat([r,n],1),e.model.predict(r)}));return this.prevPrediction&&this.prevPrediction.dispose(),this.prevPrediction=r,r=o.tidy((function(){return e.upscaleMask(r)}))},t.prototype.initialize=function(){for(var t=0;t<256;++t){for(var e=t/256,r=0;r<this.config.upscaledMaskContrast;r++){var n=Math.cos(e/2*3.1415);e=1-n*n}this.contrastLut[t]=Math.floor(255.99*e)}this.logger.info("Initialized")},t.prototype.fromTexture=function(t){var e=t,r=o.backend(),i=r.makeTensorInfo(this.fromTextureInShape,"int32");r.texData.get(i.dataId).usage=a.TextureUsage.PIXELS,r.uploadToGPU(i.dataId);var u=r.texData.get(i.dataId).texture;r.texData.get(i.dataId).texture=e;var v=new n.FromPixelsPackedProgram(this.fromTextureOutShape);this.fromTextureTempInfo[0]=i;var s=r.runWebGLProgram(v,this.fromTextureTempInfo,"float32");return r.texData.get(i.dataId).texture=u,r.disposeData(i.dataId),o.engine().makeTensorFromDataId(s.dataId,s.shape,s.dtype,r)},t.prototype.upscaleMask=function(t){return this.canvas.height/this.config.upscaledMaskResolutionFactor>=this.config.maskHeight&&(t=o.squeeze(t,[0]),t=o.transpose(t,[1,2,0]),t=o.image.resizeBilinear(t,[this.canvas.height/this.config.upscaledMaskResolutionFactor,this.canvas.width/this.config.upscaledMaskResolutionFactor])),t.squeeze()},t}();e.Segmenter=i},function(t,e,r){"use strict";var n=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(a,o){function i(t){try{v(n.next(t))}catch(t){o(t)}}function u(t){try{v(n.throw(t))}catch(t){o(t)}}function v(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,u)}v((n=n.apply(t,e||[])).next())}))},a=this&&this.__generator||function(t,e){var r,n,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,n=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=e.call(t,i)}catch(t){o=[6,t],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.VideoEffectFactory=void 0;var o=r(206),i=r(361),u=r(622);e.VideoEffectFactory={getEffectForType:function(t,e,r){switch(t){case o.VideoEffectType.BackgroundBlur:return new s;case o.VideoEffectType.BackgroundReplacement:return new c(e,r.createChild("Replacement"));case o.VideoEffectType.Off:default:return new v}}};var v=function(){function t(){}return Object.defineProperty(t.prototype,"effectType",{get:function(){return o.VideoEffectType.Off},enumerable:!1,configurable:!0}),t.prototype.initialize=function(t,e){return n(this,void 0,void 0,(function(){return a(this,(function(t){return[2]}))}))},t.prototype.dispose=function(){},t}(),s=function(){function t(){}return Object.defineProperty(t.prototype,"effectType",{get:function(){return o.VideoEffectType.BackgroundBlur},enumerable:!1,configurable:!0}),t.prototype.initialize=function(t,e){return n(this,void 0,void 0,(function(){return a(this,(function(e){return t.setBackgroundImageType(i.BackgroundTypes.Blur),[2]}))}))},t.prototype.dispose=function(){},t}(),c=function(){function t(t,e){var r=this;this.configProvider=t,this.logger=e,this.updateConfig(),t.on("onEffectConfigChanged",(function(){return r.updateConfig()}))}return Object.defineProperty(t.prototype,"effectType",{get:function(){return o.VideoEffectType.BackgroundReplacement},enumerable:!1,configurable:!0}),t.prototype.initialize=function(t,e){return n(this,void 0,void 0,(function(){return a(this,(function(r){return this.compositor=t,this.resolution=e,this.backgroundImageUrl?[2,this.configureCompositor()]:(this.logger.warn("Effect is not configured with bg image"),[2])}))}))},t.prototype.dispose=function(){this.backgroundImageUrl=null,this.resolution=null,this.compositor=null},t.prototype.configureCompositor=function(){return n(this,void 0,void 0,(function(){var t,e;return a(this,(function(r){switch(r.label){case 0:return[4,this.loadImageBlob(this.backgroundImageUrl)];case 1:return(t=r.sent())?[4,this.createImage(t,this.resolution)]:[2];case 2:return e=r.sent(),this.compositor.setBackgroundImageType(i.BackgroundTypes.Image),this.compositor.setBackgroundImage(e),[2]}}))}))},t.prototype.loadImageBlob=function(t){return n(this,void 0,void 0,(function(){var e,r,n,o,i,v;return a(this,(function(a){switch(a.label){case 0:e=this.configProvider.effectConfig.headers,a.label=1;case 1:return a.trys.push([1,5,,6]),[4,this.configProvider.globals.window.fetch(t,{method:"GET",headers:e})];case 2:return[4,a.sent().blob()];case 3:return r=a.sent(),n=URL.createObjectURL(r),o=new Image,i=new u.SettablePromise,o.crossOrigin="anonymous",o.addEventListener("load",(function(){return i.resolve()})),o.addEventListener("error",(function(t){return i.reject(t)})),o.src=n,[4,i.promise];case 4:return a.sent(),[2,o];case 5:return v=a.sent(),this.logger.error("Cannot fetch image: "+v),[2,null];case 6:return[2]}}))}))},t.prototype.createImage=function(t,e){return n(this,void 0,void 0,(function(){var r,n,o,i,u,v;return a(this,(function(a){if(r=t.width/t.height,(n=e.width/e.height)===r)return[2,this.configProvider.globals.window.createImageBitmap(t,0,0,t.width,t.height)];if(r>n)return o=t.height*n,i=(t.width-o)/2,[2,this.configProvider.globals.window.createImageBitmap(t,i,0,o,t.height)];if(r<n)return u=t.width/n,v=(t.height-u)/2,[2,this.configProvider.globals.window.createImageBitmap(t,0,v,t.width,u)];throw new Error("Error")}))}))},t.prototype.updateConfig=function(){return n(this,void 0,void 0,(function(){var t;return a(this,(function(e){return(t=this.configProvider.effectConfig)&&t.backgroundImageUrl?this.backgroundImageUrl===t.backgroundImageUrl?(this.logger.error("Already configured with: "+JSON.stringify(t)),[2]):(this.backgroundImageUrl=t.backgroundImageUrl,this.compositor?[2,this.configureCompositor()]:[2]):(this.logger.error("No bg image provided in config: "+JSON.stringify(t)),[2])}))}))},t}()},function(t,e,r){"use strict";var n;Object.defineProperty(e,"__esModule",{value:!0}),e.SettablePromise=e.SettablePromiseState=void 0,function(t){t[t.Pending=0]="Pending",t[t.Rejected=1]="Rejected",t[t.Resolved=2]="Resolved"}(n=e.SettablePromiseState||(e.SettablePromiseState={}));var a=function(){function t(){var t=this;this.stateInt=n.Pending,this.promiseInt=new Promise((function(e,r){t.resolveInt=e,t.rejectInt=r}))}return Object.defineProperty(t.prototype,"state",{get:function(){return this.stateInt},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"resolve",{get:function(){var t=this;return function(e){t.stateInt=n.Resolved,t.resolveInt(e)}},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"reject",{get:function(){var t=this;return function(e){t.stateInt=n.Rejected,t.rejectInt(e)}},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"promise",{get:function(){return this.promiseInt},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isPending",{get:function(){return this.stateInt===n.Pending},enumerable:!1,configurable:!0}),t}();e.SettablePromise=a},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SourceRegistry=void 0;var n=function(){function t(t){this.logger=t}return t.prototype.registerSource=function(t,e){this.sourceId=t,this.destId=e,this.logger.debug("Record set: "+this.sourceId+" -> "+this.destId)},t.prototype.isCurrentSourceUsed=function(t){return this.sourceId===t||this.destId===t},t}();e.SourceRegistry=n},function(t,e,r){"use strict";r.r(e),r.d(e,"GraphModel",(function(){return Yr})),r.d(e,"loadGraphModel",(function(){return Gr})),r.d(e,"deregisterOp",(function(){return v.a})),r.d(e,"registerOp",(function(){return v.c})),r.d(e,"version_converter",(function(){return Nr}));var n=r(0),a=r(64),o=r(2);function i(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var u=function(){function t(e,r,n){var a=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.node=e,this.tensorMap=r,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((function(t){return a.getInput(t)})),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((function(t,e){return t[e]=a.getAttr(e),t}),{}))}var e,r;return e=t,(r=[{key:"getInput",value:function(t){return Object(o.e)(t,this.tensorMap,this.context)}},{key:"getAttr",value:function(t,e){var r=this.node.rawAttrs[t];if(null!=r.tensor)return Object(o.e)(t,this.tensorMap,this.context);if(null!=r.i||null!=r.f)return Object(a.f)(this.node.rawAttrs,t,e);if(null!=r.s)return Object(a.i)(this.node.rawAttrs,t,e);if(null!=r.b)return Object(a.c)(this.node.rawAttrs,t,e);if(null!=r.shape)return Object(a.k)(this.node.rawAttrs,t,e);if(null!=r.type)return Object(a.e)(this.node.rawAttrs,t,e);if(null!=r.list){if(null!=r.list.i||null!=r.list.f)return Object(a.g)(this.node.rawAttrs,t,e);if(null!=r.list.s)return Object(a.h)(this.node.rawAttrs,t,e);if(null!=r.list.shape)return Object(a.j)(this.node.rawAttrs,t,e);if(null!=r.list.b)return Object(a.b)(this.node.rawAttrs,t,e);if(null!=r.list.type)return Object(a.d)(this.node.rawAttrs,t,e)}return e}}])&&i(e.prototype,r),t}(),v=r(142),s=r(13),c=r(323),P=r(168),l=r(9),f=r(15),d=r(221),p=r(156),b=r(14),h=r(124),y=r(98),m=r(54),g=r(127),T=r(50),j=r(321),z=r(322),w=r(324),D=r(325),x=r(326),O=r(215),L=r(327),S=r(330),A=r(68),k=r(159),C=r(218),I=r(161),E=r(334),M=r(47),U=r(335),R=r(162),W=r(89),Q=r(224),Y=r(163),G=r(30),F=r(346),N=r(146),q=r(102),K=r(347),B=r(232),V=r(106),X=r(234),Z=r(349),H=r(235),J=r(225),_=r(42),$=r(25),tt=r(188),et=r(352),rt=r(331),nt=r(170),at=r(231),ot=r(229),it=r(164),ut=r(169);function vt(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";n.util.assert(st(t,e),(function(){return r+" Shapes ".concat(t," and ").concat(e," must match")}))}function st(t,e){if(t.length!==e.length)return!1;for(var r=0;r<t.length;r++)if(-1!==t[r]&&-1!==e[r]&&t[r]!==e[r])return!1;return!0}function ct(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Pt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var lt=function(){function t(e,r,a,o,i,u,v){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.dtype=r,this.maxSize=a,this.elementShape=o,this.identicalElementShapes=i,this.dynamicSize=u,this.clearAfterRead=v,this.tensors=[],this.closed_=!1,this.idTensor=Object(n.scalar)(0),Object(n.keep)(this.idTensor)}var e,r;return e=t,(r=[{key:"id",get:function(){return this.idTensor.id}},{key:"closed",get:function(){return this.closed_}},{key:"clearAndClose",value:function(t){this.tensors.forEach((function(e){null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}},{key:"size",value:function(){return this.tensors.length}},{key:"read",value:function(t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||t>=this.size())throw new Error("Tried to read from index ".concat(t,", but array size is: ").concat(this.size()));var e=this.tensors[t];if(e.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(t," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}},{key:"readMany",value:function(t){var e=this;return t.map((function(t){return e.read(t)}))}},{key:"write",value:function(t,e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error("Tried to write to index ".concat(t,", but array is not resizeable and size is: ").concat(this.maxSize));var r=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,",\n          because the value dtype is ").concat(e.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),vt(this.elementShape,e.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,".")),r.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been read."));if(r.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been written."));r.tensor=e,Object(n.keep)(e),r.written=!0,this.tensors[t]=r}},{key:"writeMany",value:function(t,e){var r=this;if(t.length!==e.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(t.length," is not the same as tensors size: ").concat(e.length,"."));t.forEach((function(t,n){return r.write(t,e[n])}))}},{key:"gather",value:function(t,e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(e));if(t)t=t.slice(0,this.size());else{t=[];for(var r=0;r<this.size();r++)t.push(r)}if(0===t.length)return Object(n.tensor)([],[0].concat(this.elementShape));var a=this.readMany(t);return vt(this.elementShape,a[0].shape,"TensorArray shape mismatch: "),Object(n.stack)(a,0)}},{key:"concat",value:function(t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(t));if(0===this.size())return Object(n.tensor)([],[0].concat(this.elementShape));for(var e=[],r=0;r<this.size();r++)e.push(r);var a=this.readMany(e);return vt(this.elementShape,a[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(a[0].shape,")")),Object(n.concat)(a,0)}},{key:"scatter",value:function(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));var r=Math.max.apply(Math,function(t){return function(t){if(Array.isArray(t))return ct(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return ct(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ct(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(t));if(!this.dynamicSize&&r>=this.maxSize)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(this.maxSize,")"));this.writeMany(t,Object(n.unstack)(e,0))}},{key:"split",value:function(t,e){var r=this;if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));var a=0,o=t.map((function(t){return a+=t}));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(t.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");var i=0===a?0:e.size/a,u=[];Object(n.tidy)((function(){e=Object(n.reshape)(e,[1,a,i]);for(var v=0;v<t.length;++v){var s=[0,0===v?0:o[v-1],0],c=[1,t[v],i];u[v]=Object(n.reshape)(Object(n.slice)(e,s,c),r.elementShape)}return u}));for(var v=[],s=0;s<t.length;s++)v[s]=s;this.writeMany(v,u)}}])&&Pt(e.prototype,r),t}();function ft(t){return function(t){if(Array.isArray(t))return dt(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return dt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?dt(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function dt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function pt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function bt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var ht=function(){function t(e,r,a){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;pt(this,t),this.tensors=e,this.elementShape=r,this.elementDtype=a,null!=e&&e.forEach((function(t){if(a!==t.dtype)throw new Error("Invalid data types; op elements ".concat(a,", but list elements ").concat(t.dtype));vt(r,t.shape,"TensorList shape mismatch: "),Object(n.keep)(t)})),this.idTensor=Object(n.scalar)(0),this.maxNumElements=o,Object(n.keep)(this.idTensor)}var e,r;return e=t,(r=[{key:"id",get:function(){return this.idTensor.id}},{key:"copy",value:function(){return new t(ft(this.tensors),this.elementShape,this.elementDtype)}},{key:"clearAndClose",value:function(t){this.tensors.forEach((function(e){null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}},{key:"size",value:function(){return this.tensors.length}},{key:"stack",value:function(t,e){var r=this,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(-1!==a&&this.tensors.length!==a)throw new Error("Operation expected a list with ".concat(a," elements but got a list with ").concat(this.tensors.length," elements."));return vt(t,this.elementShape,"TensorList shape mismatch: "),Object(n.tidy)((function(){var e=r.tensors.map((function(e){return Object(n.reshape)(e,t)}));return Object(n.stack)(e,0)}))}},{key:"popBack",value:function(t,e){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");var r=this.tensors.pop();return vt(r.shape,t,"TensorList shape mismatch: "),Object(n.reshape)(r,t)}},{key:"pushBack",value:function(t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(vt(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(n.keep)(t),this.tensors.push(t)}},{key:"resize",value:function(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(t));if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error("TensorListResize input size ".concat(t," is greater maxNumElement ").concat(this.maxNumElements,"."));this.tensors.length=t}},{key:"getItem",value:function(t,e,r){if(r!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(r,", but list elements ").concat(this.elementDtype));if(t<0||t>this.tensors.length)throw new Error("Trying to access element ".concat(t," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[t])throw new Error("element at index ".concat(t," is null."));return vt(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}},{key:"setItem",value:function(t,e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error("Trying to set element ".concat(t," in a list with max ").concat(this.maxNumElements," elements."));vt(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(n.keep)(e),this.tensors[t]=e}},{key:"gather",value:function(t,e,r){var a=this;if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));return vt(this.elementShape,r,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?Object(n.tensor)([],[0].concat(this.elementShape)):Object(n.tidy)((function(){var e=t.map((function(t){return Object(n.reshape)(a.tensors[t],r)}));return Object(n.stack)(e,0)}))}},{key:"concat",value:function(t,e){var r=this;if(t&&t!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(t));return vt(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?Object(n.tensor)([],[0].concat(this.elementShape)):Object(n.tidy)((function(){var t=r.tensors.map((function(t){return Object(n.reshape)(t,e)}));return Object(n.concat)(t,0)}))}}])&&bt(e.prototype,r),t}();function yt(t,e,r){var a=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(t.shape));if(t.dtype!==r)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(r));vt(t.shape.slice(1),e,"TensorList shape mismatch: ");var o=Object(n.unstack)(t);return new ht(o,e,a)}function mt(t,e,r){return new ht([],t,e,r)}function gt(t,e,r,a){if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));var o=Math.max.apply(Math,ft(e));if(null!=a&&-1!==a&&o>=a)throw new Error("Max index must be < array size (".concat(o,"  vs. ").concat(a,")"));var i=new ht([],r,t.dtype,a),u=Object(n.unstack)(t,0);return e.forEach((function(t,e){i.setItem(t,u[e])})),i}function Tt(t,e,r){var a=0,o=e.map((function(t){return a+=t}));if(a!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(t.shape));for(var i=0===a?0:t.size/a,u=Object(n.tidy)((function(){var u=[];t=Object(n.reshape)(t,[1,a,i]);for(var v=0;v<e.length;++v){var s=[0,0===v?0:o[v-1],0],c=[1,e[v],i];u[v]=Object(n.reshape)(Object(n.slice)(t,s,c),r)}return t.dispose(),u})),v=new ht([],r,t.dtype,e.length),s=0;s<u.length;s++)v.setItem(s,u[s]);return v}function jt(t){return(jt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function zt(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}var wt=function(){var t,e=(t=regeneratorRuntime.mark((function t(e,r,a){var i,u,v,s,c,P,l,f,d,p,b,h,y,m,g,T,j,z,w,D,x,O,L,S,A,k,C,I,E,M,U,R,W,Q,Y,G,F,N,q,K,B,V,X,Z,H,J,_,$,tt,et,rt,nt,at,ot,it,ut,vt,st,ct,Pt,ft,dt,pt,bt,ht,zt,wt,Dt,xt,Ot,Lt,St,At,kt,Ct,It,Et,Mt,Ut,Rt,Wt,Qt,Yt,Gt,Ft,Nt,qt,Kt,Bt,Vt,Xt,Zt,Ht,Jt,_t,$t;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:t.t0=e.op,t.next="If"===t.t0||"StatelessIf"===t.t0?3:"While"===t.t0||"StatelessWhile"===t.t0?15:"LoopCond"===t.t0?19:"Switch"===t.t0?21:"Merge"===t.t0?32:"Enter"===t.t0?37:"Exit"===t.t0?41:"NextIteration"===t.t0?44:"TensorArrayV3"===t.t0?47:"TensorArrayWriteV3"===t.t0?57:"TensorArrayReadV3"===t.t0?63:"TensorArrayGatherV3"===t.t0?67:"TensorArrayScatterV3"===t.t0?72:"TensorArrayConcatV3"===t.t0?78:"TensorArraySplitV3"===t.t0?82:"TensorArraySizeV3"===t.t0?88:"TensorArrayCloseV3"===t.t0?91:"TensorListSetItem"===t.t0?95:"TensorListGetItem"===t.t0?101:"TensorListScatterV2"===t.t0||"TensorListScatter"===t.t0?107:"TensorListReserve"===t.t0||"EmptyTensorList"===t.t0?114:"TensorListGather"===t.t0?121:"TensorListStack"===t.t0?127:"TensorListFromTensor"===t.t0?133:"TensorListConcat"===t.t0?139:"TensorListPushBack"===t.t0?144:"TensorListPopBack"===t.t0?149:"TensorListSplit"===t.t0?154:160;break;case 3:return i=Object(o.d)("thenBranch",e,r,a),u=Object(o.d)("elseBranch",e,r,a),v=Object(o.d)("cond",e,r,a),s=Object(o.d)("args",e,r,a),t.next=9,v.data();case 9:if(!t.sent[0]){t.next=14;break}return t.abrupt("return",a.functionMap[i].executeFunctionAsync(s,a.tensorArrayMap,a.tensorListMap));case 14:return t.abrupt("return",a.functionMap[u].executeFunctionAsync(s,a.tensorArrayMap,a.tensorListMap));case 15:return t.delegateYield(regeneratorRuntime.mark((function t(){var n,i,u,v,s,c,P,l;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=Object(o.d)("body",e,r,a),i=Object(o.d)("cond",e,r,a),u=Object(o.d)("args",e,r,a),t.next=5,a.functionMap[i].executeFunctionAsync(u,a.tensorArrayMap,a.tensorListMap);case 5:return v=t.sent,s=u.map((function(t){return t.id})),t.next=9,v[0].data();case 9:c=t.sent,v.forEach((function(t){t.kept||-1!==s.indexOf(t.id)||t.dispose()})),P=u,l=regeneratorRuntime.mark((function t(){var e,r,o;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=P,t.next=3,a.functionMap[n].executeFunctionAsync(P,a.tensorArrayMap,a.tensorListMap);case 3:return P=t.sent,r=P.map((function(t){return t.id})),e.forEach((function(t){t.kept||-1!==s.indexOf(t.id)||-1!==r.indexOf(t.id)||t.dispose()})),t.next=8,a.functionMap[i].executeFunctionAsync(P,a.tensorArrayMap,a.tensorListMap);case 8:return o=t.sent,t.next=11,o[0].data();case 11:c=t.sent,o.forEach((function(t){t.kept||-1!==s.indexOf(t.id)||-1!==r.indexOf(t.id)||t.dispose()}));case 13:case"end":return t.stop()}}),t)}));case 13:if(!c[0]){t.next=17;break}return t.delegateYield(l(),"t0",15);case 15:t.next=13;break;case 17:return t.abrupt("return",{v:P});case 18:case"end":return t.stop()}}),t)}))(),"t1",16);case 16:if("object"!==jt(c=t.t1)){t.next=19;break}return t.abrupt("return",c.v);case 19:return P=Object(o.d)("pred",e,r,a),t.abrupt("return",[Object(o.a)(P)]);case 21:return l=Object(o.d)("pred",e,r,a),(f=Object(o.d)("data",e,r,a)).kept||(f=Object(o.a)(f)),t.next=26,l.data();case 26:if(!t.sent[0]){t.next=30;break}t.t2=[void 0,f],t.next=31;break;case 30:t.t2=[f,void 0];case 31:return t.abrupt("return",t.t2);case 32:if(!(d=e.inputNames.find((function(t){return void 0!==Object(o.e)(t,r,a)})))){t.next=36;break}return p=Object(o.e)(d,r,a),t.abrupt("return",[Object(o.a)(p)]);case 36:return t.abrupt("return",void 0);case 37:return b=Object(o.d)("frameName",e,r,a),h=Object(o.d)("tensor",e,r,a),a.enterFrame(b),t.abrupt("return",[Object(o.a)(h)]);case 41:return y=Object(o.d)("tensor",e,r,a),a.exitFrame(),t.abrupt("return",[Object(o.a)(y)]);case 44:return m=Object(o.d)("tensor",e,r,a),a.nextIteration(),t.abrupt("return",[Object(o.a)(m)]);case 47:return g=Object(o.d)("size",e,r,a),T=Object(o.d)("dtype",e,r,a),j=Object(o.d)("elementShape",e,r,a),z=Object(o.d)("dynamicSize",e,r,a),w=Object(o.d)("clearAfterRead",e,r,a),D=Object(o.d)("identicalElementShapes",e,r,a),x=Object(o.d)("name",e,r,a),O=new lt(x,T,g,j,D,z,w),a.addTensorArray(O),t.abrupt("return",[O.idTensor,Object(n.scalar)(1)]);case 57:return L=Object(o.d)("tensorArrayId",e,r,a),S=Object(o.d)("index",e,r,a),A=Object(o.d)("tensor",e,r,a),(k=a.getTensorArray(L.id)).write(S,A),t.abrupt("return",[k.idTensor]);case 63:return C=Object(o.d)("tensorArrayId",e,r,a),I=Object(o.d)("index",e,r,a),E=a.getTensorArray(C.id),t.abrupt("return",[E.read(I)]);case 67:return M=Object(o.d)("tensorArrayId",e,r,a),U=Object(o.d)("indices",e,r,a),R=Object(o.d)("dtype",e,r,a),W=a.getTensorArray(M.id),t.abrupt("return",[W.gather(U,R)]);case 72:return Q=Object(o.d)("tensorArrayId",e,r,a),Y=Object(o.d)("indices",e,r,a),G=Object(o.d)("tensor",e,r,a),(F=a.getTensorArray(Q.id)).scatter(Y,G),t.abrupt("return",[F.idTensor]);case 78:return N=Object(o.d)("tensorArrayId",e,r,a),q=a.getTensorArray(N.id),K=Object(o.d)("dtype",e,r,a),t.abrupt("return",[q.concat(K)]);case 82:return B=Object(o.d)("tensorArrayId",e,r,a),V=Object(o.d)("tensor",e,r,a),X=Object(o.d)("lengths",e,r,a),(Z=a.getTensorArray(B.id)).split(X,V),t.abrupt("return",[Z.idTensor]);case 88:return H=Object(o.d)("tensorArrayId",e,r,a),J=a.getTensorArray(H.id),t.abrupt("return",[Object(n.scalar)(J.size(),"int32")]);case 91:return _=Object(o.d)("tensorArrayId",e,r,a),($=a.getTensorArray(_.id)).clearAndClose(),t.abrupt("return",[$.idTensor]);case 95:return tt=Object(o.d)("tensorListId",e,r,a),et=Object(o.d)("index",e,r,a),rt=Object(o.d)("tensor",e,r,a),(nt=a.getTensorList(tt.id)).setItem(et,rt),t.abrupt("return",[nt.idTensor]);case 101:return at=Object(o.d)("tensorListId",e,r,a),ot=Object(o.d)("index",e,r,a),it=Object(o.d)("elementShape",e,r,a),ut=Object(o.d)("elementDType",e,r,a),vt=a.getTensorList(at.id),t.abrupt("return",[vt.getItem(ot,it,ut)]);case 107:return st=Object(o.d)("indices",e,r,a),ct=Object(o.d)("tensor",e,r,a),Pt=Object(o.d)("elementShape",e,r,a),ft=Object(o.d)("numElements",e,r,a),dt=gt(ct,st,Pt,ft),a.addTensorList(dt),t.abrupt("return",[dt.idTensor]);case 114:return pt=Object(o.d)("elementShape",e,r,a),bt=Object(o.d)("elementDType",e,r,a),ht="TensorListReserve"===e.op?"numElements":"maxNumElements",zt=Object(o.d)(ht,e,r,a),wt=mt(pt,bt,zt),a.addTensorList(wt),t.abrupt("return",[wt.idTensor]);case 121:return Dt=Object(o.d)("tensorListId",e,r,a),xt=Object(o.d)("indices",e,r,a),Ot=Object(o.d)("elementShape",e,r,a),Lt=Object(o.d)("elementDType",e,r,a),St=a.getTensorList(Dt.id),t.abrupt("return",[St.gather(xt,Lt,Ot)]);case 127:return At=Object(o.d)("tensorListId",e,r,a),kt=Object(o.d)("elementShape",e,r,a),Ct=Object(o.d)("elementDType",e,r,a),It=Object(o.d)("numElements",e,r,a),Et=a.getTensorList(At.id),t.abrupt("return",[Et.stack(kt,Ct,It)]);case 133:return Mt=Object(o.d)("tensor",e,r,a),Ut=Object(o.d)("elementShape",e,r,a),Rt=Object(o.d)("elementDType",e,r,a),Wt=yt(Mt,Ut,Rt),a.addTensorList(Wt),t.abrupt("return",[Wt.idTensor]);case 139:return Qt=Object(o.d)("tensorListId",e,r,a),Yt=a.getTensorList(Qt.id),Gt=Object(o.d)("dtype",e,r,a),Ft=Object(o.d)("elementShape",e,r,a),t.abrupt("return",[Yt.concat(Gt,Ft)]);case 144:return Nt=Object(o.d)("tensorListId",e,r,a),qt=Object(o.d)("tensor",e,r,a),(Kt=a.getTensorList(Nt.id)).pushBack(qt),t.abrupt("return",[Kt.idTensor]);case 149:return Bt=Object(o.d)("tensorListId",e,r,a),Vt=Object(o.d)("elementShape",e,r,a),Xt=Object(o.d)("elementDType",e,r,a),Zt=a.getTensorList(Bt.id),t.abrupt("return",[Zt.popBack(Vt,Xt)]);case 154:return Ht=Object(o.d)("tensor",e,r,a),Jt=Object(o.d)("elementShape",e,r,a),_t=Object(o.d)("lengths",e,r,a),$t=Tt(Ht,_t,Jt),a.addTensorList($t),t.abrupt("return",[$t.idTensor]);case 160:throw TypeError("Node type ".concat(e.op," is not implemented"));case 161:case"end":return t.stop()}}),t)})),function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){zt(o,n,a,i,u,"next",t)}function u(t){zt(o,n,a,i,u,"throw",t)}i(void 0)}))});return function(t,r,n){return e.apply(this,arguments)}}(),Dt=r(216),xt=r(78),Ot=r(18),Lt=r(217),St=r(99),At=r(332),kt=r(158),Ct=r(167),It=r(343),Et=r(328),Mt=r(342),Ut=r(220);function Rt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Wt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Wt(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Qt(t,e,r){var n=Rt(Object(o.d)("fusedOps",t,e,r),2),a=n[0],i=n[1],u="biasadd"===a,v="prelu"===i,s="fusedbatchnorm"===a,c=Object(o.d)("numArgs",t,e,r);if(u){if(v&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!v&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(s)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");var P=Object(o.d)("strides",t,e,r),l=Object(o.c)(t,e,r),f=Object(o.d)("dataFormat",t,e,r).toUpperCase(),d=Object(o.d)("dilations",t,e,r),p=Rt(Object(o.d)("args",t,e,r),2);return{stride:P,pad:l,dataFormat:f,dilations:d,biasArg:p[0],preluArg:p[1],activationFunc:i,leakyreluAlpha:Object(o.d)("leakyreluAlpha",t,e,r)}}var Yt=r(157),Gt=r(339),Ft=r(344),Nt=r(145),qt=r(101),Kt=r(345),Bt=r(230),Vt=r(189),Xt=r(353),Zt=r(79),Ht=r(22),Jt=r(12),_t=r(240),$t=r(348);function te(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function ee(t,e,r){return{boxes:Object(o.d)("boxes",t,e,r),scores:Object(o.d)("scores",t,e,r),maxOutputSize:Object(o.d)("maxOutputSize",t,e,r),iouThreshold:Object(o.d)("iouThreshold",t,e,r),scoreThreshold:Object(o.d)("scoreThreshold",t,e,r),softNmsSigma:Object(o.d)("softNmsSigma",t,e,r)}}var re=function(){var t,e=(t=regeneratorRuntime.mark((function t(e,r,n){var a,i,u,v,s,c,P,l,f,d,p,b,h,y,m,g,T,j,z,w,D,x,O,L;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:t.t0=e.op,t.next="NonMaxSuppressionV5"===t.t0?3:"NonMaxSuppressionV4"===t.t0?8:"NonMaxSuppressionV3"===t.t0||"NonMaxSuppressionV2"===t.t0?14:"Where"===t.t0?19:"ListDiff"===t.t0?26:27;break;case 3:return a=ee(e,r,n),i=a.boxes,u=a.scores,v=a.maxOutputSize,s=a.iouThreshold,c=a.scoreThreshold,P=a.softNmsSigma,t.next=6,Ot.Bb.nonMaxSuppressionWithScoreAsync(i,u,v,s,c,P);case 6:return l=t.sent,t.abrupt("return",[l.selectedIndices,l.selectedScores]);case 8:return f=ee(e,r,n),d=f.boxes,p=f.scores,b=f.maxOutputSize,h=f.iouThreshold,y=f.scoreThreshold,m=Object(o.d)("padToMaxOutputSize",e,r,n),t.next=12,Ot.Bb.nonMaxSuppressionPaddedAsync(d,p,b,h,y,m);case 12:return g=t.sent,t.abrupt("return",[g.selectedIndices,g.validOutputs]);case 14:return T=ee(e,r,n),j=T.boxes,z=T.scores,w=T.maxOutputSize,D=T.iouThreshold,x=T.scoreThreshold,t.next=17,Ot.Bb.nonMaxSuppressionAsync(j,z,w,D,x);case 17:return t.t1=t.sent,t.abrupt("return",[t.t1]);case 19:return O=Jt.a(Object(o.d)("condition",e,r,n),"bool"),t.next=22,_t.a(O);case 22:return t.t2=t.sent,L=[t.t2],O.dispose(),t.abrupt("return",L);case 26:return t.abrupt("return",$t.a(Object(o.d)("x",e,r,n),Object(o.d)("y",e,r,n)));case 27:throw TypeError("Node type ".concat(e.op," is not implemented"));case 28:case"end":return t.stop()}}),t)})),function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){te(o,n,a,i,u,"next",t)}function u(t){te(o,n,a,i,u,"throw",t)}i(void 0)}))});return function(t,r,n){return e.apply(this,arguments)}}(),ne=r(238),ae=r(239),oe=r(91),ie=r(16);function ue(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function ve(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){ue(o,n,a,i,u,"next",t)}function u(t){ue(o,n,a,i,u,"throw",t)}i(void 0)}))}}function se(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var ce=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.keyDType=e,this.valueDType=r,this.handle=Object(n.scalar)(0),this.tensorMap=new Map,Object(n.keep)(this.handle)}var e,r,a,o;return e=t,(r=[{key:"id",get:function(){return this.handle.id}},{key:"clearAndClose",value:function(){this.tensorMap.forEach((function(t){return t.dispose()})),this.tensorMap.clear(),this.handle.dispose()}},{key:"size",value:function(){return this.tensorMap.size}},{key:"import",value:(o=ve(regeneratorRuntime.mark((function t(e,r){var a,o=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.checkKeyAndValueTensor(e,r),t.next=3,e.data();case 3:return a=t.sent,this.tensorMap.forEach((function(t){return t.dispose()})),this.tensorMap.clear(),t.abrupt("return",Object(n.tidy)((function(){var t=Object(n.unstack)(r),e=a.length,i=t.length;n.util.assert(e===i,(function(){return"The number of elements doesn't match, keys has "+"".concat(e," elements, the values has ").concat(i," ")+"elements."}));for(var u=0;u<e;u++){var v=a[u],s=t[u];Object(n.keep)(s),o.tensorMap.set(v,s)}return o.handle})));case 7:case"end":return t.stop()}}),t,this)}))),function(t,e){return o.apply(this,arguments)})},{key:"find",value:(a=ve(regeneratorRuntime.mark((function t(e,r){var a,o=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.checkKeyAndValueTensor(e,r),t.next=3,e.data();case 3:return a=t.sent,t.abrupt("return",Object(n.tidy)((function(){for(var t=[],e=0;e<a.length;e++){var i=a[e],u=o.findWithDefault(i,r);t.push(u)}return Object(n.stack)(t)})));case 5:case"end":return t.stop()}}),t,this)}))),function(t,e){return a.apply(this,arguments)})},{key:"findWithDefault",value:function(t,e){var r=this.tensorMap.get(t);return null!=r?r:e}},{key:"checkKeyAndValueTensor",value:function(t,e){if(t.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(t.dtype));if(e.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(e.dtype))}}])&&se(e.prototype,r),t}();function Pe(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}var le=function(){var t,e=(t=regeneratorRuntime.mark((function t(e,r,n,a){var i,u,v,s,c,P,l,f,d,p,b;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:t.t0=e.op,t.next="HashTable"===t.t0||"HashTableV2"===t.t0?3:"LookupTableImport"===t.t0||"LookupTableImportV2"===t.t0?8:"LookupTableFind"===t.t0||"LookupTableFindV2"===t.t0?16:24;break;case 3:return i=Object(o.d)("keyDType",e,r,n),u=Object(o.d)("valueDType",e,r,n),v=new ce(i,u),a.addHashTable(e.name,v),t.abrupt("return",[v.handle]);case 8:return s=Object(o.d)("tableHandle",e,r,n,a),c=Object(o.d)("keys",e,r,n),P=Object(o.d)("values",e,r,n),l=a.getHashTableById(s.id),t.next=14,l.import(c,P);case 14:return t.t1=t.sent,t.abrupt("return",[t.t1]);case 16:return f=Object(o.d)("tableHandle",e,r,n,a),d=Object(o.d)("keys",e,r,n),p=Object(o.d)("defaultValue",e,r,n),b=a.getHashTableById(f.id),t.next=22,b.find(d,p);case 22:return t.t2=t.sent,t.abrupt("return",[t.t2]);case 24:throw TypeError("Node type ".concat(e.op," is not implemented"));case 25:case"end":return t.stop()}}),t)})),function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Pe(o,n,a,i,u,"next",t)}function u(t){Pe(o,n,a,i,u,"throw",t)}i(void 0)}))});return function(t,r,n,a){return e.apply(this,arguments)}}(),fe=r(100),de=r(125),pe=r(52),be=r(60),he=r(122),ye=r(61),me=r(69),ge=r(123),Te=r(166),je=r(41),ze=r(27),we=r(57);function De(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||function(t,e){if(t){if("string"==typeof t)return xe(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?xe(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function xe(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Oe=r(105),Le=r(223),Se=r(350),Ae=r(341),ke=r(365),Ce=r(81),Ie=r(112),Ee=r(144),Me=r(19),Ue=r(211),Re=r(212),We=r(213),Qe=r(214),Ye=r(160),Ge=r(329),Fe=r(333),Ne=r(34),qe=r(121),Ke=r(55),Be=r(26),Ve=r(351),Xe=r(128),Ze=r(8),He=r(70),Je=r(104),_e=r(107),$e=r(90),tr=r(356),er=r(357),rr=r(171),nr=r(147),ar=r(172),or=r(236),ir=r(72),ur=r(227),vr=r(62),sr=r(126),cr=r(120),Pr=r(219),lr=r(143);function fr(t,e,r,a){var i=function(t,e,r){switch(t.category){case"arithmetic":return n.tidy((function(){return function(t,e,r){switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[s.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"AddN":return[c.a(Object(o.d)("tensors",t,e,r))];case"FloorMod":case"Mod":return[P.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"Mul":return[l.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"RealDiv":case"Div":return[f.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"DivNoNan":return[d.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"FloorDiv":return[p.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"Sub":return[b.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"Minimum":return[h.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"Maximum":return[y.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"Pow":return[m.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"SquaredDifference":return[g.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"basic_math":return n.tidy((function(){return function(t,e,r){switch(t.op){case"Abs":case"ComplexAbs":return[T.a(Object(o.d)("x",t,e,r))];case"Acos":return[j.a(Object(o.d)("x",t,e,r))];case"Acosh":return[z.a(Object(o.d)("x",t,e,r))];case"Asin":return[w.a(Object(o.d)("x",t,e,r))];case"Asinh":return[D.a(Object(o.d)("x",t,e,r))];case"Atan":return[x.a(Object(o.d)("x",t,e,r))];case"Atan2":return[O.a(Object(o.d)("x",t,e,r),Object(o.d)("y",t,e,r))];case"Atanh":return[L.a(Object(o.d)("x",t,e,r))];case"Ceil":return[S.a(Object(o.d)("x",t,e,r))];case"Complex":return[A.a(Object(o.d)("real",t,e,r),Object(o.d)("imag",t,e,r))];case"Cos":return[k.a(Object(o.d)("x",t,e,r))];case"Cosh":return[C.a(Object(o.d)("x",t,e,r))];case"Elu":return[I.a(Object(o.d)("x",t,e,r))];case"Erf":return[E.a(Object(o.d)("x",t,e,r))];case"Exp":return[M.a(Object(o.d)("x",t,e,r))];case"Expm1":return[U.a(Object(o.d)("x",t,e,r))];case"Floor":return[R.a(Object(o.d)("x",t,e,r))];case"Log":return[W.a(Object(o.d)("x",t,e,r))];case"Log1p":return[Q.a(Object(o.d)("x",t,e,r))];case"Imag":return[Y.a(Object(o.d)("x",t,e,r))];case"Neg":return[G.a(Object(o.d)("x",t,e,r))];case"Reciprocal":return[F.a(Object(o.d)("x",t,e,r))];case"Real":return[N.a(Object(o.d)("x",t,e,r))];case"Relu":return[q.a(Object(o.d)("x",t,e,r))];case"Round":return[K.a(Object(o.d)("x",t,e,r))];case"Selu":return[B.a(Object(o.d)("x",t,e,r))];case"Sigmoid":return[V.a(Object(o.d)("x",t,e,r))];case"Sin":return[X.a(Object(o.d)("x",t,e,r))];case"Sign":return[Z.a(Object(o.d)("x",t,e,r))];case"Sinh":return[H.a(Object(o.d)("x",t,e,r))];case"Softplus":return[J.a(Object(o.d)("x",t,e,r))];case"Sqrt":return[_.a(Object(o.d)("x",t,e,r))];case"Square":return[$.a(Object(o.d)("x",t,e,r))];case"Tanh":return[tt.a(Object(o.d)("x",t,e,r))];case"Tan":return[et.a(Object(o.d)("x",t,e,r))];case"ClipByValue":return[rt.a(Object(o.d)("x",t,e,r),Object(o.d)("clipValueMin",t,e,r),Object(o.d)("clipValueMax",t,e,r))];case"Relu6":return[nt.a(Object(o.d)("x",t,e,r))];case"Rsqrt":return[at.a(Object(o.e)(t.inputNames[0],e,r))];case"Prod":return[ot.a(Object(o.d)("x",t,e,r),Object(o.d)("axes",t,e,r))];case"LeakyRelu":return[it.a(Object(o.d)("x",t,e,r),Object(o.d)("alpha",t,e,r))];case"Prelu":return[ut.a(Object(o.d)("x",t,e,r),Object(o.d)("alpha",t,e,r))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"control":return wt(t,e,r);case"convolution":return n.tidy((function(){return function(t,e,r){switch(t.op){case"Conv1D":var n=Object(o.d)("stride",t,e,r),a=Object(o.d)("pad",t,e,r),i=Object(o.d)("dataFormat",t,e,r).toUpperCase(),u=Object(o.d)("dilation",t,e,r);return[Dt.a(Object(o.d)("x",t,e,r),Object(o.d)("filter",t,e,r),n,a,i,u)];case"Conv2D":var v=Object(o.d)("strides",t,e,r),s=Object(o.c)(t,e,r),c=Object(o.d)("dataFormat",t,e,r).toUpperCase(),P=Object(o.d)("dilations",t,e,r);return[xt.a(Object(o.d)("x",t,e,r),Object(o.d)("filter",t,e,r),[v[1],v[2]],s,c,[P[1],P[2]])];case"_FusedConv2D":var l=Qt(t,e,r),f=l.stride,d=l.pad,p=l.dataFormat,b=l.dilations,h=l.biasArg,y=l.preluArg,m=l.activationFunc,g=l.leakyreluAlpha;return[Ot.sb.conv2d({x:Object(o.d)("x",t,e,r),filter:Object(o.d)("filter",t,e,r),strides:[f[1],f[2]],pad:d,dataFormat:p,dilations:[b[1],b[2]],bias:h,activation:m,preluActivationWeights:y,leakyreluAlpha:g})];case"FusedDepthwiseConv2dNative":var T=Qt(t,e,r),j=T.stride,z=T.pad,w=T.dataFormat,D=T.dilations,x=T.biasArg,O=T.preluArg,L=T.activationFunc,S=T.leakyreluAlpha;return[Ot.sb.depthwiseConv2d({x:Object(o.d)("x",t,e,r),filter:Object(o.d)("filter",t,e,r),strides:[j[1],j[2]],pad:z,dataFormat:w,dilations:[D[1],D[2]],bias:x,activation:L,preluActivationWeights:O,leakyreluAlpha:S})];case"Conv2DBackpropInput":case"Conv2dTranspose":var A=Object(o.d)("outputShape",t,e,r),k=Object(o.d)("strides",t,e,r),C=Object(o.c)(t,e,r);return[Lt.a(Object(o.d)("x",t,e,r),Object(o.d)("filter",t,e,r),A,[k[1],k[2]],C)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":var I=Object(o.d)("strides",t,e,r),E=Object(o.c)(t,e,r),M=Object(o.d)("dilations",t,e,r),U=Object(o.d)("dataFormat",t,e,r).toUpperCase();return[St.a(Object(o.d)("input",t,e,r),Object(o.d)("filter",t,e,r),[I[1],I[2]],E,U,[M[1],M[2]])];case"Conv3D":var R=Object(o.d)("strides",t,e,r),W=Object(o.d)("pad",t,e,r),Q=Object(o.d)("dataFormat",t,e,r).toUpperCase(),Y=Object(o.d)("dilations",t,e,r);return[At.a(Object(o.d)("x",t,e,r),Object(o.d)("filter",t,e,r),[R[1],R[2],R[3]],W,Q,[Y[1],Y[2],Y[3]])];case"AvgPool":var G=Object(o.d)("strides",t,e,r),F=Object(o.d)("pad",t,e,r),N=Object(o.d)("kernelSize",t,e,r);return[kt.a(Object(o.d)("x",t,e,r),[N[1],N[2]],[G[1],G[2]],F)];case"MaxPool":var q=Object(o.d)("strides",t,e,r),K=Object(o.d)("pad",t,e,r),B=Object(o.d)("kernelSize",t,e,r);return[Ct.a(Object(o.d)("x",t,e,r),[B[1],B[2]],[q[1],q[2]],K)];case"MaxPoolWithArgmax":var V=Object(o.d)("strides",t,e,r),X=Object(o.d)("pad",t,e,r),Z=Object(o.d)("kernelSize",t,e,r),H=Object(o.d)("includeBatchInIndex",t,e,r),J=It.a(Object(o.d)("x",t,e,r),[Z[1],Z[2]],[V[1],V[2]],X,H);return[J.result,J.indexes];case"AvgPool3D":var _=Object(o.d)("strides",t,e,r),$=Object(o.d)("pad",t,e,r),tt=Object(o.d)("kernelSize",t,e,r);return[Et.a(Object(o.d)("x",t,e,r),[tt[1],tt[2],tt[3]],[_[1],_[2],_[3]],$)];case"MaxPool3D":var et=Object(o.d)("strides",t,e,r),rt=Object(o.d)("pad",t,e,r),nt=Object(o.d)("kernelSize",t,e,r);return[Mt.a(Object(o.d)("x",t,e,r),[nt[1],nt[2],nt[3]],[et[1],et[2],et[3]],rt)];case"Dilation2D":var at=Object(o.d)("strides",t,e,r),ot=Object(o.d)("pad",t,e,r),it=Object(o.d)("dilations",t,e,r),ut=at[1],vt=at[2],st=it[1],ct=it[2];return[Ut.a(Object(o.d)("x",t,e,r),Object(o.d)("filter",t,e,r),[ut,vt],ot,[st,ct],"NHWC")];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"creation":return n.tidy((function(){return function(t,e,r){switch(t.op){case"Fill":var n=Object(o.d)("shape",t,e,r),a=Object(o.d)("dtype",t,e,r),i=Object(o.d)("value",t,e,r);return[Yt.a(n,i,a)];case"LinSpace":var u=Object(o.d)("start",t,e,r),v=Object(o.d)("stop",t,e,r),s=Object(o.d)("num",t,e,r);return[Gt.a(u,v,s)];case"Multinomial":var c=Object(o.d)("logits",t,e,r),P=Object(o.d)("numSamples",t,e,r),l=Object(o.d)("seed",t,e,r);return[Ft.a(c,P,l)];case"OneHot":var f=Object(o.d)("indices",t,e,r),d=Object(o.d)("depth",t,e,r),p=Object(o.d)("onValue",t,e,r),b=Object(o.d)("offValue",t,e,r);return[Nt.a(f,d,p,b)];case"Ones":return[qt.a(Object(o.d)("shape",t,e,r),Object(o.d)("dtype",t,e,r))];case"OnesLike":return[Kt.a(Object(o.d)("x",t,e,r))];case"RandomUniform":return[Bt.a(Object(o.d)("shape",t,e,r),Object(o.d)("minval",t,e,r),Object(o.d)("maxval",t,e,r),Object(o.d)("dtype",t,e,r))];case"Range":var h=Object(o.d)("start",t,e,r),y=Object(o.d)("stop",t,e,r),m=Object(o.d)("step",t,e,r);return[Vt.a(h,y,m,Object(o.d)("dtype",t,e,r))];case"TruncatedNormal":var g=Object(o.d)("shape",t,e,r),T=Object(o.d)("mean",t,e,r),j=Object(o.d)("stdDev",t,e,r),z=Object(o.d)("seed",t,e,r);return[Xt.a(g,T,j,Object(o.d)("dtype",t,e,r),z)];case"Zeros":return[Zt.a(Object(o.d)("shape",t,e,r),Object(o.d)("dtype",t,e,r))];case"ZerosLike":return[Ht.a(Object(o.d)("x",t,e,r))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"dynamic":return re(t,e,r);case"evaluation":return n.tidy((function(){return function(t,e,r){switch(t.op){case"TopKV2":var n=Object(o.d)("x",t,e,r),a=Object(o.d)("k",t,e,r),i=Object(o.d)("sorted",t,e,r),u=ne.a(n,a,i);return[u.values,u.indices];case"Unique":var v=Object(o.d)("x",t,e,r),s=ae.a(v);return[s.values,s.indices];case"UniqueV2":var c=Object(o.d)("x",t,e,r),P=Object(o.d)("axis",t,e,r),l=ae.a(c,P);return[l.values,l.indices];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"image":return n.tidy((function(){return function(t,e,r){switch(t.op){case"ResizeBilinear":var n=Object(o.d)("images",t,e,r),a=Object(o.d)("size",t,e,r),i=Object(o.d)("alignCorners",t,e,r),u=Object(o.d)("halfPixelCenters",t,e,r);return[Ot.Bb.resizeBilinear(n,[a[0],a[1]],i,u)];case"ResizeNearestNeighbor":var v=Object(o.d)("images",t,e,r),s=Object(o.d)("size",t,e,r),c=Object(o.d)("alignCorners",t,e,r),P=Object(o.d)("halfPixelCenters",t,e,r);return[Ot.Bb.resizeNearestNeighbor(v,[s[0],s[1]],c,P)];case"CropAndResize":var l=Object(o.d)("image",t,e,r),f=Object(o.d)("boxes",t,e,r),d=Object(o.d)("boxInd",t,e,r),p=Object(o.d)("cropSize",t,e,r),b=Object(o.d)("method",t,e,r),h=Object(o.d)("extrapolationValue",t,e,r);return[Ot.Bb.cropAndResize(l,f,d,p,b,h)];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"graph":return n.tidy((function(){return function(t,e,r){switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":var n=Object(o.d)("default",t,e,r);return[Object(o.e)(t.name,e,r)||n];case"Placeholder":return[Object(o.e)(t.name,e,r)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":var a=Object(o.d)("x",t,e,r);return[Object(o.a)(a)];case"IdentityN":return Object(o.d)("x",t,e,r).map((function(t){return Object(o.a)(t)}));case"Snapshot":var i=Object(o.d)("x",t,e,r);return[Object(o.a)(i)];case"Shape":return[oe.a(Object(o.d)("x",t,e,r).shape,"int32")];case"ShapeN":return Object(o.d)("x",t,e,r).map((function(t){return oe.a(t.shape)}));case"Size":return[ie.a(Object(o.d)("x",t,e,r).size,"int32")];case"Rank":return[ie.a(Object(o.d)("x",t,e,r).rank,"int32")];case"NoOp":return[ie.a(1)];case"Print":var u=Object(o.d)("x",t,e,r),v=Object(o.d)("data",t,e,r),s=Object(o.d)("message",t,e,r),c=Object(o.d)("summarize",t,e,r);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(var P=0;P<v.length;P++)console.log(Array.prototype.slice.call(v[P].dataSync()).slice(0,c));return[u];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"logical":return n.tidy((function(){return function(t,e,r){switch(t.op){case"Equal":return[fe.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"NotEqual":return[de.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"Greater":return[pe.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"GreaterEqual":return[be.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"Less":return[he.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"LessEqual":return[ye.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"LogicalAnd":return[me.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"LogicalNot":return[ge.a(Object(o.d)("a",t,e,r))];case"LogicalOr":return[Te.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];case"Select":case"SelectV2":return[je.a(Object(o.d)("condition",t,e,r),Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"matrices":return n.tidy((function(){return function(t,e,r){switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ze.a(Object(o.d)("a",t,e,r),Object(o.d)("b",t,e,r),Object(o.d)("transposeA",t,e,r),Object(o.d)("transposeB",t,e,r))];case"Transpose":return[we.a(Object(o.d)("x",t,e,r),Object(o.d)("perm",t,e,r))];case"_FusedMatMul":var n=De(Object(o.d)("fusedOps",t,e,r),2),a=n[0],i=n[1],u="biasadd"===a,v="prelu"===i,s=Object(o.d)("numArgs",t,e,r),c=Object(o.d)("leakyreluAlpha",t,e,r);if(u){if(v&&2!==s)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!v&&1!==s)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var P=De(Object(o.d)("args",t,e,r),2),l=P[0],f=P[1];return[Ot.sb.matMul({a:Object(o.d)("a",t,e,r),b:Object(o.d)("b",t,e,r),transposeA:Object(o.d)("transposeA",t,e,r),transposeB:Object(o.d)("transposeB",t,e,r),bias:l,activation:i,preluActivationWeights:f,leakyreluAlpha:c})];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"normalization":return n.tidy((function(){return function(t,e,r){switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Oe.a(Object(o.d)("x",t,e,r),Object(o.d)("mean",t,e,r),Object(o.d)("variance",t,e,r),Object(o.d)("offset",t,e,r),Object(o.d)("scale",t,e,r),Object(o.d)("epsilon",t,e,r))];case"LRN":return[Le.a(Object(o.d)("x",t,e,r),Object(o.d)("radius",t,e,r),Object(o.d)("bias",t,e,r),Object(o.d)("alpha",t,e,r),Object(o.d)("beta",t,e,r))];case"Softmax":return[Se.a(Object(o.d)("x",t,e,r))];case"LogSoftmax":return[Ae.a(Object(o.d)("x",t,e,r))];case"SparseToDense":return[ke.a(Object(o.d)("sparseIndices",t,e,r),Object(o.d)("outputShape",t,e,r),Object(o.d)("sparseValues",t,e,r),Object(o.d)("defaultValue",t,e,r))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"reduction":return n.tidy((function(){return function(t,e,r){switch(t.op){case"Max":var n=Object(o.d)("axis",t,e,r),a=Object(o.d)("keepDims",t,e,r);return[Ce.a(Object(o.d)("x",t,e,r),n,a)];case"Mean":var i=Object(o.d)("axis",t,e,r),u=Object(o.d)("keepDims",t,e,r);return[Ie.a(Object(o.d)("x",t,e,r),i,u)];case"Min":var v=Object(o.d)("axis",t,e,r),s=Object(o.d)("keepDims",t,e,r);return[Ee.a(Object(o.d)("x",t,e,r),v,s)];case"Sum":var c=Object(o.d)("axis",t,e,r),P=Object(o.d)("keepDims",t,e,r);return[Me.a(Object(o.d)("x",t,e,r),c,P)];case"All":var l=Object(o.d)("axis",t,e,r),f=Object(o.d)("keepDims",t,e,r);return[Ue.a(Object(o.d)("x",t,e,r),l,f)];case"Any":var d=Object(o.d)("axis",t,e,r),p=Object(o.d)("keepDims",t,e,r);return[Re.a(Object(o.d)("x",t,e,r),d,p)];case"ArgMax":var b=Object(o.d)("axis",t,e,r);return[We.a(Object(o.d)("x",t,e,r),b)];case"ArgMin":var h=Object(o.d)("axis",t,e,r);return[Qe.a(Object(o.d)("x",t,e,r),h)];case"Prod":var y=Object(o.d)("axis",t,e,r),m=Object(o.d)("keepDims",t,e,r);return[ot.a(Object(o.d)("x",t,e,r),y,m)];case"Cumsum":var g=Object(o.d)("axis",t,e,r),T=Object(o.d)("exclusive",t,e,r),j=Object(o.d)("reverse",t,e,r);return[Ye.a(Object(o.d)("x",t,e,r),g,T,j)];case"Bincount":var z=Object(o.d)("x",t,e,r),w=Object(o.d)("weights",t,e,r),D=Object(o.d)("size",t,e,r);return[Ge.a(z,w,D)];case"DenseBincount":var x=Object(o.d)("x",t,e,r),O=Object(o.d)("weights",t,e,r),L=Object(o.d)("size",t,e,r),S=Object(o.d)("binaryOutput",t,e,r);return[Fe.a(x,O,L,S)];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"slice_join":return n.tidy((function(){return function(t,e,r){switch(t.op){case"ConcatV2":case"Concat":var a=Object(o.d)("n",t,e,r),i=Object(o.d)("axis",t,e,r),u=Object(o.d)("tensors",t,e,r);return u=u.slice(0,a),[Ne.a(u,i)];case"Gather":var v=Object(o.d)("x",t,e,r),s=Object(o.d)("indices",t,e,r);return[qe.a(v,Jt.a(s,"int32"),0)];case"GatherV2":var c=Object(o.d)("axis",t,e,r),P=Object(o.d)("batchDims",t,e,r),l=Object(o.d)("x",t,e,r),f=Object(o.d)("indices",t,e,r);return[qe.a(l,Jt.a(f,"int32"),c,P)];case"Reverse":for(var d=Object(o.d)("dims",t,e,r),p=[],b=0;b<d.length;b++)d[b]&&p.push(b);var h=Object(o.d)("x",t,e,r);return[Ke.a(h,p)];case"ReverseV2":var y=Object(o.d)("axis",t,e,r),m=Object(o.d)("x",t,e,r);return[Ke.a(m,y)];case"Slice":var g=Object(o.d)("begin",t,e,r),T=Object(o.d)("size",t,e,r);return[Be.a(Object(o.d)("x",t,e,r),g,T)];case"StridedSlice":var j=Object(o.d)("begin",t,e,r),z=Object(o.d)("end",t,e,r),w=Object(o.d)("strides",t,e,r),D=Object(o.d)("beginMask",t,e,r),x=Object(o.d)("endMask",t,e,r),O=Object(o.d)("ellipsisMask",t,e,r),L=Object(o.d)("newAxisMask",t,e,r),S=Object(o.d)("shrinkAxisMask",t,e,r),A=Object(o.d)("x",t,e,r);return[Ve.a(A,j,z,w,D,x,O,L,S)];case"Pack":return Object(n.tidy)((function(){var a=Object(o.d)("axis",t,e,r),i=Object(o.d)("tensors",t,e,r),u=i[0].shape,v=Xe.a(i[0]).shape,s=i.map((function(t){var e=n.util.arraysEqual(t.shape,u);if(!e&&!n.util.arraysEqual(Xe.a(t).shape,v))throw new Error("the input tensors shape does not match");return e?t:Ze.a(t,u)}));return[He.a(s,a)]}));case"Unpack":var k=Object(o.d)("axis",t,e,r),C=Object(o.d)("tensor",t,e,r);return Je.a(C,k);case"Tile":var I=Object(o.d)("reps",t,e,r);return[_e.a(Object(o.d)("x",t,e,r),I)];case"Split":case"SplitV":var E=Object(o.d)("axis",t,e,r),M=Object(o.d)("numOrSizeSplits",t,e,r),U=Object(o.d)("x",t,e,r);return $e.a(U,M,E);case"ScatterNd":var R=Object(o.d)("indices",t,e,r),W=Object(o.d)("values",t,e,r),Q=Object(o.d)("shape",t,e,r);return[tr.a(R,W,Q)];case"GatherNd":var Y=Object(o.d)("x",t,e,r),G=Object(o.d)("indices",t,e,r);return[er.a(Y,G)];case"SparseToDense":var F=Object(o.d)("sparseIndices",t,e,r),N=Object(o.d)("outputShape",t,e,r),q=Object(o.d)("sparseValues",t,e,r),K=Object(o.d)("defaultValue",t,e,r);return[ke.a(F,q,N,q.dtype===K.dtype?K:Jt.a(K,q.dtype))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"spectral":return n.tidy((function(){return function(t,e,r){switch(t.op){case"FFT":return[rr.a(Object(o.d)("x",t,e,r))];case"IFFT":return[nr.a(Object(o.d)("x",t,e,r))];case"RFFT":return[ar.a(Object(o.d)("x",t,e,r))];case"IRFFT":return[or.a(Object(o.d)("x",t,e,r))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"transformation":return n.tidy((function(){return function(t,e,r){switch(t.op){case"Cast":return[Jt.a(Object(o.d)("x",t,e,r),Object(o.d)("dtype",t,e,r))];case"ExpandDims":var n=Object(o.d)("axis",t,e,r);return[ir.a(Object(o.d)("x",t,e,r),n)];case"Squeeze":var a=Object(o.d)("axis",t,e,r);return[Xe.a(Object(o.d)("x",t,e,r),a)];case"Reshape":return[Ze.a(Object(o.d)("x",t,e,r),Object(o.d)("shape",t,e,r))];case"MirrorPad":return[ur.a(Object(o.d)("x",t,e,r),Object(o.d)("padding",t,e,r),Object(o.d)("mode",t,e,r))];case"PadV2":case"Pad":return[vr.a(Object(o.d)("x",t,e,r),Object(o.d)("padding",t,e,r),Object(o.d)("constantValue",t,e,r))];case"SpaceToBatchND":var i=Object(o.d)("blockShape",t,e,r),u=Object(o.d)("paddings",t,e,r);return[sr.a(Object(o.d)("x",t,e,r),i,u)];case"BatchToSpaceND":var v=Object(o.d)("blockShape",t,e,r),s=Object(o.d)("crops",t,e,r);return[cr.a(Object(o.d)("x",t,e,r),v,s)];case"DepthToSpace":var c=Object(o.d)("blockSize",t,e,r),P=Object(o.d)("dataFormat",t,e,r).toUpperCase();return[Pr.a(Object(o.d)("x",t,e,r),c,P)];case"BroadcastTo":return[lr.a(Object(o.d)("x",t,e,r),Object(o.d)("shape",t,e,r))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}}(t,e,r)}));case"hash_table":return le(t,e,r,a);case"custom":var i=Object(v.b)(t.op);if(i&&i.customExecutor)return i.customExecutor(new u(t,e,r));throw TypeError("Custom op ".concat(t.op," is not registered."));default:throw TypeError("Unknown op '".concat(t.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}}(t,e,r);return n.util.isPromise(i)?i.then((function(t){return[].concat(t)})):[].concat(i)}function dr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function pr(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var br=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};dr(this,t),this.weightMap=e,this.tensorArrayMap=r,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}var e,r;return e=t,(r=[{key:"newFrame",value:function(t,e){return{id:t,frameName:e,iterationId:0}}},{key:"currentContext",get:function(){return this.contexts},set:function(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}},{key:"currentContextId",get:function(){return this._currentContextIds[0]}},{key:"currentContextIds",get:function(){return this._currentContextIds}},{key:"generateCurrentContextIds",value:function(){for(var t=[],e=0;e<this.contexts.length-1;e++){var r=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(r))}t.push(""),this._currentContextIds=t}},{key:"contextIdforContexts",value:function(t){return t?t.map((function(t){return 0===t.id&&0===t.iterationId?"":"".concat(t.frameName,"-").concat(t.iterationId)})).join("/"):""}},{key:"enterFrame",value:function(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}},{key:"exitFrame",value:function(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}},{key:"nextIteration",value:function(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");this.contexts=this.contexts.slice(),this.lastId++;var t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}},{key:"getWeight",value:function(t){return this.weightMap[t]}},{key:"addTensorArray",value:function(t){this.tensorArrayMap[t.id]=t}},{key:"getTensorArray",value:function(t){return this.tensorArrayMap[t]}},{key:"addTensorList",value:function(t){this.tensorListMap[t.id]=t}},{key:"getTensorList",value:function(t){return this.tensorListMap[t]}},{key:"dispose",value:function(t){for(var e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(var r in this.tensorListMap)this.tensorListMap[r].clearAndClose(t)}}])&&pr(e.prototype,r),t}();function hr(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function yr(t,e,r,n){var a=new Set,i=[],u=null,v=null,s=new Set,c=Object.keys(t).map((function(t){return Object(o.g)(t)[0]})),P=[];null!=n&&(P=n.map((function(t){return Object(o.g)(t.name)[0]})));for(var l=function(t){return function(t){if(Array.isArray(t))return hr(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return hr(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?hr(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e);l.length>0;){var f=l.pop();(jr(f)||zr(f)||wr(f))&&null==u&&(v=(u=f).children.map((function(t){return t.name})).filter((function(t){return a.has(t)}))),a.add(f.name),null==r[f.name]&&-1===c.indexOf(f.name)&&-1===P.indexOf(f.name)&&(0!==f.inputs.length?f.inputs.forEach((function(t){s.has(t.name)||(s.add(t.name),l.push(t))})):i.push(f.name))}return{inputs:t,outputs:e,usedNodes:a,missingInputs:i,dynamicNode:u,syncInputs:v}}var mr=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],gr=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Tr=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function jr(t){return mr.indexOf(t.op)>=0}function zr(t){return gr.indexOf(t.op)>=0}function wr(t){return Tr.indexOf(t.op)>=0}function Dr(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function xr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Dr(o,n,a,i,u,"next",t)}function u(t){Dr(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Or(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}(t,e)||Sr(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Lr(t){return function(t){if(Array.isArray(t))return Ar(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||Sr(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Sr(t,e){if(t){if("string"==typeof t)return Ar(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ar(t,e):void 0}}function Ar(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function kr(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Cr=function(){function t(e,r){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.graph=e,this.parent=r,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((function(r){n._functionExecutorMap[r]=new t(e.functions[r],n)}))}var e,r,a,i,u,v;return e=t,(r=[{key:"weightIds",get:function(){return this.parent?this.parent.weightIds:this._weightIds}},{key:"functionExecutorMap",get:function(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}},{key:"weightMap",get:function(){return this.parent?this.parent.weightMap:this._weightMap},set:function(t){var e,r=Object.keys(t).map((function(e){return t[e].map((function(t){return t.id}))}));this._weightIds=(e=[]).concat.apply(e,Lr(r)),this._weightMap=t}},{key:"resourceManager",set:function(t){this._resourceManager=t}},{key:"inputs",get:function(){return this._inputs.map((function(t){return{name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}}))}},{key:"outputs",get:function(){return this._outputs.map((function(t){return{name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}}))}},{key:"inputNodes",get:function(){return this._inputs.map((function(t){return t.signatureKey||t.name}))}},{key:"outputNodes",get:function(){return this._outputs.map((function(t){var e=t.signatureKey||t.name;return t.defaultOutput?"".concat(e,":").concat(t.defaultOutput):e}))}},{key:"functions",get:function(){var t=this;return Object.keys(this._functions).reduce((function(e,r){return e[r]=t._functions[r].signature,e}),{})}},{key:"getCompilationKey",value:function(t,e){var r=t.map((function(t){return t.name})).sort(),n=e.map((function(t){return t.name})).sort();return r.join(this.SEPERATOR)+"--"+n.join(this.SEPERATOR)}},{key:"compile",value:function(t,e){var r=yr(t,e,this.weightMap,this._initNodes),n=r.missingInputs,a=r.dynamicNode,i=r.syncInputs;if(null!=a)throw new Error("This execution contains the node '".concat(a.name,"', which has ")+"the dynamic op '".concat(a.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(i,"]"));if(n.length>0){var u=e.map((function(t){return t.name})),v=Object.keys(t);throw new Error("Cannot compute the outputs [".concat(u,"] from the provided inputs ")+"[".concat(v,"]. Missing the following inputs: [").concat(n,"]"))}return function(t,e,r){var n=r.usedNodes,a=r.inputs,i=[],u=Object.keys(a).map((function(t){return Object(o.g)(t)[0]})).map((function(e){return t.nodes[e]})),v=t.initNodes;u.forEach((function(t){n.has(t.name)&&i.push(t)})),t.weights.forEach((function(t){n.has(t.name)&&i.push(t)})),null!=v&&v.forEach((function(t){n.has(t.name)&&i.push(t)}));for(var s=new Set,c=[];i.length>0;){var P=i.pop();s.add(P.name),e[P.name]||c.push(P),P.children.forEach((function(t){!s.has(t.name)&&n.has(t.name)&&t.inputs.every((function(t){return s.has(t.name)}))&&i.push(t)}))}return c}(this.graph,this.weightMap,r)}},{key:"execute",value:function(t,e){var r=this;t=this.mapInputs(t);var a=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);var i=a.map((function(t){return r.graph.nodes[Object(o.g)(t)[0]]})),u=e.map((function(t){return Object(o.g)(t)[0]})),v=u.map((function(t){return r.graph.nodes[t]}));0===v.length&&(v=this._outputs);var s=this.getCompilationKey(i,v),c=this.compiledMap.get(s);null==c&&(c=this.compile(t,v),this.compiledMap.set(s,c));var P={},l={};return Object(n.tidy)((function(){var a=new br(r.weightMap,P,l,r.functionExecutorMap),i=Object.assign({},r.weightMap);Object.keys(t).forEach((function(e){var r=Or(Object(o.g)(e),2),n=r[0],a=[];a[r[1]]=t[e],i[n]=a}));for(var v=r.getFrozenTensorIds(i),s={},f=0;f<c.length;f++){var d=c[f];if(!i[d.name]){var p=fr(d,i,a,r._resourceManager);if(n.util.isPromise(p))throw new Error("The execution of the op '".concat(d.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");i[d.name]=p,r.checkTensorForDisposal(d.name,d,i,a,v,u,s)}}return null==r.parent&&a.dispose(v),e.map((function(t){return Object(o.e)(t,i,a)}))}))}},{key:"getFrozenTensorIds",value:function(t){var e=[].concat.apply([],Object.keys(t).map((function(e){return t[e]})).map((function(t){return t.map((function(t){return t.id}))})));return new Set(e)}},{key:"checkTensorForDisposal",value:function(t,e,r,n,a,i,u){"control"!==e.category&&-1===i.indexOf(t)&&(r[t].forEach((function(t){null!=t&&(u[t.id]=(u[t.id]||0)+e.children.length)})),e.inputs.forEach((function(t){if("control"!==t.category){var e=Object(o.f)(t.name,r,n);null!=e&&e.forEach((function(t){if(t&&!a.has(t.id)){var e=u[t.id];1===e?(t.dispose(),delete u[t.id]):null!=e&&u[t.id]--}}))}})))}},{key:"executeAsync",value:(v=xr(regeneratorRuntime.mark((function t(e,r){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this._executeAsync(e,r));case 1:case"end":return t.stop()}}),t,this)}))),function(t,e){return v.apply(this,arguments)})},{key:"_executeAsync",value:(u=xr(regeneratorRuntime.mark((function t(e,r){var n,a,i,u,v,s,c,P,l,f=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=f.length>2&&void 0!==f[2]&&f[2],a=f.length>3&&void 0!==f[3]?f[3]:{},i=f.length>4&&void 0!==f[4]?f[4]:{},n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),r=this.mapOutputs(r),this.checkOutputs(r)),u=new br(this.weightMap,a,i,this.functionExecutorMap),t.next=7,this.executeWithControlFlow(e,u,r,n);case 7:return v=t.sent,s=r.map((function(t){return Object(o.e)(t,v,u)})),c=s.map((function(t){return t.id})),P=Object.keys(e).map((function(t){return e[t].id})),l=new Set([].concat(Lr(c),Lr(P),Lr(this.weightIds))),Object.keys(v).forEach((function(t){v[t].forEach((function(t){!t||t.isDisposed||l.has(t.id)||t.dispose()}))})),null==this.parent&&u.dispose(l),t.abrupt("return",s);case 15:case"end":return t.stop()}}),t,this)}))),function(t,e){return u.apply(this,arguments)})},{key:"executeFunctionAsync",value:(i=xr(regeneratorRuntime.mark((function t(e,r,n){var a,o=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=e.reduce((function(t,e,r){return t[o.inputs[r].name]=e,t}),{}),t.abrupt("return",this._executeAsync(a,this.outputNodes,!0,r,n));case 2:case"end":return t.stop()}}),t,this)}))),function(t,e,r){return i.apply(this,arguments)})},{key:"executeWithControlFlow",value:(a=xr(regeneratorRuntime.mark((function t(e,r,n,a){var i,u,v,s,c,P,l,f,d,p,b,h,y,m,g,T,j,z=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:i=Object.keys(e),u=i.map((function(t){return z.graph.nodes[Object(o.g)(t)[0]]})),v=n.map((function(t){return Object(o.g)(t)[0]})),0===(s=v.map((function(t){return z.graph.nodes[t]}))).length&&(s=this._outputs),c=yr(e,s,this.weightMap,this._initNodes),P=c.usedNodes,l=c.missingInputs,f=c.dynamicNode,d=c.syncInputs,p=[].concat(Lr(u),Lr(this.graph.weights),Lr(this._initNodes||[])).map((function(t){return{node:t,contexts:r.currentContext}})),b=Object.assign({},this.weightMap),Object.keys(e).forEach((function(t){var r=Or(Object(o.g)(t),2),n=r[0],a=[];a[r[1]]=e[t],b[n]=a})),h={},y=this.getFrozenTensorIds(b),m={};case 12:if(!(p.length>0)){t.next=18;break}return g=this.processStack(u,p,r,b,m,y,v,h,P),t.next=16,Promise.all(g);case 16:t.next=12;break;case 18:if(null!=f||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."),!((T=s.filter((function(t){return!jr(t)&&!Object(o.e)(t.name,b,r)})).map((function(t){return t.name}))).length>0)){t.next=24;break}throw j="",null!=f&&(j="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(d,"]")),new Error("Cannot compute the outputs [".concat(T,"] from the provided ")+"inputs [".concat(i,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(j));case 24:return t.abrupt("return",b);case 25:case"end":return t.stop()}}),t,this)}))),function(t,e,r,n){return a.apply(this,arguments)})},{key:"processStack",value:function(t,e,r,a,i,u,v,s,c){for(var P=this,l=[],f=function(){var t=e.pop();r.currentContext=t.contexts;var f="";if("Enter"===t.node.op&&Object(o.d)("isConstant",t.node,a,r)){var d=Or(Object(o.b)(t.node.name,r),1);f=d[0]}if(null==a[t.node.name]){var p=fr(t.node,a,r,P._resourceManager);if(!f){var b=Or(Object(o.b)(t.node.name,r),1);f=b[0]}var h=r.currentContext;n.util.isPromise(p)?l.push(p.then((function(n){return a[f]=n,r.currentContext=h,P.checkTensorForDisposal(f,t.node,a,r,u,v,s),P.processChildNodes(t.node,e,r,a,i,c),n}))):(a[f]=p,P.checkTensorForDisposal(f,t.node,a,r,u,v,s),P.processChildNodes(t.node,e,r,a,i,c))}else P.processChildNodes(t.node,e,r,a,i,c)};e.length>0;)f();return l}},{key:"processChildNodes",value:function(t,e,r,n,a,i){t.children.forEach((function(t){var u=Or(Object(o.b)(t.name,r),1)[0];!a[u]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some((function(t){return!!Object(o.e)(t,n,r)}))&&(a[u]=!0,e.push({contexts:r.currentContext,node:t})):t.inputNames.every((function(t){return!!Object(o.e)(t,n,r)}))&&(a[u]=!0,e.push({contexts:r.currentContext,node:t})))}))}},{key:"dispose",value:function(){var t=this;Object.keys(this.weightMap).forEach((function(e){return t.weightMap[e].forEach((function(t){return t.dispose()}))}))}},{key:"checkInputShapeAndType",value:function(t){var e=this;Object.keys(t).forEach((function(r){var a=t[r],i=Or(Object(o.g)(r),1)[0],u=e.graph.nodes[i];if(u.attrParams.shape&&u.attrParams.shape.value){var v=u.attrParams.shape.value,s=v.length===a.shape.length&&a.shape.every((function(t,e){return-1===v[e]||v[e]===t}));n.util.assert(s,(function(){return"The shape of dict['".concat(u.name,"'] provided in ")+"model.execute(dict) must be [".concat(v,"], but was ")+"[".concat(a.shape,"]")}))}u.attrParams.dtype&&u.attrParams.dtype.value&&n.util.assert(a.dtype===u.attrParams.dtype.value,(function(){return"The dtype of dict['".concat(u.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(u.attrParams.dtype.value,", but was ").concat(a.dtype)}))}))}},{key:"mapInputs",value:function(t){var e={};for(var r in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[r]?e[this._signature.inputs[r].name]=t[r]:e[r]=t[r];return e}},{key:"checkInputs",value:function(t){var e=this,r=Object.keys(t).filter((function(t){var r=Or(Object(o.g)(t),1)[0];return null==e.graph.nodes[r]}));if(r.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(r,"] that are not part of graph"))}},{key:"mapOutputs",value:function(t){var e=this;return t.map((function(t){return null!=e._signature&&null!=e._signature.outputs&&null!=e._signature.outputs[t]?e._signature.outputs[t].name:t}),{})}},{key:"checkOutputs",value:function(t){var e=this;t.forEach((function(t){var r=Or(Object(o.g)(t),1)[0];if(!e.graph.nodes[r])throw new Error("The output '".concat(t,"' is not found in the graph"))}))}}])&&kr(e.prototype,r),t}();function Ir(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Er(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Mr=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Ir(this,t),this.hashTableNameToHandle=e,this.hashTableMap=r}var e,r;return e=t,(r=[{key:"addHashTable",value:function(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}},{key:"getHashTableHandleByName",value:function(t){return this.hashTableNameToHandle[t]}},{key:"getHashTableById",value:function(t){return this.hashTableMap[t]}},{key:"dispose",value:function(){for(var t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(var e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}])&&Er(e.prototype,r),t}();function Ur(t,e,r,n,a,o,i){try{var u=t[o](i),v=u.value}catch(t){return void r(t)}u.done?e(v):Promise.resolve(v).then(n,a)}function Rr(t){return function(){var e=this,r=arguments;return new Promise((function(n,a){var o=t.apply(e,r);function i(t){Ur(o,n,a,i,u,"next",t)}function u(t){Ur(o,n,a,i,u,"throw",t)}i(void 0)}))}}function Wr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Qr(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var Yr=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Wr(this,t),this.modelUrl=e,this.loadOptions=r,this.version="n/a",null==r&&(this.loadOptions={}),this.resourceManager=new Mr}var e,r,o,i,u;return e=t,(r=[{key:"modelVersion",get:function(){return this.version}},{key:"inputNodes",get:function(){return this.executor.inputNodes}},{key:"outputNodes",get:function(){return this.executor.outputNodes}},{key:"inputs",get:function(){return this.executor.inputs}},{key:"outputs",get:function(){return this.executor.outputs}},{key:"weights",get:function(){return this.executor.weightMap}},{key:"metadata",get:function(){return this.artifacts.userDefinedMetadata}},{key:"modelSignature",get:function(){return this.signature}},{key:"findIOHandler",value:function(){var t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=n.io.browserHTTPRequest(t,this.loadOptions);else{var e=n.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(n.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error("Found more than one (".concat(e.length,") load handlers for ")+"URL '".concat([t],"'"));this.handler=e[0]}}},{key:"load",value:(u=Rr(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.findIOHandler(),null!=this.handler.load){t.next=3;break}throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");case 3:return t.next=5,this.handler.load();case 5:return e=t.sent,t.abrupt("return",this.loadSync(e));case 7:case"end":return t.stop()}}),t,this)}))),function(){return u.apply(this,arguments)})},{key:"loadSync",value:function(t){this.artifacts=t;var e,r=this.artifacts.modelTopology;e=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=e,this.version="".concat(r.versions.producer,".").concat(r.versions.minConsumer);var o=n.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Cr(a.a.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){var i=a.a.Instance.transformGraph(t.modelInitializer);this.initializer=new Cr(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}},{key:"save",value:(i=Rr(regeneratorRuntime.mark((function t(e,r){var a;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if("string"!=typeof e){t.next=9;break}if(0!==(a=n.io.getSaveHandlers(e)).length){t.next=6;break}throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));case 6:if(!(a.length>1)){t.next=8;break}throw new Error("Found more than one (".concat(a.length,") save handlers for ")+"URL '".concat(e,"'"));case 8:e=a[0];case 9:if(null!=e.save){t.next=11;break}throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");case 11:return t.abrupt("return",e.save(this.artifacts));case 12:case"end":return t.stop()}}),t,this)}))),function(t,e){return i.apply(this,arguments)})},{key:"predict",value:function(t,e){return this.execute(t,this.outputNodes)}},{key:"normalizeInputs",value:function(t){if(!(t instanceof n.Tensor||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,"+"the graph model has ".concat(this.inputNodes.length," placeholders, ")+"while there are ".concat(t.length," input tensors."));return this.inputNodes.reduce((function(e,r,n){return e[r]=t[n],e}),{})}},{key:"normalizeOutputs",value:function(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}},{key:"execute",value:function(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);var r=this.executor.execute(t,e);return r.length>1?r:r[0]}},{key:"executeAsync",value:(o=Rr(regeneratorRuntime.mark((function t(e,r){var n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=this.normalizeInputs(e),r=this.normalizeOutputs(r),t.next=4,this.executor.executeAsync(e,r);case 4:return n=t.sent,t.abrupt("return",n.length>1?n:n[0]);case 6:case"end":return t.stop()}}),t,this)}))),function(t,e){return o.apply(this,arguments)})},{key:"convertTensorMapToTensorsMap",value:function(t){return Object.keys(t).reduce((function(e,r){return e[r]=[t[r]],e}),{})}},{key:"dispose",value:function(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}])&&Qr(e.prototype,r),t}();function Gr(t){return Fr.apply(this,arguments)}function Fr(){return(Fr=Rr(regeneratorRuntime.mark((function t(e){var r,n,a=arguments;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=a.length>1&&void 0!==a[1]?a[1]:{},null!=e){t.next=3;break}throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");case 3:return null==r&&(r={}),r.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e="".concat(e).concat("model.json").concat("?tfjs-format=file")),n=new Yr(e,r),t.next=8,n.load();case 8:return t.abrupt("return",n);case 9:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var Nr="2.8.6"},function(t,e,r){"use strict";r.r(e),r.d(e,"Vector2",(function(){return u})),r.d(e,"Vector3",(function(){return v})),r.d(e,"Vector4",(function(){return s})),r.d(e,"Quaternion",(function(){return c})),r.d(e,"Matrix",(function(){return P})),r.d(e,"TmpVectors",(function(){return f}));var n=function(){function t(){}return t.WithinEpsilon=function(t,e,r){void 0===r&&(r=1401298e-51);var n=t-e;return-r<=n&&n<=r},t.ToHex=function(t){var e=t.toString(16);return t<=15?("0"+e).toUpperCase():e.toUpperCase()},t.Sign=function(t){return 0==(t=+t)||isNaN(t)?t:t>0?1:-1},t.Clamp=function(t,e,r){return void 0===e&&(e=0),void 0===r&&(r=1),Math.min(r,Math.max(e,t))},t.Log2=function(t){return Math.log(t)*Math.LOG2E},t.Repeat=function(t,e){return t-Math.floor(t/e)*e},t.Normalize=function(t,e,r){return(t-e)/(r-e)},t.Denormalize=function(t,e,r){return t*(r-e)+e},t.DeltaAngle=function(e,r){var n=t.Repeat(r-e,360);return n>180&&(n-=360),n},t.PingPong=function(e,r){var n=t.Repeat(e,2*r);return r-Math.abs(n-r)},t.SmoothStep=function(e,r,n){var a=t.Clamp(n);return r*(a=-2*a*a*a+3*a*a)+e*(1-a)},t.MoveTowards=function(e,r,n){return Math.abs(r-e)<=n?r:e+t.Sign(r-e)*n},t.MoveTowardsAngle=function(e,r,n){var a=t.DeltaAngle(e,r),o=0;return-n<a&&a<n?o=r:(r=e+a,o=t.MoveTowards(e,r,n)),o},t.Lerp=function(t,e,r){return t+(e-t)*r},t.LerpAngle=function(e,r,n){var a=t.Repeat(r-e,360);return a>180&&(a-=360),e+a*t.Clamp(n)},t.InverseLerp=function(e,r,n){return e!=r?t.Clamp((n-e)/(r-e)):0},t.Hermite=function(t,e,r,n,a){var o=a*a,i=a*o;return t*(2*i-3*o+1)+r*(-2*i+3*o)+e*(i-2*o+a)+n*(i-o)},t.RandomRange=function(t,e){return t===e?t:Math.random()*(e-t)+t},t.RangeToPercent=function(t,e,r){return(t-e)/(r-e)},t.PercentToRange=function(t,e,r){return(r-e)*t+e},t.NormalizeRadians=function(e){return e-t.TwoPi*Math.floor((e+Math.PI)/t.TwoPi)},t.TwoPi=2*Math.PI,t}(),a=function(){function t(){}return t.BuildArray=function(t,e){for(var r=[],n=0;n<t;++n)r.push(e());return r},t}(),o=function(){function t(){}return t.GetClass=function(t){return this.RegisteredTypes&&this.RegisteredTypes[t]?this.RegisteredTypes[t]:null},t.RegisteredTypes={},t}(),i=r(114),u=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}return t.prototype.toString=function(){return"{X: "+this.x+" Y:"+this.y+"}"},t.prototype.getClassName=function(){return"Vector2"},t.prototype.getHashCode=function(){var t=0|this.x;return 397*t^(0|this.y)},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,this},t.prototype.fromArray=function(e,r){return void 0===r&&(r=0),t.FromArrayToRef(e,r,this),this},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this},t.prototype.copyFromFloats=function(t,e){return this.x=t,this.y=e,this},t.prototype.set=function(t,e){return this.copyFromFloats(t,e)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.addToRef=function(t,e){return e.x=this.x+t.x,e.y=this.y+t.y,this},t.prototype.addInPlace=function(t){return this.x+=t.x,this.y+=t.y,this},t.prototype.addVector3=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.subtractToRef=function(t,e){return e.x=this.x-t.x,e.y=this.y-t.y,this},t.prototype.subtractInPlace=function(t){return this.x-=t.x,this.y-=t.y,this},t.prototype.multiplyInPlace=function(t){return this.x*=t.x,this.y*=t.y,this},t.prototype.multiply=function(e){return new t(this.x*e.x,this.y*e.y)},t.prototype.multiplyToRef=function(t,e){return e.x=this.x*t.x,e.y=this.y*t.y,this},t.prototype.multiplyByFloats=function(e,r){return new t(this.x*e,this.y*r)},t.prototype.divide=function(e){return new t(this.x/e.x,this.y/e.y)},t.prototype.divideToRef=function(t,e){return e.x=this.x/t.x,e.y=this.y/t.y,this},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.negate=function(){return new t(-this.x,-this.y)},t.prototype.negateInPlace=function(){return this.x*=-1,this.y*=-1,this},t.prototype.negateToRef=function(t){return t.copyFromFloats(-1*this.x,-1*this.y)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this},t.prototype.scale=function(e){var r=new t(0,0);return this.scaleToRef(e,r),r},t.prototype.scaleToRef=function(t,e){return e.x=this.x*t,e.y=this.y*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this.x*t,e.y+=this.y*t,this},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=.001),t&&n.WithinEpsilon(this.x,t.x,e)&&n.WithinEpsilon(this.y,t.y,e)},t.prototype.floor=function(){return new t(Math.floor(this.x),Math.floor(this.y))},t.prototype.fract=function(){return new t(this.x-Math.floor(this.x),this.y-Math.floor(this.y))},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},t.prototype.lengthSquared=function(){return this.x*this.x+this.y*this.y},t.prototype.normalize=function(){var t=this.length();return 0===t||(this.x/=t,this.y/=t),this},t.prototype.clone=function(){return new t(this.x,this.y)},t.Zero=function(){return new t(0,0)},t.One=function(){return new t(1,1)},t.FromArray=function(e,r){return void 0===r&&(r=0),new t(e[r],e[r+1])},t.FromArrayToRef=function(t,e,r){r.x=t[e],r.y=t[e+1]},t.CatmullRom=function(e,r,n,a,o){var i=o*o,u=o*i;return new t(.5*(2*r.x+(-e.x+n.x)*o+(2*e.x-5*r.x+4*n.x-a.x)*i+(-e.x+3*r.x-3*n.x+a.x)*u),.5*(2*r.y+(-e.y+n.y)*o+(2*e.y-5*r.y+4*n.y-a.y)*i+(-e.y+3*r.y-3*n.y+a.y)*u))},t.Clamp=function(e,r,n){var a=e.x;a=(a=a>n.x?n.x:a)<r.x?r.x:a;var o=e.y;return new t(a,o=(o=o>n.y?n.y:o)<r.y?r.y:o)},t.Hermite=function(e,r,n,a,o){var i=o*o,u=o*i,v=2*u-3*i+1,s=-2*u+3*i,c=u-2*i+o,P=u-i;return new t(e.x*v+n.x*s+r.x*c+a.x*P,e.y*v+n.y*s+r.y*c+a.y*P)},t.Lerp=function(e,r,n){return new t(e.x+(r.x-e.x)*n,e.y+(r.y-e.y)*n)},t.Dot=function(t,e){return t.x*e.x+t.y*e.y},t.Normalize=function(t){var e=t.clone();return e.normalize(),e},t.Minimize=function(e,r){return new t(e.x<r.x?e.x:r.x,e.y<r.y?e.y:r.y)},t.Maximize=function(e,r){return new t(e.x>r.x?e.x:r.x,e.y>r.y?e.y:r.y)},t.Transform=function(e,r){var n=t.Zero();return t.TransformToRef(e,r,n),n},t.TransformToRef=function(t,e,r){var n=e.m,a=t.x*n[0]+t.y*n[4]+n[12],o=t.x*n[1]+t.y*n[5]+n[13];r.x=a,r.y=o},t.PointInTriangle=function(t,e,r,n){var a=.5*(-r.y*n.x+e.y*(-r.x+n.x)+e.x*(r.y-n.y)+r.x*n.y),o=a<0?-1:1,i=(e.y*n.x-e.x*n.y+(n.y-e.y)*t.x+(e.x-n.x)*t.y)*o,u=(e.x*r.y-e.y*r.x+(e.y-r.y)*t.x+(r.x-e.x)*t.y)*o;return i>0&&u>0&&i+u<2*a*o},t.Distance=function(e,r){return Math.sqrt(t.DistanceSquared(e,r))},t.DistanceSquared=function(t,e){var r=t.x-e.x,n=t.y-e.y;return r*r+n*n},t.Center=function(t,e){var r=t.add(e);return r.scaleInPlace(.5),r},t.DistanceOfPointFromSegment=function(e,r,n){var a=t.DistanceSquared(r,n);if(0===a)return t.Distance(e,r);var o=n.subtract(r),i=Math.max(0,Math.min(1,t.Dot(e.subtract(r),o)/a)),u=r.add(o.multiplyByFloats(i,i));return t.Distance(e,u)},t}(),v=function(){function t(t,e,r){void 0===t&&(t=0),void 0===e&&(e=0),void 0===r&&(r=0),this._isDirty=!0,this._x=t,this._y=e,this._z=r}return Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(t){this._x=t,this._isDirty=!0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(t){this._y=t,this._isDirty=!0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this._z},set:function(t){this._z=t,this._isDirty=!0},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"{X: "+this._x+" Y:"+this._y+" Z:"+this._z+"}"},t.prototype.getClassName=function(){return"Vector3"},t.prototype.getHashCode=function(){var t=0|this._x;return 397*(t=397*t^(0|this._y))^(0|this._z)},t.prototype.asArray=function(){var t=[];return this.toArray(t,0),t},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,this},t.prototype.fromArray=function(e,r){return void 0===r&&(r=0),t.FromArrayToRef(e,r,this),this},t.prototype.toQuaternion=function(){return c.RotationYawPitchRoll(this._y,this._x,this._z)},t.prototype.addInPlace=function(t){return this.addInPlaceFromFloats(t._x,t._y,t._z)},t.prototype.addInPlaceFromFloats=function(t,e,r){return this.x+=t,this.y+=e,this.z+=r,this},t.prototype.add=function(e){return new t(this._x+e._x,this._y+e._y,this._z+e._z)},t.prototype.addToRef=function(t,e){return e.copyFromFloats(this._x+t._x,this._y+t._y,this._z+t._z)},t.prototype.subtractInPlace=function(t){return this.x-=t._x,this.y-=t._y,this.z-=t._z,this},t.prototype.subtract=function(e){return new t(this._x-e._x,this._y-e._y,this._z-e._z)},t.prototype.subtractToRef=function(t,e){return this.subtractFromFloatsToRef(t._x,t._y,t._z,e)},t.prototype.subtractFromFloats=function(e,r,n){return new t(this._x-e,this._y-r,this._z-n)},t.prototype.subtractFromFloatsToRef=function(t,e,r,n){return n.copyFromFloats(this._x-t,this._y-e,this._z-r)},t.prototype.negate=function(){return new t(-this._x,-this._y,-this._z)},t.prototype.negateInPlace=function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},t.prototype.negateToRef=function(t){return t.copyFromFloats(-1*this._x,-1*this._y,-1*this._z)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this},t.prototype.scale=function(e){return new t(this._x*e,this._y*e,this._z*e)},t.prototype.scaleToRef=function(t,e){return e.copyFromFloats(this._x*t,this._y*t,this._z*t)},t.prototype.scaleAndAddToRef=function(t,e){return e.addInPlaceFromFloats(this._x*t,this._y*t,this._z*t)},t.prototype.projectOnPlane=function(e,r){var n=t.Zero();return this.projectOnPlaneToRef(e,r,n),n},t.prototype.projectOnPlaneToRef=function(e,r,n){var a=e.normal,o=e.d,i=l.Vector3[0];this.subtractToRef(r,i),i.normalize();var u=t.Dot(i,a),v=-(t.Dot(r,a)+o)/u,s=i.scaleInPlace(v);r.addToRef(s,n)},t.prototype.equals=function(t){return t&&this._x===t._x&&this._y===t._y&&this._z===t._z},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=.001),t&&n.WithinEpsilon(this._x,t._x,e)&&n.WithinEpsilon(this._y,t._y,e)&&n.WithinEpsilon(this._z,t._z,e)},t.prototype.equalsToFloats=function(t,e,r){return this._x===t&&this._y===e&&this._z===r},t.prototype.multiplyInPlace=function(t){return this.x*=t._x,this.y*=t._y,this.z*=t._z,this},t.prototype.multiply=function(t){return this.multiplyByFloats(t._x,t._y,t._z)},t.prototype.multiplyToRef=function(t,e){return e.copyFromFloats(this._x*t._x,this._y*t._y,this._z*t._z)},t.prototype.multiplyByFloats=function(e,r,n){return new t(this._x*e,this._y*r,this._z*n)},t.prototype.divide=function(e){return new t(this._x/e._x,this._y/e._y,this._z/e._z)},t.prototype.divideToRef=function(t,e){return e.copyFromFloats(this._x/t._x,this._y/t._y,this._z/t._z)},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.minimizeInPlace=function(t){return this.minimizeInPlaceFromFloats(t._x,t._y,t._z)},t.prototype.maximizeInPlace=function(t){return this.maximizeInPlaceFromFloats(t._x,t._y,t._z)},t.prototype.minimizeInPlaceFromFloats=function(t,e,r){return t<this._x&&(this.x=t),e<this._y&&(this.y=e),r<this._z&&(this.z=r),this},t.prototype.maximizeInPlaceFromFloats=function(t,e,r){return t>this._x&&(this.x=t),e>this._y&&(this.y=e),r>this._z&&(this.z=r),this},t.prototype.isNonUniformWithinEpsilon=function(t){var e=Math.abs(this._x),r=Math.abs(this._y);if(!n.WithinEpsilon(e,r,t))return!0;var a=Math.abs(this._z);return!n.WithinEpsilon(e,a,t)||!n.WithinEpsilon(r,a,t)},Object.defineProperty(t.prototype,"isNonUniform",{get:function(){var t=Math.abs(this._x);return t!==Math.abs(this._y)||t!==Math.abs(this._z)},enumerable:!1,configurable:!0}),t.prototype.floor=function(){return new t(Math.floor(this._x),Math.floor(this._y),Math.floor(this._z))},t.prototype.fract=function(){return new t(this._x-Math.floor(this._x),this._y-Math.floor(this._y),this._z-Math.floor(this._z))},t.prototype.length=function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z)},t.prototype.lengthSquared=function(){return this._x*this._x+this._y*this._y+this._z*this._z},t.prototype.normalize=function(){return this.normalizeFromLength(this.length())},t.prototype.reorderInPlace=function(t){var e=this;return"xyz"===(t=t.toLowerCase())||(l.Vector3[0].copyFrom(this),["x","y","z"].forEach((function(r,n){e[r]=l.Vector3[0][t[n]]}))),this},t.prototype.rotateByQuaternionToRef=function(e,r){return e.toRotationMatrix(l.Matrix[0]),t.TransformCoordinatesToRef(this,l.Matrix[0],r),r},t.prototype.rotateByQuaternionAroundPointToRef=function(t,e,r){return this.subtractToRef(e,l.Vector3[0]),l.Vector3[0].rotateByQuaternionToRef(t,l.Vector3[0]),e.addToRef(l.Vector3[0],r),r},t.prototype.cross=function(e){return t.Cross(this,e)},t.prototype.normalizeFromLength=function(t){return 0===t||1===t?this:this.scaleInPlace(1/t)},t.prototype.normalizeToNew=function(){var e=new t(0,0,0);return this.normalizeToRef(e),e},t.prototype.normalizeToRef=function(t){var e=this.length();return 0===e||1===e?t.copyFromFloats(this._x,this._y,this._z):this.scaleToRef(1/e,t)},t.prototype.clone=function(){return new t(this._x,this._y,this._z)},t.prototype.copyFrom=function(t){return this.copyFromFloats(t._x,t._y,t._z)},t.prototype.copyFromFloats=function(t,e,r){return this.x=t,this.y=e,this.z=r,this},t.prototype.set=function(t,e,r){return this.copyFromFloats(t,e,r)},t.prototype.setAll=function(t){return this.x=this.y=this.z=t,this},t.GetClipFactor=function(e,r,n,a){var o=t.Dot(e,n)-a;return o/(o-(t.Dot(r,n)-a))},t.GetAngleBetweenVectors=function(e,r,n){var a=e.normalizeToRef(l.Vector3[1]),o=r.normalizeToRef(l.Vector3[2]),i=t.Dot(a,o),u=l.Vector3[3];return t.CrossToRef(a,o,u),t.Dot(u,n)>0?Math.acos(i):-Math.acos(i)},t.FromArray=function(e,r){return void 0===r&&(r=0),new t(e[r],e[r+1],e[r+2])},t.FromFloatArray=function(e,r){return t.FromArray(e,r)},t.FromArrayToRef=function(t,e,r){r.x=t[e],r.y=t[e+1],r.z=t[e+2]},t.FromFloatArrayToRef=function(e,r,n){return t.FromArrayToRef(e,r,n)},t.FromFloatsToRef=function(t,e,r,n){n.copyFromFloats(t,e,r)},t.Zero=function(){return new t(0,0,0)},t.One=function(){return new t(1,1,1)},t.Up=function(){return new t(0,1,0)},Object.defineProperty(t,"UpReadOnly",{get:function(){return t._UpReadOnly},enumerable:!1,configurable:!0}),Object.defineProperty(t,"ZeroReadOnly",{get:function(){return t._ZeroReadOnly},enumerable:!1,configurable:!0}),t.Down=function(){return new t(0,-1,0)},t.Forward=function(e){return void 0===e&&(e=!1),new t(0,0,e?-1:1)},t.Backward=function(e){return void 0===e&&(e=!1),new t(0,0,e?1:-1)},t.Right=function(){return new t(1,0,0)},t.Left=function(){return new t(-1,0,0)},t.TransformCoordinates=function(e,r){var n=t.Zero();return t.TransformCoordinatesToRef(e,r,n),n},t.TransformCoordinatesToRef=function(e,r,n){t.TransformCoordinatesFromFloatsToRef(e._x,e._y,e._z,r,n)},t.TransformCoordinatesFromFloatsToRef=function(t,e,r,n,a){var o=n.m,i=t*o[0]+e*o[4]+r*o[8]+o[12],u=t*o[1]+e*o[5]+r*o[9]+o[13],v=t*o[2]+e*o[6]+r*o[10]+o[14],s=1/(t*o[3]+e*o[7]+r*o[11]+o[15]);a.x=i*s,a.y=u*s,a.z=v*s},t.TransformNormal=function(e,r){var n=t.Zero();return t.TransformNormalToRef(e,r,n),n},t.TransformNormalToRef=function(t,e,r){this.TransformNormalFromFloatsToRef(t._x,t._y,t._z,e,r)},t.TransformNormalFromFloatsToRef=function(t,e,r,n,a){var o=n.m;a.x=t*o[0]+e*o[4]+r*o[8],a.y=t*o[1]+e*o[5]+r*o[9],a.z=t*o[2]+e*o[6]+r*o[10]},t.CatmullRom=function(e,r,n,a,o){var i=o*o,u=o*i;return new t(.5*(2*r._x+(-e._x+n._x)*o+(2*e._x-5*r._x+4*n._x-a._x)*i+(-e._x+3*r._x-3*n._x+a._x)*u),.5*(2*r._y+(-e._y+n._y)*o+(2*e._y-5*r._y+4*n._y-a._y)*i+(-e._y+3*r._y-3*n._y+a._y)*u),.5*(2*r._z+(-e._z+n._z)*o+(2*e._z-5*r._z+4*n._z-a._z)*i+(-e._z+3*r._z-3*n._z+a._z)*u))},t.Clamp=function(e,r,n){var a=new t;return t.ClampToRef(e,r,n,a),a},t.ClampToRef=function(t,e,r,n){var a=t._x;a=(a=a>r._x?r._x:a)<e._x?e._x:a;var o=t._y;o=(o=o>r._y?r._y:o)<e._y?e._y:o;var i=t._z;i=(i=i>r._z?r._z:i)<e._z?e._z:i,n.copyFromFloats(a,o,i)},t.CheckExtends=function(t,e,r){e.minimizeInPlace(t),r.maximizeInPlace(t)},t.Hermite=function(e,r,n,a,o){var i=o*o,u=o*i,v=2*u-3*i+1,s=-2*u+3*i,c=u-2*i+o,P=u-i;return new t(e._x*v+n._x*s+r._x*c+a._x*P,e._y*v+n._y*s+r._y*c+a._y*P,e._z*v+n._z*s+r._z*c+a._z*P)},t.Lerp=function(e,r,n){var a=new t(0,0,0);return t.LerpToRef(e,r,n,a),a},t.LerpToRef=function(t,e,r,n){n.x=t._x+(e._x-t._x)*r,n.y=t._y+(e._y-t._y)*r,n.z=t._z+(e._z-t._z)*r},t.Dot=function(t,e){return t._x*e._x+t._y*e._y+t._z*e._z},t.Cross=function(e,r){var n=t.Zero();return t.CrossToRef(e,r,n),n},t.CrossToRef=function(t,e,r){var n=t._y*e._z-t._z*e._y,a=t._z*e._x-t._x*e._z,o=t._x*e._y-t._y*e._x;r.copyFromFloats(n,a,o)},t.Normalize=function(e){var r=t.Zero();return t.NormalizeToRef(e,r),r},t.NormalizeToRef=function(t,e){t.normalizeToRef(e)},t.Project=function(e,r,n,a){var o=new t;return t.ProjectToRef(e,r,n,a,o),o},t.ProjectToRef=function(e,r,n,a,o){var i=a.width,u=a.height,v=a.x,s=a.y,c=l.Matrix[1];P.FromValuesToRef(i/2,0,0,0,0,-u/2,0,0,0,0,.5,0,v+i/2,u/2+s,.5,1,c);var f=l.Matrix[0];return r.multiplyToRef(n,f),f.multiplyToRef(c,f),t.TransformCoordinatesToRef(e,f,o),o},t._UnprojectFromInvertedMatrixToRef=function(e,r,a){t.TransformCoordinatesToRef(e,r,a);var o=r.m,i=e._x*o[3]+e._y*o[7]+e._z*o[11]+o[15];n.WithinEpsilon(i,1)&&a.scaleInPlace(1/i)},t.UnprojectFromTransform=function(e,r,n,a,o){var i=l.Matrix[0];a.multiplyToRef(o,i),i.invert(),e.x=e._x/r*2-1,e.y=-(e._y/n*2-1);var u=new t;return t._UnprojectFromInvertedMatrixToRef(e,i,u),u},t.Unproject=function(e,r,n,a,o,i){var u=t.Zero();return t.UnprojectToRef(e,r,n,a,o,i,u),u},t.UnprojectToRef=function(e,r,n,a,o,i,u){t.UnprojectFloatsToRef(e._x,e._y,e._z,r,n,a,o,i,u)},t.UnprojectFloatsToRef=function(e,r,n,a,o,i,u,v,s){var c=l.Matrix[0];i.multiplyToRef(u,c),c.multiplyToRef(v,c),c.invert();var P=l.Vector3[0];P.x=e/a*2-1,P.y=-(r/o*2-1),P.z=2*n-1,t._UnprojectFromInvertedMatrixToRef(P,c,s)},t.Minimize=function(t,e){var r=t.clone();return r.minimizeInPlace(e),r},t.Maximize=function(t,e){var r=t.clone();return r.maximizeInPlace(e),r},t.Distance=function(e,r){return Math.sqrt(t.DistanceSquared(e,r))},t.DistanceSquared=function(t,e){var r=t._x-e._x,n=t._y-e._y,a=t._z-e._z;return r*r+n*n+a*a},t.Center=function(t,e){var r=t.add(e);return r.scaleInPlace(.5),r},t.RotationFromAxis=function(e,r,n){var a=t.Zero();return t.RotationFromAxisToRef(e,r,n,a),a},t.RotationFromAxisToRef=function(t,e,r,n){var a=l.Quaternion[0];c.RotationQuaternionFromAxisToRef(t,e,r,a),a.toEulerAnglesToRef(n)},t._UpReadOnly=t.Up(),t._ZeroReadOnly=t.Zero(),t}(),s=function(){function t(t,e,r,n){this.x=t,this.y=e,this.z=r,this.w=n}return t.prototype.toString=function(){return"{X: "+this.x+" Y:"+this.y+" Z:"+this.z+" W:"+this.w+"}"},t.prototype.getClassName=function(){return"Vector4"},t.prototype.getHashCode=function(){var t=0|this.x;return 397*(t=397*(t=397*t^(0|this.y))^(0|this.z))^(0|this.w)},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,this},t.prototype.fromArray=function(e,r){return void 0===r&&(r=0),t.FromArrayToRef(e,r,this),this},t.prototype.addInPlace=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)},t.prototype.addToRef=function(t,e){return e.x=this.x+t.x,e.y=this.y+t.y,e.z=this.z+t.z,e.w=this.w+t.w,this},t.prototype.subtractInPlace=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w)},t.prototype.subtractToRef=function(t,e){return e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z,e.w=this.w-t.w,this},t.prototype.subtractFromFloats=function(e,r,n,a){return new t(this.x-e,this.y-r,this.z-n,this.w-a)},t.prototype.subtractFromFloatsToRef=function(t,e,r,n,a){return a.x=this.x-t,a.y=this.y-e,a.z=this.z-r,a.w=this.w-n,this},t.prototype.negate=function(){return new t(-this.x,-this.y,-this.z,-this.w)},t.prototype.negateInPlace=function(){return this.x*=-1,this.y*=-1,this.z*=-1,this.w*=-1,this},t.prototype.negateToRef=function(t){return t.copyFromFloats(-1*this.x,-1*this.y,-1*this.z,-1*this.w)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},t.prototype.scale=function(e){return new t(this.x*e,this.y*e,this.z*e,this.w*e)},t.prototype.scaleToRef=function(t,e){return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e.w=this.w*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this.x*t,e.y+=this.y*t,e.z+=this.z*t,e.w+=this.w*t,this},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=.001),t&&n.WithinEpsilon(this.x,t.x,e)&&n.WithinEpsilon(this.y,t.y,e)&&n.WithinEpsilon(this.z,t.z,e)&&n.WithinEpsilon(this.w,t.w,e)},t.prototype.equalsToFloats=function(t,e,r,n){return this.x===t&&this.y===e&&this.z===r&&this.w===n},t.prototype.multiplyInPlace=function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this},t.prototype.multiply=function(e){return new t(this.x*e.x,this.y*e.y,this.z*e.z,this.w*e.w)},t.prototype.multiplyToRef=function(t,e){return e.x=this.x*t.x,e.y=this.y*t.y,e.z=this.z*t.z,e.w=this.w*t.w,this},t.prototype.multiplyByFloats=function(e,r,n,a){return new t(this.x*e,this.y*r,this.z*n,this.w*a)},t.prototype.divide=function(e){return new t(this.x/e.x,this.y/e.y,this.z/e.z,this.w/e.w)},t.prototype.divideToRef=function(t,e){return e.x=this.x/t.x,e.y=this.y/t.y,e.z=this.z/t.z,e.w=this.w/t.w,this},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.minimizeInPlace=function(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),t.w<this.w&&(this.w=t.w),this},t.prototype.maximizeInPlace=function(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),t.w>this.w&&(this.w=t.w),this},t.prototype.floor=function(){return new t(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z),Math.floor(this.w))},t.prototype.fract=function(){return new t(this.x-Math.floor(this.x),this.y-Math.floor(this.y),this.z-Math.floor(this.z),this.w-Math.floor(this.w))},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},t.prototype.lengthSquared=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t.prototype.normalize=function(){var t=this.length();return 0===t?this:this.scaleInPlace(1/t)},t.prototype.toVector3=function(){return new v(this.x,this.y,this.z)},t.prototype.clone=function(){return new t(this.x,this.y,this.z,this.w)},t.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},t.prototype.copyFromFloats=function(t,e,r,n){return this.x=t,this.y=e,this.z=r,this.w=n,this},t.prototype.set=function(t,e,r,n){return this.copyFromFloats(t,e,r,n)},t.prototype.setAll=function(t){return this.x=this.y=this.z=this.w=t,this},t.FromArray=function(e,r){return r||(r=0),new t(e[r],e[r+1],e[r+2],e[r+3])},t.FromArrayToRef=function(t,e,r){r.x=t[e],r.y=t[e+1],r.z=t[e+2],r.w=t[e+3]},t.FromFloatArrayToRef=function(e,r,n){t.FromArrayToRef(e,r,n)},t.FromFloatsToRef=function(t,e,r,n,a){a.x=t,a.y=e,a.z=r,a.w=n},t.Zero=function(){return new t(0,0,0,0)},t.One=function(){return new t(1,1,1,1)},t.Normalize=function(e){var r=t.Zero();return t.NormalizeToRef(e,r),r},t.NormalizeToRef=function(t,e){e.copyFrom(t),e.normalize()},t.Minimize=function(t,e){var r=t.clone();return r.minimizeInPlace(e),r},t.Maximize=function(t,e){var r=t.clone();return r.maximizeInPlace(e),r},t.Distance=function(e,r){return Math.sqrt(t.DistanceSquared(e,r))},t.DistanceSquared=function(t,e){var r=t.x-e.x,n=t.y-e.y,a=t.z-e.z,o=t.w-e.w;return r*r+n*n+a*a+o*o},t.Center=function(t,e){var r=t.add(e);return r.scaleInPlace(.5),r},t.TransformNormal=function(e,r){var n=t.Zero();return t.TransformNormalToRef(e,r,n),n},t.TransformNormalToRef=function(t,e,r){var n=e.m,a=t.x*n[0]+t.y*n[4]+t.z*n[8],o=t.x*n[1]+t.y*n[5]+t.z*n[9],i=t.x*n[2]+t.y*n[6]+t.z*n[10];r.x=a,r.y=o,r.z=i,r.w=t.w},t.TransformNormalFromFloatsToRef=function(t,e,r,n,a,o){var i=a.m;o.x=t*i[0]+e*i[4]+r*i[8],o.y=t*i[1]+e*i[5]+r*i[9],o.z=t*i[2]+e*i[6]+r*i[10],o.w=n},t.FromVector3=function(e,r){return void 0===r&&(r=0),new t(e._x,e._y,e._z,r)},t}(),c=function(){function t(t,e,r,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===r&&(r=0),void 0===n&&(n=1),this._isDirty=!0,this._x=t,this._y=e,this._z=r,this._w=n}return Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(t){this._x=t,this._isDirty=!0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(t){this._y=t,this._isDirty=!0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this._z},set:function(t){this._z=t,this._isDirty=!0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"w",{get:function(){return this._w},set:function(t){this._w=t,this._isDirty=!0},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"{X: "+this._x+" Y:"+this._y+" Z:"+this._z+" W:"+this._w+"}"},t.prototype.getClassName=function(){return"Quaternion"},t.prototype.getHashCode=function(){var t=0|this._x;return 397*(t=397*(t=397*t^(0|this._y))^(0|this._z))^(0|this._w)},t.prototype.asArray=function(){return[this._x,this._y,this._z,this._w]},t.prototype.equals=function(t){return t&&this._x===t._x&&this._y===t._y&&this._z===t._z&&this._w===t._w},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=.001),t&&n.WithinEpsilon(this._x,t._x,e)&&n.WithinEpsilon(this._y,t._y,e)&&n.WithinEpsilon(this._z,t._z,e)&&n.WithinEpsilon(this._w,t._w,e)},t.prototype.clone=function(){return new t(this._x,this._y,this._z,this._w)},t.prototype.copyFrom=function(t){return this.x=t._x,this.y=t._y,this.z=t._z,this.w=t._w,this},t.prototype.copyFromFloats=function(t,e,r,n){return this.x=t,this.y=e,this.z=r,this.w=n,this},t.prototype.set=function(t,e,r,n){return this.copyFromFloats(t,e,r,n)},t.prototype.add=function(e){return new t(this._x+e._x,this._y+e._y,this._z+e._z,this._w+e._w)},t.prototype.addInPlace=function(t){return this._x+=t._x,this._y+=t._y,this._z+=t._z,this._w+=t._w,this},t.prototype.subtract=function(e){return new t(this._x-e._x,this._y-e._y,this._z-e._z,this._w-e._w)},t.prototype.scale=function(e){return new t(this._x*e,this._y*e,this._z*e,this._w*e)},t.prototype.scaleToRef=function(t,e){return e.x=this._x*t,e.y=this._y*t,e.z=this._z*t,e.w=this._w*t,this},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this._x*t,e.y+=this._y*t,e.z+=this._z*t,e.w+=this._w*t,this},t.prototype.multiply=function(e){var r=new t(0,0,0,1);return this.multiplyToRef(e,r),r},t.prototype.multiplyToRef=function(t,e){var r=this._x*t._w+this._y*t._z-this._z*t._y+this._w*t._x,n=-this._x*t._z+this._y*t._w+this._z*t._x+this._w*t._y,a=this._x*t._y-this._y*t._x+this._z*t._w+this._w*t._z,o=-this._x*t._x-this._y*t._y-this._z*t._z+this._w*t._w;return e.copyFromFloats(r,n,a,o),this},t.prototype.multiplyInPlace=function(t){return this.multiplyToRef(t,this),this},t.prototype.conjugateToRef=function(t){return t.copyFromFloats(-this._x,-this._y,-this._z,this._w),this},t.prototype.conjugateInPlace=function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},t.prototype.conjugate=function(){return new t(-this._x,-this._y,-this._z,this._w)},t.prototype.length=function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},t.prototype.normalize=function(){var t=this.length();if(0===t)return this;var e=1/t;return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},t.prototype.toEulerAngles=function(t){void 0===t&&(t="YZX");var e=v.Zero();return this.toEulerAnglesToRef(e),e},t.prototype.toEulerAnglesToRef=function(t){var e=this._z,r=this._x,n=this._y,a=this._w,o=a*a,i=e*e,u=r*r,v=n*n,s=n*e-r*a;return s<-.4999999?(t.y=2*Math.atan2(n,a),t.x=Math.PI/2,t.z=0):s>.4999999?(t.y=2*Math.atan2(n,a),t.x=-Math.PI/2,t.z=0):(t.z=Math.atan2(2*(r*n+e*a),-i-u+v+o),t.x=Math.asin(-2*(e*n-r*a)),t.y=Math.atan2(2*(e*r+n*a),i-u-v+o)),this},t.prototype.toRotationMatrix=function(t){return P.FromQuaternionToRef(this,t),this},t.prototype.fromRotationMatrix=function(e){return t.FromRotationMatrixToRef(e,this),this},t.FromRotationMatrix=function(e){var r=new t;return t.FromRotationMatrixToRef(e,r),r},t.FromRotationMatrixToRef=function(t,e){var r,n=t.m,a=n[0],o=n[4],i=n[8],u=n[1],v=n[5],s=n[9],c=n[2],P=n[6],l=n[10],f=a+v+l;f>0?(r=.5/Math.sqrt(f+1),e.w=.25/r,e.x=(P-s)*r,e.y=(i-c)*r,e.z=(u-o)*r):a>v&&a>l?(r=2*Math.sqrt(1+a-v-l),e.w=(P-s)/r,e.x=.25*r,e.y=(o+u)/r,e.z=(i+c)/r):v>l?(r=2*Math.sqrt(1+v-a-l),e.w=(i-c)/r,e.x=(o+u)/r,e.y=.25*r,e.z=(s+P)/r):(r=2*Math.sqrt(1+l-a-v),e.w=(u-o)/r,e.x=(i+c)/r,e.y=(s+P)/r,e.z=.25*r)},t.Dot=function(t,e){return t._x*e._x+t._y*e._y+t._z*e._z+t._w*e._w},t.AreClose=function(e,r){return t.Dot(e,r)>=0},t.Zero=function(){return new t(0,0,0,0)},t.Inverse=function(e){return new t(-e._x,-e._y,-e._z,e._w)},t.InverseToRef=function(t,e){return e.set(-t._x,-t._y,-t._z,t._w),e},t.Identity=function(){return new t(0,0,0,1)},t.IsIdentity=function(t){return t&&0===t._x&&0===t._y&&0===t._z&&1===t._w},t.RotationAxis=function(e,r){return t.RotationAxisToRef(e,r,new t)},t.RotationAxisToRef=function(t,e,r){var n=Math.sin(e/2);return t.normalize(),r.w=Math.cos(e/2),r.x=t._x*n,r.y=t._y*n,r.z=t._z*n,r},t.FromArray=function(e,r){return r||(r=0),new t(e[r],e[r+1],e[r+2],e[r+3])},t.FromArrayToRef=function(t,e,r){r.x=t[e],r.y=t[e+1],r.z=t[e+2],r.w=t[e+3]},t.FromEulerAngles=function(e,r,n){var a=new t;return t.RotationYawPitchRollToRef(r,e,n,a),a},t.FromEulerAnglesToRef=function(e,r,n,a){return t.RotationYawPitchRollToRef(r,e,n,a),a},t.FromEulerVector=function(e){var r=new t;return t.RotationYawPitchRollToRef(e._y,e._x,e._z,r),r},t.FromEulerVectorToRef=function(e,r){return t.RotationYawPitchRollToRef(e._y,e._x,e._z,r),r},t.RotationYawPitchRoll=function(e,r,n){var a=new t;return t.RotationYawPitchRollToRef(e,r,n,a),a},t.RotationYawPitchRollToRef=function(t,e,r,n){var a=.5*r,o=.5*e,i=.5*t,u=Math.sin(a),v=Math.cos(a),s=Math.sin(o),c=Math.cos(o),P=Math.sin(i),l=Math.cos(i);n.x=l*s*v+P*c*u,n.y=P*c*v-l*s*u,n.z=l*c*u-P*s*v,n.w=l*c*v+P*s*u},t.RotationAlphaBetaGamma=function(e,r,n){var a=new t;return t.RotationAlphaBetaGammaToRef(e,r,n,a),a},t.RotationAlphaBetaGammaToRef=function(t,e,r,n){var a=.5*(r+t),o=.5*(r-t),i=.5*e;n.x=Math.cos(o)*Math.sin(i),n.y=Math.sin(o)*Math.sin(i),n.z=Math.sin(a)*Math.cos(i),n.w=Math.cos(a)*Math.cos(i)},t.RotationQuaternionFromAxis=function(e,r,n){var a=new t(0,0,0,0);return t.RotationQuaternionFromAxisToRef(e,r,n,a),a},t.RotationQuaternionFromAxisToRef=function(e,r,n,a){var o=l.Matrix[0];P.FromXYZAxesToRef(e.normalize(),r.normalize(),n.normalize(),o),t.FromRotationMatrixToRef(o,a)},t.Slerp=function(e,r,n){var a=t.Identity();return t.SlerpToRef(e,r,n,a),a},t.SlerpToRef=function(t,e,r,n){var a,o,i=t._x*e._x+t._y*e._y+t._z*e._z+t._w*e._w,u=!1;if(i<0&&(u=!0,i=-i),i>.999999)o=1-r,a=u?-r:r;else{var v=Math.acos(i),s=1/Math.sin(v);o=Math.sin((1-r)*v)*s,a=u?-Math.sin(r*v)*s:Math.sin(r*v)*s}n.x=o*t._x+a*e._x,n.y=o*t._y+a*e._y,n.z=o*t._z+a*e._z,n.w=o*t._w+a*e._w},t.Hermite=function(e,r,n,a,o){var i=o*o,u=o*i,v=2*u-3*i+1,s=-2*u+3*i,c=u-2*i+o,P=u-i;return new t(e._x*v+n._x*s+r._x*c+a._x*P,e._y*v+n._y*s+r._y*c+a._y*P,e._z*v+n._z*s+r._z*c+a._z*P,e._w*v+n._w*s+r._w*c+a._w*P)},t}(),P=function(){function t(){this._isIdentity=!1,this._isIdentityDirty=!0,this._isIdentity3x2=!0,this._isIdentity3x2Dirty=!0,this.updateFlag=-1,i.a.MatrixTrackPrecisionChange&&i.a.MatrixTrackedMatrices.push(this),this._m=new i.a.MatrixCurrentType(16),this._updateIdentityStatus(!1)}return Object.defineProperty(t,"Use64Bits",{get:function(){return i.a.MatrixUse64Bits},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"m",{get:function(){return this._m},enumerable:!1,configurable:!0}),t.prototype._markAsUpdated=function(){this.updateFlag=t._updateFlagSeed++,this._isIdentity=!1,this._isIdentity3x2=!1,this._isIdentityDirty=!0,this._isIdentity3x2Dirty=!0},t.prototype._updateIdentityStatus=function(e,r,n,a){void 0===r&&(r=!1),void 0===n&&(n=!1),void 0===a&&(a=!0),this.updateFlag=t._updateFlagSeed++,this._isIdentity=e,this._isIdentity3x2=e||n,this._isIdentityDirty=!this._isIdentity&&r,this._isIdentity3x2Dirty=!this._isIdentity3x2&&a},t.prototype.isIdentity=function(){if(this._isIdentityDirty){this._isIdentityDirty=!1;var t=this._m;this._isIdentity=1===t[0]&&0===t[1]&&0===t[2]&&0===t[3]&&0===t[4]&&1===t[5]&&0===t[6]&&0===t[7]&&0===t[8]&&0===t[9]&&1===t[10]&&0===t[11]&&0===t[12]&&0===t[13]&&0===t[14]&&1===t[15]}return this._isIdentity},t.prototype.isIdentityAs3x2=function(){return this._isIdentity3x2Dirty&&(this._isIdentity3x2Dirty=!1,1!==this._m[0]||1!==this._m[5]||1!==this._m[15]||0!==this._m[1]||0!==this._m[2]||0!==this._m[3]||0!==this._m[4]||0!==this._m[6]||0!==this._m[7]||0!==this._m[8]||0!==this._m[9]||0!==this._m[10]||0!==this._m[11]||0!==this._m[12]||0!==this._m[13]||0!==this._m[14]?this._isIdentity3x2=!1:this._isIdentity3x2=!0),this._isIdentity3x2},t.prototype.determinant=function(){if(!0===this._isIdentity)return 1;var t=this._m,e=t[0],r=t[1],n=t[2],a=t[3],o=t[4],i=t[5],u=t[6],v=t[7],s=t[8],c=t[9],P=t[10],l=t[11],f=t[12],d=t[13],p=t[14],b=t[15],h=P*b-p*l,y=c*b-d*l,m=c*p-d*P,g=s*b-f*l,T=s*p-P*f,j=s*d-f*c;return e*+(i*h-u*y+v*m)+r*-(o*h-u*g+v*T)+n*+(o*y-i*g+v*j)+a*-(o*m-i*T+u*j)},t.prototype.toArray=function(){return this._m},t.prototype.asArray=function(){return this._m},t.prototype.invert=function(){return this.invertToRef(this),this},t.prototype.reset=function(){return t.FromValuesToRef(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,this),this._updateIdentityStatus(!1),this},t.prototype.add=function(e){var r=new t;return this.addToRef(e,r),r},t.prototype.addToRef=function(t,e){for(var r=this._m,n=e._m,a=t.m,o=0;o<16;o++)n[o]=r[o]+a[o];return e._markAsUpdated(),this},t.prototype.addToSelf=function(t){for(var e=this._m,r=t.m,n=0;n<16;n++)e[n]+=r[n];return this._markAsUpdated(),this},t.prototype.invertToRef=function(e){if(!0===this._isIdentity)return t.IdentityToRef(e),this;var r=this._m,n=r[0],a=r[1],o=r[2],i=r[3],u=r[4],v=r[5],s=r[6],c=r[7],P=r[8],l=r[9],f=r[10],d=r[11],p=r[12],b=r[13],h=r[14],y=r[15],m=f*y-h*d,g=l*y-b*d,T=l*h-b*f,j=P*y-p*d,z=P*h-f*p,w=P*b-p*l,D=+(v*m-s*g+c*T),x=-(u*m-s*j+c*z),O=+(u*g-v*j+c*w),L=-(u*T-v*z+s*w),S=n*D+a*x+o*O+i*L;if(0===S)return e.copyFrom(this),this;var A=1/S,k=s*y-h*c,C=v*y-b*c,I=v*h-b*s,E=u*y-p*c,M=u*h-p*s,U=u*b-p*v,R=s*d-f*c,W=v*d-l*c,Q=v*f-l*s,Y=u*d-P*c,G=u*f-P*s,F=u*l-P*v,N=-(a*m-o*g+i*T),q=+(n*m-o*j+i*z),K=-(n*g-a*j+i*w),B=+(n*T-a*z+o*w),V=+(a*k-o*C+i*I),X=-(n*k-o*E+i*M),Z=+(n*C-a*E+i*U),H=-(n*I-a*M+o*U),J=-(a*R-o*W+i*Q),_=+(n*R-o*Y+i*G),$=-(n*W-a*Y+i*F),tt=+(n*Q-a*G+o*F);return t.FromValuesToRef(D*A,N*A,V*A,J*A,x*A,q*A,X*A,_*A,O*A,K*A,Z*A,$*A,L*A,B*A,H*A,tt*A,e),this},t.prototype.addAtIndex=function(t,e){return this._m[t]+=e,this._markAsUpdated(),this},t.prototype.multiplyAtIndex=function(t,e){return this._m[t]*=e,this._markAsUpdated(),this},t.prototype.setTranslationFromFloats=function(t,e,r){return this._m[12]=t,this._m[13]=e,this._m[14]=r,this._markAsUpdated(),this},t.prototype.addTranslationFromFloats=function(t,e,r){return this._m[12]+=t,this._m[13]+=e,this._m[14]+=r,this._markAsUpdated(),this},t.prototype.setTranslation=function(t){return this.setTranslationFromFloats(t._x,t._y,t._z)},t.prototype.getTranslation=function(){return new v(this._m[12],this._m[13],this._m[14])},t.prototype.getTranslationToRef=function(t){return t.x=this._m[12],t.y=this._m[13],t.z=this._m[14],this},t.prototype.removeRotationAndScaling=function(){var e=this.m;return t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e[12],e[13],e[14],e[15],this),this._updateIdentityStatus(0===e[12]&&0===e[13]&&0===e[14]&&1===e[15]),this},t.prototype.multiply=function(e){var r=new t;return this.multiplyToRef(e,r),r},t.prototype.copyFrom=function(t){t.copyToArray(this._m);var e=t;return this._updateIdentityStatus(e._isIdentity,e._isIdentityDirty,e._isIdentity3x2,e._isIdentity3x2Dirty),this},t.prototype.copyToArray=function(t,e){void 0===e&&(e=0);var r=this._m;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],this},t.prototype.multiplyToRef=function(t,e){return this._isIdentity?(e.copyFrom(t),this):t._isIdentity?(e.copyFrom(this),this):(this.multiplyToArray(t,e._m,0),e._markAsUpdated(),this)},t.prototype.multiplyToArray=function(t,e,r){var n=this._m,a=t.m,o=n[0],i=n[1],u=n[2],v=n[3],s=n[4],c=n[5],P=n[6],l=n[7],f=n[8],d=n[9],p=n[10],b=n[11],h=n[12],y=n[13],m=n[14],g=n[15],T=a[0],j=a[1],z=a[2],w=a[3],D=a[4],x=a[5],O=a[6],L=a[7],S=a[8],A=a[9],k=a[10],C=a[11],I=a[12],E=a[13],M=a[14],U=a[15];return e[r]=o*T+i*D+u*S+v*I,e[r+1]=o*j+i*x+u*A+v*E,e[r+2]=o*z+i*O+u*k+v*M,e[r+3]=o*w+i*L+u*C+v*U,e[r+4]=s*T+c*D+P*S+l*I,e[r+5]=s*j+c*x+P*A+l*E,e[r+6]=s*z+c*O+P*k+l*M,e[r+7]=s*w+c*L+P*C+l*U,e[r+8]=f*T+d*D+p*S+b*I,e[r+9]=f*j+d*x+p*A+b*E,e[r+10]=f*z+d*O+p*k+b*M,e[r+11]=f*w+d*L+p*C+b*U,e[r+12]=h*T+y*D+m*S+g*I,e[r+13]=h*j+y*x+m*A+g*E,e[r+14]=h*z+y*O+m*k+g*M,e[r+15]=h*w+y*L+m*C+g*U,this},t.prototype.equals=function(t){var e=t;if(!e)return!1;if((this._isIdentity||e._isIdentity)&&!this._isIdentityDirty&&!e._isIdentityDirty)return this._isIdentity&&e._isIdentity;var r=this.m,n=e.m;return r[0]===n[0]&&r[1]===n[1]&&r[2]===n[2]&&r[3]===n[3]&&r[4]===n[4]&&r[5]===n[5]&&r[6]===n[6]&&r[7]===n[7]&&r[8]===n[8]&&r[9]===n[9]&&r[10]===n[10]&&r[11]===n[11]&&r[12]===n[12]&&r[13]===n[13]&&r[14]===n[14]&&r[15]===n[15]},t.prototype.clone=function(){var e=new t;return e.copyFrom(this),e},t.prototype.getClassName=function(){return"Matrix"},t.prototype.getHashCode=function(){for(var t=0|this._m[0],e=1;e<16;e++)t=397*t^(0|this._m[e]);return t},t.prototype.decompose=function(e,r,n){if(this._isIdentity)return n&&n.setAll(0),e&&e.setAll(1),r&&r.copyFromFloats(0,0,0,1),!0;var a=this._m;if(n&&n.copyFromFloats(a[12],a[13],a[14]),(e=e||l.Vector3[0]).x=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]),e.y=Math.sqrt(a[4]*a[4]+a[5]*a[5]+a[6]*a[6]),e.z=Math.sqrt(a[8]*a[8]+a[9]*a[9]+a[10]*a[10]),this.determinant()<=0&&(e.y*=-1),0===e._x||0===e._y||0===e._z)return r&&r.copyFromFloats(0,0,0,1),!1;if(r){var o=1/e._x,i=1/e._y,u=1/e._z;t.FromValuesToRef(a[0]*o,a[1]*o,a[2]*o,0,a[4]*i,a[5]*i,a[6]*i,0,a[8]*u,a[9]*u,a[10]*u,0,0,0,0,1,l.Matrix[0]),c.FromRotationMatrixToRef(l.Matrix[0],r)}return!0},t.prototype.getRow=function(t){if(t<0||t>3)return null;var e=4*t;return new s(this._m[e+0],this._m[e+1],this._m[e+2],this._m[e+3])},t.prototype.setRow=function(t,e){return this.setRowFromFloats(t,e.x,e.y,e.z,e.w)},t.prototype.transpose=function(){return t.Transpose(this)},t.prototype.transposeToRef=function(e){return t.TransposeToRef(this,e),this},t.prototype.setRowFromFloats=function(t,e,r,n,a){if(t<0||t>3)return this;var o=4*t;return this._m[o+0]=e,this._m[o+1]=r,this._m[o+2]=n,this._m[o+3]=a,this._markAsUpdated(),this},t.prototype.scale=function(e){var r=new t;return this.scaleToRef(e,r),r},t.prototype.scaleToRef=function(t,e){for(var r=0;r<16;r++)e._m[r]=this._m[r]*t;return e._markAsUpdated(),this},t.prototype.scaleAndAddToRef=function(t,e){for(var r=0;r<16;r++)e._m[r]+=this._m[r]*t;return e._markAsUpdated(),this},t.prototype.toNormalMatrix=function(e){var r=l.Matrix[0];this.invertToRef(r),r.transposeToRef(e);var n=e._m;t.FromValuesToRef(n[0],n[1],n[2],0,n[4],n[5],n[6],0,n[8],n[9],n[10],0,0,0,0,1,e)},t.prototype.getRotationMatrix=function(){var e=new t;return this.getRotationMatrixToRef(e),e},t.prototype.getRotationMatrixToRef=function(e){var r=l.Vector3[0];if(!this.decompose(r))return t.IdentityToRef(e),this;var n=this._m,a=1/r._x,o=1/r._y,i=1/r._z;return t.FromValuesToRef(n[0]*a,n[1]*a,n[2]*a,0,n[4]*o,n[5]*o,n[6]*o,0,n[8]*i,n[9]*i,n[10]*i,0,0,0,0,1,e),this},t.prototype.toggleModelMatrixHandInPlace=function(){var t=this._m;t[2]*=-1,t[6]*=-1,t[8]*=-1,t[9]*=-1,t[14]*=-1,this._markAsUpdated()},t.prototype.toggleProjectionMatrixHandInPlace=function(){var t=this._m;t[8]*=-1,t[9]*=-1,t[10]*=-1,t[11]*=-1,this._markAsUpdated()},t.FromArray=function(e,r){void 0===r&&(r=0);var n=new t;return t.FromArrayToRef(e,r,n),n},t.FromArrayToRef=function(t,e,r){for(var n=0;n<16;n++)r._m[n]=t[n+e];r._markAsUpdated()},t.FromFloat32ArrayToRefScaled=function(t,e,r,n){for(var a=0;a<16;a++)n._m[a]=t[a+e]*r;n._markAsUpdated()},Object.defineProperty(t,"IdentityReadOnly",{get:function(){return t._identityReadOnly},enumerable:!1,configurable:!0}),t.FromValuesToRef=function(t,e,r,n,a,o,i,u,v,s,c,P,l,f,d,p,b){var h=b._m;h[0]=t,h[1]=e,h[2]=r,h[3]=n,h[4]=a,h[5]=o,h[6]=i,h[7]=u,h[8]=v,h[9]=s,h[10]=c,h[11]=P,h[12]=l,h[13]=f,h[14]=d,h[15]=p,b._markAsUpdated()},t.FromValues=function(e,r,n,a,o,i,u,v,s,c,P,l,f,d,p,b){var h=new t,y=h._m;return y[0]=e,y[1]=r,y[2]=n,y[3]=a,y[4]=o,y[5]=i,y[6]=u,y[7]=v,y[8]=s,y[9]=c,y[10]=P,y[11]=l,y[12]=f,y[13]=d,y[14]=p,y[15]=b,h._markAsUpdated(),h},t.Compose=function(e,r,n){var a=new t;return t.ComposeToRef(e,r,n,a),a},t.ComposeToRef=function(t,e,r,n){var a=n._m,o=e._x,i=e._y,u=e._z,v=e._w,s=o+o,c=i+i,P=u+u,l=o*s,f=o*c,d=o*P,p=i*c,b=i*P,h=u*P,y=v*s,m=v*c,g=v*P,T=t._x,j=t._y,z=t._z;a[0]=(1-(p+h))*T,a[1]=(f+g)*T,a[2]=(d-m)*T,a[3]=0,a[4]=(f-g)*j,a[5]=(1-(l+h))*j,a[6]=(b+y)*j,a[7]=0,a[8]=(d+m)*z,a[9]=(b-y)*z,a[10]=(1-(l+p))*z,a[11]=0,a[12]=r._x,a[13]=r._y,a[14]=r._z,a[15]=1,n._markAsUpdated()},t.Identity=function(){var e=t.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return e._updateIdentityStatus(!0),e},t.IdentityToRef=function(e){t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,e),e._updateIdentityStatus(!0)},t.Zero=function(){var e=t.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return e._updateIdentityStatus(!1),e},t.RotationX=function(e){var r=new t;return t.RotationXToRef(e,r),r},t.Invert=function(e){var r=new t;return e.invertToRef(r),r},t.RotationXToRef=function(e,r){var n=Math.sin(e),a=Math.cos(e);t.FromValuesToRef(1,0,0,0,0,a,n,0,0,-n,a,0,0,0,0,1,r),r._updateIdentityStatus(1===a&&0===n)},t.RotationY=function(e){var r=new t;return t.RotationYToRef(e,r),r},t.RotationYToRef=function(e,r){var n=Math.sin(e),a=Math.cos(e);t.FromValuesToRef(a,0,-n,0,0,1,0,0,n,0,a,0,0,0,0,1,r),r._updateIdentityStatus(1===a&&0===n)},t.RotationZ=function(e){var r=new t;return t.RotationZToRef(e,r),r},t.RotationZToRef=function(e,r){var n=Math.sin(e),a=Math.cos(e);t.FromValuesToRef(a,n,0,0,-n,a,0,0,0,0,1,0,0,0,0,1,r),r._updateIdentityStatus(1===a&&0===n)},t.RotationAxis=function(e,r){var n=new t;return t.RotationAxisToRef(e,r,n),n},t.RotationAxisToRef=function(t,e,r){var n=Math.sin(-e),a=Math.cos(-e),o=1-a;t.normalize();var i=r._m;i[0]=t._x*t._x*o+a,i[1]=t._x*t._y*o-t._z*n,i[2]=t._x*t._z*o+t._y*n,i[3]=0,i[4]=t._y*t._x*o+t._z*n,i[5]=t._y*t._y*o+a,i[6]=t._y*t._z*o-t._x*n,i[7]=0,i[8]=t._z*t._x*o-t._y*n,i[9]=t._z*t._y*o+t._x*n,i[10]=t._z*t._z*o+a,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,r._markAsUpdated()},t.RotationAlignToRef=function(t,e,r){var n=v.Cross(e,t),a=v.Dot(e,t),o=1/(1+a),i=r._m;i[0]=n._x*n._x*o+a,i[1]=n._y*n._x*o-n._z,i[2]=n._z*n._x*o+n._y,i[3]=0,i[4]=n._x*n._y*o+n._z,i[5]=n._y*n._y*o+a,i[6]=n._z*n._y*o-n._x,i[7]=0,i[8]=n._x*n._z*o-n._y,i[9]=n._y*n._z*o+n._x,i[10]=n._z*n._z*o+a,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,r._markAsUpdated()},t.RotationYawPitchRoll=function(e,r,n){var a=new t;return t.RotationYawPitchRollToRef(e,r,n,a),a},t.RotationYawPitchRollToRef=function(t,e,r,n){c.RotationYawPitchRollToRef(t,e,r,l.Quaternion[0]),l.Quaternion[0].toRotationMatrix(n)},t.Scaling=function(e,r,n){var a=new t;return t.ScalingToRef(e,r,n,a),a},t.ScalingToRef=function(e,r,n,a){t.FromValuesToRef(e,0,0,0,0,r,0,0,0,0,n,0,0,0,0,1,a),a._updateIdentityStatus(1===e&&1===r&&1===n)},t.Translation=function(e,r,n){var a=new t;return t.TranslationToRef(e,r,n,a),a},t.TranslationToRef=function(e,r,n,a){t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e,r,n,1,a),a._updateIdentityStatus(0===e&&0===r&&0===n)},t.Lerp=function(e,r,n){var a=new t;return t.LerpToRef(e,r,n,a),a},t.LerpToRef=function(t,e,r,n){for(var a=n._m,o=t.m,i=e.m,u=0;u<16;u++)a[u]=o[u]*(1-r)+i[u]*r;n._markAsUpdated()},t.DecomposeLerp=function(e,r,n){var a=new t;return t.DecomposeLerpToRef(e,r,n,a),a},t.DecomposeLerpToRef=function(e,r,n,a){var o=l.Vector3[0],i=l.Quaternion[0],u=l.Vector3[1];e.decompose(o,i,u);var s=l.Vector3[2],P=l.Quaternion[1],f=l.Vector3[3];r.decompose(s,P,f);var d=l.Vector3[4];v.LerpToRef(o,s,n,d);var p=l.Quaternion[2];c.SlerpToRef(i,P,n,p);var b=l.Vector3[5];v.LerpToRef(u,f,n,b),t.ComposeToRef(d,p,b,a)},t.LookAtLH=function(e,r,n){var a=new t;return t.LookAtLHToRef(e,r,n,a),a},t.LookAtLHToRef=function(e,r,n,a){var o=l.Vector3[0],i=l.Vector3[1],u=l.Vector3[2];r.subtractToRef(e,u),u.normalize(),v.CrossToRef(n,u,o);var s=o.lengthSquared();0===s?o.x=1:o.normalizeFromLength(Math.sqrt(s)),v.CrossToRef(u,o,i),i.normalize();var c=-v.Dot(o,e),P=-v.Dot(i,e),f=-v.Dot(u,e);t.FromValuesToRef(o._x,i._x,u._x,0,o._y,i._y,u._y,0,o._z,i._z,u._z,0,c,P,f,1,a)},t.LookAtRH=function(e,r,n){var a=new t;return t.LookAtRHToRef(e,r,n,a),a},t.LookAtRHToRef=function(e,r,n,a){var o=l.Vector3[0],i=l.Vector3[1],u=l.Vector3[2];e.subtractToRef(r,u),u.normalize(),v.CrossToRef(n,u,o);var s=o.lengthSquared();0===s?o.x=1:o.normalizeFromLength(Math.sqrt(s)),v.CrossToRef(u,o,i),i.normalize();var c=-v.Dot(o,e),P=-v.Dot(i,e),f=-v.Dot(u,e);t.FromValuesToRef(o._x,i._x,u._x,0,o._y,i._y,u._y,0,o._z,i._z,u._z,0,c,P,f,1,a)},t.OrthoLH=function(e,r,n,a){var o=new t;return t.OrthoLHToRef(e,r,n,a,o),o},t.OrthoLHToRef=function(e,r,n,a,o){var i=2/e,u=2/r,v=2/(a-n),s=-(a+n)/(a-n);t.FromValuesToRef(i,0,0,0,0,u,0,0,0,0,v,0,0,0,s,1,o),o._updateIdentityStatus(1===i&&1===u&&1===v&&0===s)},t.OrthoOffCenterLH=function(e,r,n,a,o,i){var u=new t;return t.OrthoOffCenterLHToRef(e,r,n,a,o,i,u),u},t.OrthoOffCenterLHToRef=function(e,r,n,a,o,i,u){var v=2/(r-e),s=2/(a-n),c=2/(i-o),P=-(i+o)/(i-o),l=(e+r)/(e-r),f=(a+n)/(n-a);t.FromValuesToRef(v,0,0,0,0,s,0,0,0,0,c,0,l,f,P,1,u),u._markAsUpdated()},t.OrthoOffCenterRH=function(e,r,n,a,o,i){var u=new t;return t.OrthoOffCenterRHToRef(e,r,n,a,o,i,u),u},t.OrthoOffCenterRHToRef=function(e,r,n,a,o,i,u){t.OrthoOffCenterLHToRef(e,r,n,a,o,i,u),u._m[10]*=-1},t.PerspectiveLH=function(e,r,n,a){var o=new t,i=2*n/e,u=2*n/r,v=(a+n)/(a-n),s=-2*a*n/(a-n);return t.FromValuesToRef(i,0,0,0,0,u,0,0,0,0,v,1,0,0,s,0,o),o._updateIdentityStatus(!1),o},t.PerspectiveFovLH=function(e,r,n,a){var o=new t;return t.PerspectiveFovLHToRef(e,r,n,a,o),o},t.PerspectiveFovLHToRef=function(e,r,n,a,o,i){void 0===i&&(i=!0);var u=n,v=a,s=1/Math.tan(.5*e),c=i?s/r:s,P=i?s:s*r,l=(v+u)/(v-u),f=-2*v*u/(v-u);t.FromValuesToRef(c,0,0,0,0,P,0,0,0,0,l,1,0,0,f,0,o),o._updateIdentityStatus(!1)},t.PerspectiveFovReverseLHToRef=function(e,r,n,a,o,i){void 0===i&&(i=!0);var u=1/Math.tan(.5*e),v=i?u/r:u,s=i?u:u*r;t.FromValuesToRef(v,0,0,0,0,s,0,0,0,0,-n,1,0,0,1,0,o),o._updateIdentityStatus(!1)},t.PerspectiveFovRH=function(e,r,n,a){var o=new t;return t.PerspectiveFovRHToRef(e,r,n,a,o),o},t.PerspectiveFovRHToRef=function(e,r,n,a,o,i){void 0===i&&(i=!0);var u=n,v=a,s=1/Math.tan(.5*e),c=i?s/r:s,P=i?s:s*r,l=-(v+u)/(v-u),f=-2*v*u/(v-u);t.FromValuesToRef(c,0,0,0,0,P,0,0,0,0,l,-1,0,0,f,0,o),o._updateIdentityStatus(!1)},t.PerspectiveFovReverseRHToRef=function(e,r,n,a,o,i){void 0===i&&(i=!0);var u=1/Math.tan(.5*e),v=i?u/r:u,s=i?u:u*r;t.FromValuesToRef(v,0,0,0,0,s,0,0,0,0,-n,-1,0,0,-1,0,o),o._updateIdentityStatus(!1)},t.PerspectiveFovWebVRToRef=function(t,e,r,n,a){void 0===a&&(a=!1);var o=a?-1:1,i=Math.tan(t.upDegrees*Math.PI/180),u=Math.tan(t.downDegrees*Math.PI/180),v=Math.tan(t.leftDegrees*Math.PI/180),s=Math.tan(t.rightDegrees*Math.PI/180),c=2/(v+s),P=2/(i+u),l=n._m;l[0]=c,l[1]=l[2]=l[3]=l[4]=0,l[5]=P,l[6]=l[7]=0,l[8]=(v-s)*c*.5,l[9]=-(i-u)*P*.5,l[10]=-r/(e-r),l[11]=1*o,l[12]=l[13]=l[15]=0,l[14]=-2*r*e/(r-e),n._markAsUpdated()},t.GetFinalMatrix=function(e,r,n,a,o,i){var u=e.width,v=e.height,s=e.x,c=e.y,P=t.FromValues(u/2,0,0,0,0,-v/2,0,0,0,0,i-o,0,s+u/2,v/2+c,o,1),f=l.Matrix[0];return r.multiplyToRef(n,f),f.multiplyToRef(a,f),f.multiply(P)},t.GetAsMatrix2x2=function(t){var e=t.m,r=[e[0],e[1],e[4],e[5]];return i.a.MatrixUse64Bits?r:new Float32Array(r)},t.GetAsMatrix3x3=function(t){var e=t.m,r=[e[0],e[1],e[2],e[4],e[5],e[6],e[8],e[9],e[10]];return i.a.MatrixUse64Bits?r:new Float32Array(r)},t.Transpose=function(e){var r=new t;return t.TransposeToRef(e,r),r},t.TransposeToRef=function(t,e){var r=e._m,n=t.m;r[0]=n[0],r[1]=n[4],r[2]=n[8],r[3]=n[12],r[4]=n[1],r[5]=n[5],r[6]=n[9],r[7]=n[13],r[8]=n[2],r[9]=n[6],r[10]=n[10],r[11]=n[14],r[12]=n[3],r[13]=n[7],r[14]=n[11],r[15]=n[15],e._updateIdentityStatus(t._isIdentity,t._isIdentityDirty)},t.Reflection=function(e){var r=new t;return t.ReflectionToRef(e,r),r},t.ReflectionToRef=function(e,r){e.normalize();var n=e.normal.x,a=e.normal.y,o=e.normal.z,i=-2*n,u=-2*a,v=-2*o;t.FromValuesToRef(i*n+1,u*n,v*n,0,i*a,u*a+1,v*a,0,i*o,u*o,v*o+1,0,i*e.d,u*e.d,v*e.d,1,r)},t.FromXYZAxesToRef=function(e,r,n,a){t.FromValuesToRef(e._x,e._y,e._z,0,r._x,r._y,r._z,0,n._x,n._y,n._z,0,0,0,0,1,a)},t.FromQuaternionToRef=function(t,e){var r=t._x*t._x,n=t._y*t._y,a=t._z*t._z,o=t._x*t._y,i=t._z*t._w,u=t._z*t._x,v=t._y*t._w,s=t._y*t._z,c=t._x*t._w;e._m[0]=1-2*(n+a),e._m[1]=2*(o+i),e._m[2]=2*(u-v),e._m[3]=0,e._m[4]=2*(o-i),e._m[5]=1-2*(a+r),e._m[6]=2*(s+c),e._m[7]=0,e._m[8]=2*(u+v),e._m[9]=2*(s-c),e._m[10]=1-2*(n+r),e._m[11]=0,e._m[12]=0,e._m[13]=0,e._m[14]=0,e._m[15]=1,e._markAsUpdated()},t._updateFlagSeed=0,t._identityReadOnly=t.Identity(),t}(),l=function(){function t(){}return t.Vector3=a.BuildArray(6,v.Zero),t.Matrix=a.BuildArray(2,P.Identity),t.Quaternion=a.BuildArray(3,c.Zero),t}(),f=function(){function t(){}return t.Vector2=a.BuildArray(3,u.Zero),t.Vector3=a.BuildArray(13,v.Zero),t.Vector4=a.BuildArray(3,s.Zero),t.Quaternion=a.BuildArray(2,c.Zero),t.Matrix=a.BuildArray(8,P.Identity),t}();o.RegisteredTypes["BABYLON.Vector2"]=u,o.RegisteredTypes["BABYLON.Vector3"]=v,o.RegisteredTypes["BABYLON.Vector4"]=s,o.RegisteredTypes["BABYLON.Matrix"]=P}])}}]);